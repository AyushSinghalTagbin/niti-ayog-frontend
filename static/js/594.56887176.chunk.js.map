{"version":3,"file":"static/js/594.56887176.chunk.js","mappings":"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","sources":["layouts/full-layout/sidebar/Menuitems.js","components/custom-scroll/Scrollbar.js","layouts/full-layout/sidebar/Sidebar.js","layouts/full-layout/header/Header.js","layouts/full-layout/FullLayout.js"],"sourcesContent":["const Menuitems = [\r\n  {\r\n    navlabel: true,\r\n    subheader: 'View database tables',\r\n    link: '/dashboards/tables',\r\n  },\r\n  {\r\n    navlabel: true,\r\n    subheader: 'Add to Strategy Room',\r\n    link: '/dashboards/addData',\r\n  },\r\n  {\r\n    navlabel: true,\r\n    subheader: 'Sector builder',\r\n    link: '/dashboards/builder',\r\n  },\r\n];\r\n\r\nexport default Menuitems;\r\n","import React, { forwardRef } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport { Box } from '@mui/material';\r\n\r\nconst Scrollbar = forwardRef((props, ref) => {\r\n  const { children, ...other } = props;\r\n\r\n  const isMobile = /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(\r\n    navigator.userAgent,\r\n  );\r\n\r\n  if (isMobile) {\r\n    return (\r\n      <Box ref={ref} sx={{ overflowX: 'auto' }}>\r\n        {children}\r\n      </Box>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <PerfectScrollbar ref={ref} {...other}>\r\n      {children}\r\n    </PerfectScrollbar>\r\n  );\r\n});\r\n\r\nScrollbar.propTypes = {\r\n  children: PropTypes.node,\r\n};\r\n\r\nexport default Scrollbar;\r\n","import React from 'react';\r\nimport { useLocation, useNavigate } from 'react-router';\r\nimport { NavLink } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n  Box,\r\n  Drawer,\r\n  useMediaQuery,\r\n  List,\r\n  Typography,\r\n  ListItem,\r\n  Collapse,\r\n  ListItemIcon,\r\n  ListItemText,\r\n} from '@mui/material';\r\nimport FeatherIcon from 'feather-icons-react';\r\nimport { SidebarWidth } from '../../../assets/global/Theme-variable';\r\nimport Menuitems from './Menuitems';\r\nimport Scrollbar from '../../../components/custom-scroll/Scrollbar';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nconst Sidebar = ({ isMobileSidebarOpen, onSidebarClose, isSidebarOpen }) => {\r\n  const navigate = useNavigate();\r\n  const [open, setOpen] = React.useState(true);\r\n  const { pathname } = useLocation();\r\n  const { t } = useTranslation();\r\n  const pathDirect = pathname;\r\n  const pathWithoutLastPart = pathname.slice(0, pathname.lastIndexOf('/'));\r\n  const lgUp = useMediaQuery((theme) => theme.breakpoints.up('lg'));\r\n\r\n  const handleClick = (index) => {\r\n    if (open === index) {\r\n      setOpen((prevopen) => !prevopen);\r\n    } else {\r\n      setOpen(index);\r\n    }\r\n  };\r\n\r\n  const SidebarContent = (\r\n    <Scrollbar\r\n      style={{\r\n        height: 'calc(100vh - 5px)',\r\n      }}\r\n    >\r\n      <Box sx={{ p: 2 }}>\r\n        <Box>\r\n          <List>\r\n            {Menuitems.map((item, index) => {\r\n              if (item.subheader) {\r\n                return (\r\n                  <li key={item.subheader}>\r\n                    <Typography\r\n                      variant=\"subtitle2\"\r\n                      onClick={() => navigate(item.link)}\r\n                      sx={{\r\n                        my: 2,\r\n                        mt: 2,\r\n                        '@media only screen and (min-width: 3600px)': {\r\n                          fontSize: '1.6rem',\r\n                        },\r\n                        '@media only screen and (max-width: 3600px)': {\r\n                          fontSize: '1rem',\r\n                        },\r\n                        cursor: 'pointer',\r\n                      }}\r\n                    >\r\n                      {t(item.subheader)}\r\n                    </Typography>\r\n                  </li>\r\n                );\r\n              } else if (item.children) {\r\n                return (\r\n                  <React.Fragment key={item.title}>\r\n                    <ListItem\r\n                      button\r\n                      component=\"li\"\r\n                      onClick={() => handleClick(index)}\r\n                      selected={pathWithoutLastPart === item.href}\r\n                      sx={{\r\n                        mb: 1,\r\n                        ...(pathWithoutLastPart === item.href && {\r\n                          color: 'white',\r\n                          backgroundColor: (theme) => `${theme.palette.primary.main}!important`,\r\n                        }),\r\n                      }}\r\n                    >\r\n                      <ListItemIcon\r\n                        sx={{\r\n                          ...(pathWithoutLastPart === item.href && {\r\n                            color: 'white',\r\n                          }),\r\n                        }}\r\n                      >\r\n                        <FeatherIcon icon={item.icon} width=\"20\" height=\"20\" />\r\n                      </ListItemIcon>\r\n                      <ListItemText>{item.title}</ListItemText>\r\n                      {index === open || pathWithoutLastPart === item.href ? (\r\n                        <FeatherIcon icon=\"chevron-down\" size=\"16\" />\r\n                      ) : (\r\n                        <FeatherIcon icon=\"chevron-right\" size=\"16\" />\r\n                      )}\r\n                    </ListItem>\r\n                    <Collapse in={index === open} timeout=\"auto\" unmountOnExit>\r\n                      <List component=\"li\" disablePadding>\r\n                        {item.children.map((child) => {\r\n                          return (\r\n                            <ListItem\r\n                              key={child.title}\r\n                              button\r\n                              component={NavLink}\r\n                              to={child.href}\r\n                              onClick={onSidebarClose}\r\n                              selected={pathDirect === child.href}\r\n                              sx={{\r\n                                mb: 1,\r\n                                ...(pathDirect === child.href && {\r\n                                  color: 'primary.main',\r\n                                  backgroundColor: 'transparent!important',\r\n                                }),\r\n                              }}\r\n                            >\r\n                              <ListItemIcon\r\n                                sx={{\r\n                                  svg: { width: '14px', marginLeft: '3px' },\r\n                                  ...(pathDirect === child.href && {\r\n                                    color: 'primary.main',\r\n                                  }),\r\n                                }}\r\n                              >\r\n                                <FeatherIcon icon={child.icon} width=\"20\" height=\"20\" />\r\n                              </ListItemIcon>\r\n                              <ListItemText>{child.title}</ListItemText>\r\n                            </ListItem>\r\n                          );\r\n                        })}\r\n                      </List>\r\n                    </Collapse>\r\n                  </React.Fragment>\r\n                );\r\n                // {/********If Sub No Menu**********/}\r\n              } else {\r\n                return (\r\n                  <List component=\"li\" disablePadding key={item.title}>\r\n                    <ListItem\r\n                      onClick={() => handleClick(index)}\r\n                      button\r\n                      component={NavLink}\r\n                      to={item.href}\r\n                      selected={pathDirect === item.href}\r\n                      sx={{\r\n                        mb: 1,\r\n                        ...(pathDirect === item.href && {\r\n                          color: 'white',\r\n                          backgroundColor: (theme) => `${theme.palette.primary.main}!important`,\r\n                        }),\r\n                      }}\r\n                    >\r\n                      <ListItemIcon\r\n                        sx={{\r\n                          ...(pathDirect === item.href && { color: 'white' }),\r\n                        }}\r\n                      >\r\n                        <FeatherIcon icon={item.icon} width=\"20\" height=\"20\" />\r\n                      </ListItemIcon>\r\n                      <ListItemText onClick={onSidebarClose}>{item.title}</ListItemText>\r\n                    </ListItem>\r\n                  </List>\r\n                );\r\n              }\r\n            })}\r\n          </List>\r\n        </Box>\r\n      </Box>\r\n    </Scrollbar>\r\n  );\r\n  if (lgUp) {\r\n    return (\r\n      <Drawer\r\n        anchor=\"left\"\r\n        open={isSidebarOpen}\r\n        variant=\"persistent\"\r\n        PaperProps={{\r\n          sx: {\r\n            width: SidebarWidth,\r\n            border: '0 !important',\r\n            boxShadow: '0px 7px 30px 0px rgb(113 122 131 / 11%)',\r\n          },\r\n        }}\r\n      >\r\n        {SidebarContent}\r\n      </Drawer>\r\n    );\r\n  }\r\n  return (\r\n    <Drawer\r\n      anchor=\"left\"\r\n      open={isMobileSidebarOpen}\r\n      onClose={onSidebarClose}\r\n      PaperProps={{\r\n        sx: {\r\n          width: SidebarWidth,\r\n          border: '0 !important',\r\n        },\r\n      }}\r\n      variant=\"temporary\"\r\n    >\r\n      {SidebarContent}\r\n    </Drawer>\r\n  );\r\n};\r\n\r\nSidebar.propTypes = {\r\n  isMobileSidebarOpen: PropTypes.bool,\r\n  onSidebarClose: PropTypes.func,\r\n  isSidebarOpen: PropTypes.bool,\r\n};\r\n\r\nexport default Sidebar;\r\n","import React from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport FeatherIcon from 'feather-icons-react';\r\nimport { AppBar, IconButton, Toolbar, Button } from '@mui/material';\r\nimport PropTypes from 'prop-types';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nconst Header = ({ sx, customClass, toggleSidebar }) => {\r\n  const navigate = useNavigate();\r\n  const { t } = useTranslation();\r\n\r\n  return (\r\n    <AppBar sx={sx} elevation={0} className={customClass}>\r\n      <Toolbar>\r\n        <IconButton\r\n          edge=\"start\"\r\n          color=\"inherit\"\r\n          aria-label=\"menu\"\r\n          onClick={toggleSidebar}\r\n          size=\"large\"\r\n          sx={{\r\n            display: {\r\n              lg: 'flex',\r\n            },\r\n            svg: {\r\n              '@media only screen and (min-width: 3600px)': {\r\n                width: {\r\n                  lg: '5rem',\r\n                },\r\n                height: {\r\n                  lg: '5rem',\r\n                },\r\n              },\r\n            },\r\n          }}\r\n        >\r\n          <FeatherIcon icon=\"menu\" />\r\n        </IconButton>\r\n\r\n        <Button\r\n          sx={{\r\n            mt: 2,\r\n            display: 'block',\r\n            width: 'fit-content',\r\n            ml: 'auto',\r\n            '@media only screen and (min-width: 3600px)': {\r\n              fontSize: '4rem',\r\n            },\r\n          }}\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          size=\"large\"\r\n          onClick={() => {\r\n            localStorage.removeItem('USER_DETAILS');\r\n            navigate('/auth/login');\r\n          }}\r\n        >\r\n          {t('logout')}\r\n        </Button>\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n};\r\n\r\nHeader.propTypes = {\r\n  sx: PropTypes.object,\r\n  customClass: PropTypes.string,\r\n  toggleSidebar: PropTypes.func,\r\n  toggleMobileSidebar: PropTypes.func,\r\n};\r\n\r\nexport default Header;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { experimentalStyled, useMediaQuery, Container } from '@mui/material';\r\nimport { Outlet, useNavigate } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\nimport Sidebar from './sidebar/Sidebar';\r\nimport Header from './header/Header';\r\nimport { TopbarHeight, SidebarWidth } from '../../assets/global/Theme-variable';\r\n\r\nconst MainWrapper = experimentalStyled('div')(() => ({\r\n  display: 'flex',\r\n  overflow: 'hidden',\r\n  minHeight: '97vh',\r\n  '@media only screen and (min-width: 3600px)': {\r\n    minHeight: '90vh', // Min height for small screens\r\n  },\r\n  width: '100%',\r\n}));\r\nconst PageWrapper = experimentalStyled('div')(({ theme }) => ({\r\n  display: 'flex',\r\n  flex: '1 1 auto',\r\n  overflow: 'hidden',\r\n\r\n  backgroundColor: theme.palette.background.default,\r\n  [theme.breakpoints.up('lg')]: {\r\n    paddingTop: TopbarHeight,\r\n  },\r\n  [theme.breakpoints.down('lg')]: {\r\n    paddingTop: '64px',\r\n  },\r\n}));\r\n\r\nconst FullLayout = () => {\r\n  const navigate = useNavigate();\r\n  const [isSidebarOpen, setSidebarOpen] = useState(true);\r\n  const [isMobileSidebarOpen, setMobileSidebarOpen] = useState(false);\r\n  const customizer = useSelector((state) => state.CustomizerReducer);\r\n  const lgUp = useMediaQuery((theme) => theme.breakpoints.up('lg'));\r\n\r\n  useEffect(() => {\r\n    const isAuth = localStorage.getItem('USER_DETAILS');\r\n    if (!isAuth) {\r\n      return navigate('/auth/login');\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <MainWrapper className={customizer.activeMode === 'dark' ? 'darkbg' : ''}>\r\n      <Header\r\n        sx={{\r\n          paddingLeft: isSidebarOpen && lgUp ? `${SidebarWidth}px` : '',\r\n          backgroundColor: customizer.activeMode === 'dark' ? '#20232a' : '#fafbfb',\r\n        }}\r\n        toggleSidebar={() => setSidebarOpen(!isSidebarOpen)}\r\n        toggleMobileSidebar={() => setMobileSidebarOpen(true)}\r\n      />\r\n\r\n      <Sidebar\r\n        isSidebardir={customizer.activeDir === 'ltr' ? 'left' : 'right'}\r\n        isSidebarOpen={isSidebarOpen}\r\n        isMobileSidebarOpen={isMobileSidebarOpen}\r\n        onSidebarClose={() => setMobileSidebarOpen(false)}\r\n      />\r\n\r\n      <PageWrapper>\r\n        <Container\r\n          maxWidth={false}\r\n          sx={{\r\n            paddingTop: '20px',\r\n            paddingLeft: isSidebarOpen && lgUp ? `${SidebarWidth}px !important` : '',\r\n            width: '100%',\r\n            maxWidth: '95vw',\r\n          }}\r\n        >\r\n          <Outlet />\r\n        </Container>\r\n      </PageWrapper>\r\n    </MainWrapper>\r\n  );\r\n};\r\n\r\nexport default FullLayout;\r\n"],"names":["navlabel","subheader","link","forwardRef","props","ref","children","other","_objectWithoutProperties","_excluded","test","navigator","userAgent","_jsx","Box","sx","overflowX","PerfectScrollbar","_objectSpread","_ref","isMobileSidebarOpen","onSidebarClose","isSidebarOpen","navigate","useNavigate","_React$useState","React","_React$useState2","_slicedToArray","open","setOpen","pathname","useLocation","t","useTranslation","pathDirect","pathWithoutLastPart","slice","lastIndexOf","lgUp","useMediaQuery","theme","breakpoints","up","handleClick","index","prevopen","SidebarContent","Scrollbar","style","height","p","List","Menuitems","map","item","Typography","variant","onClick","my","mt","fontSize","cursor","_jsxs","ListItem","button","component","selected","href","mb","color","backgroundColor","concat","palette","primary","main","ListItemIcon","FeatherIcon","icon","width","ListItemText","title","size","Collapse","in","timeout","unmountOnExit","disablePadding","child","NavLink","to","svg","marginLeft","Drawer","anchor","PaperProps","SidebarWidth","border","boxShadow","onClose","customClass","toggleSidebar","AppBar","elevation","className","Toolbar","IconButton","edge","display","lg","Button","ml","localStorage","removeItem","MainWrapper","experimentalStyled","overflow","minHeight","PageWrapper","_ref2","flex","background","default","_defineProperty","paddingTop","TopbarHeight","down","_useState","useState","_useState2","setSidebarOpen","_useState3","_useState4","setMobileSidebarOpen","customizer","useSelector","state","CustomizerReducer","useEffect","getItem","activeMode","Header","paddingLeft","toggleMobileSidebar","Sidebar","isSidebardir","activeDir","Container","maxWidth","Outlet"],"sourceRoot":""}