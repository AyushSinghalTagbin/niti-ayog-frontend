{"version":3,"file":"static/js/922.c073a258.chunk.js","mappings":"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","sources":["api/index.js","components/container/PageContainer.js","components/forms/custom-elements/CustomFormLabel.js","components/forms/custom-elements/CustomTextField.js","components/forms/input/index.js","constants.js","utils/index.js","views/dashboards/tables/index.js"],"sourcesContent":["import axios from 'axios';\r\nimport { BACKEND_CONNECTION_URL } from '../constants';\r\n\r\nconst BASE_URL = BACKEND_CONNECTION_URL;\r\n\r\naxios.defaults.baseURL = BASE_URL;\r\n\r\nexport const getTables = async () => {\r\n  return await axios.get(`table/listNames`);\r\n};\r\n\r\nexport const getTableData = async (data) => {\r\n  return await axios.get(\r\n    `table/data?table_name=${data.tableName}&limit=${data.limit}&skip=${data.skip}`,\r\n  );\r\n};\r\n\r\nexport const getLevels = async () => {\r\n  return await axios.get(`levels`);\r\n};\r\n\r\nexport const getComponents = async () => {\r\n  return await axios.get(`components`);\r\n};\r\n\r\nexport const getLevelsRefData = async (payload) => {\r\n  return await axios.post('levels/data', payload);\r\n};\r\n\r\nexport const getLayoutConfig = async (payload) => {\r\n  return await axios.post('layout-config', payload);\r\n};\r\n\r\nexport const createLayoutConfig = async (payload) => {\r\n  return await axios.post('layout-config/bulk-create', payload);\r\n};\r\n\r\nexport const addDataToTable = async (payload) => {\r\n  return await axios.post('table/addDataToExisting', payload);\r\n};\r\n\r\nexport const createTable = async (payload) => {\r\n  const data = new FormData();\r\n  let queryParams = '';\r\n  data.append('file', payload.file);\r\n  data.append('table_description', payload.table_description);\r\n  data.append('tableName', payload.tableName);\r\n  queryParams += `selectionType=${payload.selectionType}`;\r\n  data.append('selectionType', payload.selectionType);\r\n  if (payload.configID) {\r\n    queryParams += `&config_id=${payload.configID}`;\r\n    data.append('config_id', payload.configID);\r\n  }\r\n  return await axios.post(`table/fileIntoDb?${queryParams}`, data);\r\n};\r\n\r\nexport const loginUser = async (payload) => {\r\n  return await axios.post('authenticate', payload);\r\n};\r\n\r\nexport const addDataToTableFile = async (payload) => {\r\n  const data = new FormData();\r\n  data.append('file', payload.file);\r\n  data.append('tableName', payload.tableName);\r\n  return await axios.post('table/addDataToExisting', data);\r\n};\r\n\r\nexport const createBuilder = async (payload) => {\r\n  return await axios.post(`layout-config/builder-ui/create`, payload);\r\n};\r\n\r\nexport const getBuilder = async (payload) => {\r\n  return await axios.post(`layout-config/builder-ui/list`, payload);\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Helmet } from 'react-helmet';\r\n\r\nconst PageContainer = ({ title, description, children }) => (\r\n  <>\r\n    <Helmet>\r\n      <title>{title}</title>\r\n      <meta name=\"description\" content={description} />\r\n    </Helmet>\r\n    {children}\r\n  </>\r\n);\r\n\r\nPageContainer.propTypes = {\r\n  title: PropTypes.string,\r\n  description: PropTypes.string,\r\n  children: PropTypes.node,\r\n};\r\n\r\nexport default PageContainer;\r\n","import React from 'react';\r\nimport { styled } from '@mui/material/styles';\r\nimport { Typography } from '@mui/material';\r\n\r\nconst CustomFormLabel = styled((props) => (\r\n  <Typography variant=\"h6\" {...props} component=\"label\" htmlFor={props.htmlFor} />\r\n))(() => ({\r\n  marginBottom: '5px',\r\n  marginTop: '15px',\r\n  display: 'block',\r\n}));\r\n\r\nexport default CustomFormLabel;\r\n","import React from 'react';\r\nimport { styled } from '@mui/material/styles';\r\nimport { TextField } from '@mui/material';\r\n\r\nconst CustomTextField = styled((props) => <TextField {...props} />)(({ theme, customheight }) => ({\r\n  '& .MuiOutlinedInput-input::-webkit-input-placeholder': {\r\n    color: '#767e89',\r\n    opacity: '1',\r\n  },\r\n  '& .MuiOutlinedInput-notchedOutline': {\r\n    borderColor: `${theme.palette.mode === 'dark' ? 'rgba(255, 255, 255, 0.12)' : '#dee3e9'}`,\r\n  },\r\n  '& .MuiOutlinedInput-input.Mui-disabled': {\r\n    backgroundColor: `${theme.palette.mode === 'dark' ? 'rgba(0, 0, 0, 0.12)' : '#f8f9fb'}`,\r\n  },\r\n  '& .MuiOutlinedInput-input.Mui-disabled::-webkit-input-placeholder': {\r\n    color: '#767e89',\r\n    opacity: '1',\r\n  },\r\n  input: {\r\n    border: '1px solid grey',\r\n  },\r\n  '@media only screen and (min-width: 3600px)': {\r\n    input: {\r\n      height: customheight || '4rem',\r\n      fontSize: '5rem',\r\n      padding: '3rem',\r\n    },\r\n  },\r\n  '@media only screen and (max-width: 3600px)': {\r\n    input: {\r\n      height: '1rem',\r\n      fontSize: '0.8rem',\r\n      padding: '12px',\r\n    },\r\n  },\r\n}));\r\n\r\nexport default CustomTextField;\r\n","import React, { useRef, useState } from 'react';\r\nimport CustomTextField from '../custom-elements/CustomTextField';\r\nimport CustomFormLabel from '../custom-elements/CustomFormLabel';\r\nimport { useTranslation } from 'react-i18next';\r\nimport Keyboard from 'react-simple-keyboard';\r\nimport 'react-simple-keyboard/build/css/index.css';\r\nimport { SHOW_VIRTUAL_KEYBOARD } from '../../../constants';\r\n\r\nconst Input = (props) => {\r\n  const { t } = useTranslation();\r\n  const keyboard = useRef();\r\n  const [isFocus, setIsFocus] = useState(undefined);\r\n  const [layout, setLayout] = useState('default');\r\n\r\n  const onChange = (input) => {\r\n    props.onChange(input);\r\n  };\r\n\r\n  const handleShift = () => {\r\n    const newLayoutName = layout === 'default' ? 'shift' : 'default';\r\n    setLayout(newLayoutName);\r\n  };\r\n\r\n  const onKeyPress = (button) => {\r\n    if (button === '{shift}' || button === '{lock}') handleShift();\r\n    if (button === '{enter}') {\r\n      setTimeout(() => {\r\n        setIsFocus(undefined);\r\n      }, 100);\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      {isFocus && SHOW_VIRTUAL_KEYBOARD && props.type !== 'file' && (\r\n        <div\r\n          style={{\r\n            position: 'absolute',\r\n            inset: 0,\r\n            width: '100vw',\r\n            height: '100vh',\r\n            zIndex: 2,\r\n          }}\r\n          onClick={() => setIsFocus(undefined)}\r\n        />\r\n      )}\r\n      <div style={{ position: 'relative' }}>\r\n        {props.label && <CustomFormLabel htmlFor={props.id}>{t(props.label)}</CustomFormLabel>}\r\n        <CustomTextField\r\n          id={props.id}\r\n          variant=\"outlined\"\r\n          fullWidth\r\n          inputRef={props.inputFile}\r\n          placeholder={t(props.placeholder)}\r\n          type={props.type}\r\n          onFocus={() => setIsFocus(true)}\r\n          customheight={props.customheight}\r\n          value={props.value}\r\n          inputProps={{ accept: props.accept }}\r\n          onChange={(e) => {\r\n            if (props.type === 'file') {\r\n              props.onChange(e.target.files[0]);\r\n            } else {\r\n              props.onChange(e.target.value);\r\n            }\r\n          }}\r\n          sx={{ ...props.textFieldStyles }}\r\n        />\r\n        {SHOW_VIRTUAL_KEYBOARD && isFocus && props.type !== \"file\" && (\r\n          <div\r\n            style={{\r\n              position: 'absolute',\r\n              top: 300,\r\n              left: 300,\r\n              width: '25vw',\r\n              zIndex: 3,\r\n            }}\r\n          >\r\n            <Keyboard\r\n              keyboardRef={(r) => (keyboard.current = r)}\r\n              layoutName={layout}\r\n              onChange={onChange}\r\n              onKeyPress={onKeyPress}\r\n            />\r\n          </div>\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\nexport default Input;\r\n","export const WIDTH = 1920;\r\nexport const HEIGHT = 1080;\r\nexport const DIVISION_MULTIPLE = 12;\r\nexport const SCREENS = [\r\n  {\r\n    name: 'DISPLAY_1',\r\n    x: 0,\r\n    y: 0,\r\n    WIDTH: WIDTH * 2,\r\n    HEIGHT: HEIGHT * 2,\r\n    VERTICAL_SCREENS: 2,\r\n    HORIZONTAL_SCREENS: 2,\r\n  },\r\n  {\r\n    name: 'DISPLAY_2',\r\n    x: 0,\r\n    y: 0,\r\n    WIDTH: WIDTH,\r\n    HEIGHT: HEIGHT * 2,\r\n    VERTICAL_SCREENS: 2,\r\n    HORIZONTAL_SCREENS: 1,\r\n  },\r\n  {\r\n    name: 'DISPLAY_3',\r\n    x: WIDTH,\r\n    y: 0,\r\n    WIDTH: WIDTH * 7,\r\n    HEIGHT: HEIGHT * 2,\r\n    VERTICAL_SCREENS: 2,\r\n    HORIZONTAL_SCREENS: 7,\r\n  },\r\n  {\r\n    name: 'DISPLAY_4',\r\n    x: 0,\r\n    y: 0,\r\n    WIDTH: WIDTH,\r\n    HEIGHT: HEIGHT * 2,\r\n    VERTICAL_SCREENS: 2,\r\n    HORIZONTAL_SCREENS: 1,\r\n  },\r\n  {\r\n    name: 'DISPLAY_5',\r\n    x: WIDTH,\r\n    y: 0,\r\n    WIDTH: WIDTH * 2,\r\n    HEIGHT: HEIGHT * 2,\r\n    VERTICAL_SCREENS: 2,\r\n    HORIZONTAL_SCREENS: 2,\r\n  },\r\n  {\r\n    name: 'CONNECTING_SCREEN_1',\r\n    x: 0,\r\n    y: 0,\r\n    WIDTH: WIDTH,\r\n    HEIGHT: HEIGHT,\r\n    VERTICAL_SCREENS: 1,\r\n    HORIZONTAL_SCREENS: 1,\r\n  },\r\n  {\r\n    name: 'CONNECTING_SCREEN_2',\r\n    x: 0,\r\n    y: 0,\r\n    WIDTH: WIDTH,\r\n    HEIGHT: HEIGHT,\r\n    VERTICAL_SCREENS: 1,\r\n    HORIZONTAL_SCREENS: 1,\r\n  },\r\n  {\r\n    name: 'CONNECTING_SCREEN_3',\r\n    x: 0,\r\n    y: 0,\r\n    WIDTH: WIDTH,\r\n    HEIGHT: HEIGHT,\r\n    VERTICAL_SCREENS: 1,\r\n    HORIZONTAL_SCREENS: 1,\r\n  },\r\n];\r\n\r\n//CHART\r\nexport const LINE_CHART = 'LINE_CHART';\r\nexport const SMOOTH_LINE_CHART = 'SMOOTH_LINE_CHART';\r\nexport const AREA_CHART = 'AREA_CHART';\r\nexport const STACKED_LINE_CHART = 'STACKED_LINE_CHART';\r\nexport const STACKED_LINE_AREA_CHART = 'STACKED_LINE_AREA_CHART';\r\nexport const PIE_CHART = 'PIE_CHART';\r\nexport const DONUT_CHART = 'DONUT_CHART';\r\nexport const HALF_DONUT_CHART = 'HALF_DONUT_CHART';\r\nexport const COLUMN_CHART = 'COLUMN_CHART';\r\nexport const BAR_CHART = 'BAR_CHART';\r\nexport const POLAR_CHART = 'POLAR_CHART';\r\nexport const ROSE_PIE_CHART = 'ROSE_PIE_CHART';\r\nexport const FUNNEL_CHART = 'FUNNEL_CHART';\r\nexport const INDIA_STATE_HEAT_MAP = 'INDIA_STATE_HEAT_MAP';\r\nexport const INDIA_DISTRICT_HEAT_MAP = 'INDIA_DISTRICT_HEAT_MAP';\r\nexport const STATE_DISTRICT_HEAT_MAP = 'STATE_DISTRICT_HEAT_MAP';\r\nexport const TREEMAP_CHART = 'TREEMAP_CHART';\r\nexport const STACKED_BAR_CHART = 'STACKED_BAR_CHART';\r\nexport const HORIZONTAL_STACKED_BAR_CHART = 'HORIZONTAL_STACKED_BAR_CHART';\r\nexport const POLAR_STACKED_BAR_CHART = 'POLAR_STACKED_BAR_CHART';\r\nexport const SCATTER_PLOT_CHART = 'SCATTER_PLOT_CHART';\r\nexport const BAR_WITH_LINE = 'BAR_WITH_LINE';\r\n\r\n//Component\r\nexport const TEXT_COMPONENT = 'TEXT_COMPONENT';\r\nexport const IFRAME_COMPONENT = 'IFRAME_COMPONENT';\r\nexport const IMAGE_COMPONENT = 'IMAGE_COMPONENT';\r\nexport const VIDEO_COMPONENT = 'VIDEO_COMPONENT';\r\n\r\n//Config\r\nexport const BACKEND_CONNECTION_URL = `${process.env.REACT_APP_BACKEND_CONNECTION_URL}/admin/api/`;\r\nexport const SHOW_VIRTUAL_KEYBOARD = false;\r\nexport const SOCKET_CONNECTION_URL = process.env.REACT_APP_SOCKET_CONNECTION_URL;\r\nexport const CONNECTION = 'connection';\r\nexport const DISCONNECTION = 'disconnection';\r\n","import Papa from 'papaparse';\r\n\r\nexport const snakeToTitleCase = (snakeStr) => {\r\n  return snakeStr\r\n    .split('_') // Split the string into an array of words\r\n    .map((word) => word.charAt(0).toUpperCase() + word.slice(1).toLowerCase()) // Capitalize the first letter of each word\r\n    .join(' '); // Join the words back into a single string with spaces\r\n};\r\n\r\nexport const formatCSVToDataArray = (csv) => {\r\n  const parsedData = Papa.parse(csv, {\r\n    skipEmptyLines: true,\r\n  });\r\n\r\n  if (parsedData.errors.length > 0) {\r\n    console.error('Error parsing CSV:', parsedData.errors);\r\n    return null;\r\n  }\r\n\r\n  const data = parsedData.data.map((row) => {\r\n    return row.map((cell) => ({ value: cell }));\r\n  });\r\n\r\n  console.timeEnd('CSV Conversion Data');\r\n  return { parsedData, data };\r\n};\r\n\r\nexport const formatXLSXToDataArray = (xlsxData) => {\r\n  const workbook = xlsx.read(xlsxData, { type: 'binary' });\r\n  const sheetName = workbook.SheetNames[0];\r\n  const worksheet = workbook.Sheets[sheetName];\r\n\r\n  const data = xlsx.utils\r\n    .sheet_to_json(worksheet, { header: 1 })\r\n    .map((row) => row.map((cell) => ({ value: cell })));\r\n\r\n  console.timeEnd('XLSX Conversion Data');\r\n  return { data };\r\n};\r\n","import React, { useEffect, useState } from 'react';\r\nimport PageContainer from '../../../components/container/PageContainer';\r\nimport { getTables } from '../../../api';\r\nimport {\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TableRow,\r\n  Typography,\r\n  TableContainer,\r\n  Box,\r\n  Button,\r\n} from '@mui/material';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { snakeToTitleCase } from '../../../utils';\r\nimport { useTranslation } from 'react-i18next';\r\nimport Input from '../../../components/forms/input';\r\n\r\nfunction EnhancedTableHead(props) {\r\n  return (\r\n    <TableHead>\r\n      <TableRow>\r\n        {['Table Name', 'Table Description', 'Actions'].map((headCell, index) => (\r\n          <TableCell\r\n            key={index}\r\n            sx={{\r\n              '@media only screen and (min-width: 3600px)': {\r\n                fontSize: '4rem',\r\n              },\r\n              '@media only screen and (max-width: 3600px)': {\r\n                fontSize: '1.2rem',\r\n                padding: '2px',\r\n              },\r\n              fontWeight: 'bold',\r\n            }}\r\n          >\r\n            {headCell}\r\n          </TableCell>\r\n        ))}\r\n      </TableRow>\r\n    </TableHead>\r\n  );\r\n}\r\n\r\nconst Dashboard1 = () => {\r\n  const { t } = useTranslation();\r\n  const navigate = useNavigate();\r\n  const [tables, setTables] = useState([]);\r\n  const [searchText, setSearchText] = useState(undefined);\r\n  const [filteredTables, setFilteredTables] = useState([]);\r\n\r\n  useEffect(() => {\r\n    if (searchText) {\r\n      setFilteredTables(\r\n        tables.filter((item) => item.table_name.toLowerCase().includes(searchText.toLowerCase())),\r\n      );\r\n    } else {\r\n      setFilteredTables(tables);\r\n    }\r\n  }, [searchText]);\r\n\r\n  useEffect(() => {\r\n    const getTablesData = async () => {\r\n      const res = await getTables();\r\n      if (res.data) {\r\n        setTables(\r\n          res.data.map((o) => {\r\n            return { table_name: o.table_name, table_description: o.table_description };\r\n          }),\r\n        );\r\n        setFilteredTables(\r\n          res.data.map((o) => {\r\n            return { table_name: o.table_name, table_description: o.table_description };\r\n          }),\r\n        );\r\n      }\r\n    };\r\n    getTablesData();\r\n  }, []);\r\n\r\n  return (\r\n    <PageContainer title=\"Table Details\" description=\"Table Details\">\r\n      <div\r\n        style={{\r\n          display: 'flex',\r\n          alignItems: 'center',\r\n          justifyContent: 'center',\r\n          flexDirection: 'column',\r\n        }}\r\n      >\r\n        <Typography\r\n          sx={{\r\n            '@media only screen and (min-width: 3600px)': {\r\n              fontSize: '4rem',\r\n            },\r\n            '@media only screen and (max-width: 3600px)': {\r\n              fontSize: '1.6rem',\r\n            },\r\n            fontWeight: 'bold',\r\n            whiteSpace: 'nowrap',\r\n          }}\r\n        >\r\n          {t('list_of_existing_tables_in_db')}\r\n        </Typography>\r\n        <Box\r\n          sx={{\r\n            display: 'flex',\r\n            alignItems: 'center',\r\n            justifyContent: 'space-between',\r\n            width: '100%',\r\n          }}\r\n        >\r\n          <Button\r\n            color=\"secondary\"\r\n            variant=\"contained\"\r\n            size=\"large\"\r\n            sx={{\r\n              '@media only screen and (min-width: 3600px)': {\r\n                fontSize: '4rem',\r\n                minWidth: '150px',\r\n                mr: 'auto',\r\n              },\r\n              '@media only screen and (max-width: 3600px)': {\r\n                minWidth: '40px',\r\n                m: '0 2px',\r\n                padding: '6px',\r\n              },\r\n            }}\r\n            onClick={() => navigate('/dashboards/tables/new')}\r\n          >\r\n            {t('add_new_table')}\r\n          </Button>\r\n          <Input\r\n            id={'search'}\r\n            value={searchText}\r\n            onChange={setSearchText}\r\n            label={'search'}\r\n            customheight={'10px'}\r\n          />\r\n        </Box>\r\n\r\n        {filteredTables.length > 0 && (\r\n          <TableContainer\r\n            sx={{\r\n              '@media only screen and (min-width: 3600px)': {\r\n                minWidth: 3000,\r\n                marginTop: '80px',\r\n              },\r\n              '@media only screen and (max-width: 3600px)': {\r\n                minWidth: 750,\r\n                marginTop: '20px',\r\n              },\r\n              maxHeight: '65vh',\r\n              overflowY: 'auto',\r\n            }}\r\n          >\r\n            <Table stickyHeader>\r\n              <EnhancedTableHead rowCount={filteredTables.length} />\r\n              <TableBody>\r\n                {filteredTables.map((row, index) => {\r\n                  return (\r\n                    <TableRow hover role=\"checkbox\" tabIndex={-1} key={index}>\r\n                      <TableCell sx={{ padding: '0px' }}>\r\n                        <Typography\r\n                          color=\"textSecondary\"\r\n                          sx={{\r\n                            '@media only screen and (min-width: 3600px)': {\r\n                              fontSize: '4rem',\r\n                            },\r\n                            '@media only screen and (max-width: 3600px)': {\r\n                              fontSize: '1.2rem',\r\n                              padding: '0px',\r\n                            },\r\n                          }}\r\n                        >\r\n                          {snakeToTitleCase(row.table_name)}\r\n                        </Typography>\r\n                      </TableCell>\r\n                      <TableCell>\r\n                        <Typography\r\n                          color=\"textSecondary\"\r\n                          sx={{\r\n                            '@media only screen and (min-width: 3600px)': {\r\n                              fontSize: '4rem',\r\n                            },\r\n                            '@media only screen and (max-width: 3600px)': {\r\n                              fontSize: '1.2rem',\r\n                            },\r\n                          }}\r\n                        >\r\n                          {row.table_description}\r\n                        </Typography>\r\n                      </TableCell>\r\n                      <TableCell>\r\n                        <Button\r\n                          color=\"secondary\"\r\n                          variant=\"contained\"\r\n                          size=\"large\"\r\n                          sx={{\r\n                            '@media only screen and (min-width: 3600px)': {\r\n                              fontSize: '3.2rem',\r\n                              minWidth: '64px',\r\n                              maxHeight: '64px',\r\n                            },\r\n                            '@media only screen and (max-width: 3600px)': {\r\n                              minWidth: '40px',\r\n                              m: '0 2px',\r\n                              padding: '6px',\r\n                            },\r\n                            ml: '20px',\r\n                          }}\r\n                          onClick={() => {\r\n                            navigate(`/dashboards/table/${row.table_name}`);\r\n                          }}\r\n                        >\r\n                          {t('view_table')}\r\n                        </Button>\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  );\r\n                })}\r\n              </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n        )}\r\n      </div>\r\n    </PageContainer>\r\n  );\r\n};\r\nexport default Dashboard1;\r\n"],"names":["BASE_URL","BACKEND_CONNECTION_URL","axios","defaults","baseURL","getTables","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","get","abrupt","sent","stop","apply","arguments","getTableData","_ref2","_callee2","data","_context2","concat","tableName","limit","skip","_x","getLevels","_ref3","_callee3","_context3","getComponents","_ref4","_callee4","_context4","getLevelsRefData","_ref5","_callee5","payload","_context5","post","_x2","getLayoutConfig","_ref6","_callee6","_context6","_x3","createLayoutConfig","_ref7","_callee7","_context7","_x4","addDataToTable","_ref8","_callee8","_context8","_x5","createTable","_ref9","_callee9","queryParams","_context9","FormData","append","file","table_description","selectionType","configID","_x6","loginUser","_ref10","_callee10","_context10","_x7","addDataToTableFile","_ref11","_callee11","_context11","_x8","createBuilder","_ref12","_callee12","_context12","_x9","getBuilder","_ref13","_callee13","_context13","_x10","title","description","children","_jsxs","_Fragment","Helmet","_jsx","name","content","CustomFormLabel","styled","props","Typography","_objectSpread","variant","component","htmlFor","marginBottom","marginTop","display","TextField","theme","customheight","color","opacity","borderColor","palette","mode","backgroundColor","input","border","height","fontSize","padding","t","useTranslation","keyboard","useRef","_useState","useState","undefined","_useState2","_slicedToArray","isFocus","setIsFocus","_useState3","_useState4","layout","setLayout","SHOW_VIRTUAL_KEYBOARD","type","style","position","inset","width","zIndex","onClick","label","id","CustomTextField","fullWidth","inputRef","inputFile","placeholder","onFocus","value","inputProps","accept","onChange","e","target","files","sx","textFieldStyles","top","left","Keyboard","keyboardRef","r","current","layoutName","onKeyPress","button","setTimeout","WIDTH","HEIGHT","DIVISION_MULTIPLE","SCREENS","x","y","VERTICAL_SCREENS","HORIZONTAL_SCREENS","LINE_CHART","SMOOTH_LINE_CHART","AREA_CHART","STACKED_LINE_CHART","STACKED_LINE_AREA_CHART","PIE_CHART","DONUT_CHART","HALF_DONUT_CHART","COLUMN_CHART","BAR_CHART","POLAR_CHART","ROSE_PIE_CHART","FUNNEL_CHART","INDIA_STATE_HEAT_MAP","INDIA_DISTRICT_HEAT_MAP","STATE_DISTRICT_HEAT_MAP","TREEMAP_CHART","STACKED_BAR_CHART","HORIZONTAL_STACKED_BAR_CHART","POLAR_STACKED_BAR_CHART","SCATTER_PLOT_CHART","BAR_WITH_LINE","TEXT_COMPONENT","IFRAME_COMPONENT","IMAGE_COMPONENT","VIDEO_COMPONENT","process","SOCKET_CONNECTION_URL","CONNECTION","DISCONNECTION","snakeToTitleCase","snakeStr","split","map","word","charAt","toUpperCase","slice","toLowerCase","join","formatCSVToDataArray","csv","parsedData","Papa","skipEmptyLines","errors","length","console","error","row","cell","timeEnd","EnhancedTableHead","TableHead","TableRow","headCell","index","TableCell","fontWeight","navigate","useNavigate","tables","setTables","searchText","setSearchText","_useState5","_useState6","filteredTables","setFilteredTables","useEffect","filter","item","table_name","includes","getTablesData","res","o","PageContainer","alignItems","justifyContent","flexDirection","whiteSpace","Box","Button","size","minWidth","mr","m","Input","TableContainer","maxHeight","overflowY","Table","stickyHeader","rowCount","TableBody","hover","role","tabIndex","ml"],"sourceRoot":""}