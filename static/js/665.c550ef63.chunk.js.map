{"version":3,"file":"static/js/665.c550ef63.chunk.js","mappings":"0cAGMA,E,SAAWC,GAEjBC,EAAAA,EAAMC,SAASC,QAAUJ,EAElB,IAAMK,EAAS,eAAAC,GAAAC,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAC,IAAA,OAAAF,EAAAA,EAAAA,KAAAG,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACVZ,EAAAA,EAAMa,IAAI,mBAAmB,KAAD,SAAAH,EAAAI,OAAA,SAAAJ,EAAAK,MAAA,wBAAAL,EAAAM,OAAA,GAAAR,EAAA,KAC1C,kBAFqB,OAAAJ,EAAAa,MAAA,KAAAC,UAAA,KAITC,EAAY,eAAAC,GAAAf,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAc,EAAOC,GAAI,OAAAhB,EAAAA,EAAAA,KAAAG,MAAA,SAAAc,GAAA,cAAAA,EAAAZ,KAAAY,EAAAX,MAAA,cAAAW,EAAAX,KAAA,EACxBZ,EAAAA,EAAMa,IAAI,yBAADW,OACKF,EAAKG,UAAS,WAAAD,OAAUF,EAAKI,MAAK,UAAAF,OAASF,EAAKK,OACzE,KAAD,SAAAJ,EAAAT,OAAA,SAAAS,EAAAR,MAAA,wBAAAQ,EAAAP,OAAA,GAAAK,EAAA,KACF,gBAJwBO,GAAA,OAAAR,EAAAH,MAAA,KAAAC,UAAA,KAMZW,EAAS,eAAAC,GAAAzB,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAwB,IAAA,OAAAzB,EAAAA,EAAAA,KAAAG,MAAA,SAAAuB,GAAA,cAAAA,EAAArB,KAAAqB,EAAApB,MAAA,cAAAoB,EAAApB,KAAA,EACVZ,EAAAA,EAAMa,IAAI,UAAU,KAAD,SAAAmB,EAAAlB,OAAA,SAAAkB,EAAAjB,MAAA,wBAAAiB,EAAAhB,OAAA,GAAAe,EAAA,KACjC,kBAFqB,OAAAD,EAAAb,MAAA,KAAAC,UAAA,KAITe,EAAa,eAAAC,GAAA7B,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAA4B,IAAA,OAAA7B,EAAAA,EAAAA,KAAAG,MAAA,SAAA2B,GAAA,cAAAA,EAAAzB,KAAAyB,EAAAxB,MAAA,cAAAwB,EAAAxB,KAAA,EACdZ,EAAAA,EAAMa,IAAI,cAAc,KAAD,SAAAuB,EAAAtB,OAAA,SAAAsB,EAAArB,MAAA,wBAAAqB,EAAApB,OAAA,GAAAmB,EAAA,KACrC,kBAFyB,OAAAD,EAAAjB,MAAA,KAAAC,UAAA,KAIbmB,EAAgB,eAAAC,GAAAjC,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAgC,EAAOC,GAAO,OAAAlC,EAAAA,EAAAA,KAAAG,MAAA,SAAAgC,GAAA,cAAAA,EAAA9B,KAAA8B,EAAA7B,MAAA,cAAA6B,EAAA7B,KAAA,EAC/BZ,EAAAA,EAAM0C,KAAK,cAAeF,GAAS,KAAD,SAAAC,EAAA3B,OAAA,SAAA2B,EAAA1B,MAAA,wBAAA0B,EAAAzB,OAAA,GAAAuB,EAAA,KAChD,gBAF4BI,GAAA,OAAAL,EAAArB,MAAA,KAAAC,UAAA,KAIhB0B,EAAe,eAAAC,GAAAxC,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAuC,EAAON,GAAO,OAAAlC,EAAAA,EAAAA,KAAAG,MAAA,SAAAsC,GAAA,cAAAA,EAAApC,KAAAoC,EAAAnC,MAAA,cAAAmC,EAAAnC,KAAA,EAC9BZ,EAAAA,EAAM0C,KAAK,gBAAiBF,GAAS,KAAD,SAAAO,EAAAjC,OAAA,SAAAiC,EAAAhC,MAAA,wBAAAgC,EAAA/B,OAAA,GAAA8B,EAAA,KAClD,gBAF2BE,GAAA,OAAAH,EAAA5B,MAAA,KAAAC,UAAA,KAIf+B,EAAkB,eAAAC,GAAA7C,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAA4C,EAAOX,GAAO,OAAAlC,EAAAA,EAAAA,KAAAG,MAAA,SAAA2C,GAAA,cAAAA,EAAAzC,KAAAyC,EAAAxC,MAAA,cAAAwC,EAAAxC,KAAA,EACjCZ,EAAAA,EAAM0C,KAAK,4BAA6BF,GAAS,KAAD,SAAAY,EAAAtC,OAAA,SAAAsC,EAAArC,MAAA,wBAAAqC,EAAApC,OAAA,GAAAmC,EAAA,KAC9D,gBAF8BE,GAAA,OAAAH,EAAAjC,MAAA,KAAAC,UAAA,KAIlBoC,EAAc,eAAAC,GAAAlD,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAiD,EAAOhB,GAAO,OAAAlC,EAAAA,EAAAA,KAAAG,MAAA,SAAAgD,GAAA,cAAAA,EAAA9C,KAAA8C,EAAA7C,MAAA,cAAA6C,EAAA7C,KAAA,EAC7BZ,EAAAA,EAAM0C,KAAK,0BAA2BF,GAAS,KAAD,SAAAiB,EAAA3C,OAAA,SAAA2C,EAAA1C,MAAA,wBAAA0C,EAAAzC,OAAA,GAAAwC,EAAA,KAC5D,gBAF0BE,GAAA,OAAAH,EAAAtC,MAAA,KAAAC,UAAA,KAIdyC,EAAW,eAAAC,GAAAvD,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAsD,EAAOrB,GAAO,IAAAlB,EAAAwC,EAAA,OAAAxD,EAAAA,EAAAA,KAAAG,MAAA,SAAAsD,GAAA,cAAAA,EAAApD,KAAAoD,EAAAnD,MAAA,OAWtC,OAVKU,EAAO,IAAI0C,SACbF,EAAc,GAClBxC,EAAK2C,OAAO,OAAQzB,EAAQ0B,MAC5B5C,EAAK2C,OAAO,oBAAqBzB,EAAQ2B,mBACzC7C,EAAK2C,OAAO,YAAazB,EAAQf,WACjCqC,GAAW,iBAAAtC,OAAqBgB,EAAQ4B,eACxC9C,EAAK2C,OAAO,gBAAiBzB,EAAQ4B,eACjC5B,EAAQ6B,WACVP,GAAW,cAAAtC,OAAkBgB,EAAQ6B,UACrC/C,EAAK2C,OAAO,YAAazB,EAAQ6B,WAClCN,EAAAnD,KAAA,GACYZ,EAAAA,EAAM0C,KAAK,oBAADlB,OAAqBsC,GAAexC,GAAM,KAAD,UAAAyC,EAAAjD,OAAA,SAAAiD,EAAAhD,MAAA,yBAAAgD,EAAA/C,OAAA,GAAA6C,EAAA,KACjE,gBAbuBS,GAAA,OAAAV,EAAA3C,MAAA,KAAAC,UAAA,KAeXqD,EAAS,eAAAC,GAAAnE,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAkE,EAAOjC,GAAO,OAAAlC,EAAAA,EAAAA,KAAAG,MAAA,SAAAiE,GAAA,cAAAA,EAAA/D,KAAA+D,EAAA9D,MAAA,cAAA8D,EAAA9D,KAAA,EACxBZ,EAAAA,EAAM0C,KAAK,eAAgBF,GAAS,KAAD,SAAAkC,EAAA5D,OAAA,SAAA4D,EAAA3D,MAAA,wBAAA2D,EAAA1D,OAAA,GAAAyD,EAAA,KACjD,gBAFqBE,GAAA,OAAAH,EAAAvD,MAAA,KAAAC,UAAA,KAIT0D,EAAkB,eAAAC,GAAAxE,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAuE,EAAOtC,GAAO,IAAAlB,EAAA,OAAAhB,EAAAA,EAAAA,KAAAG,MAAA,SAAAsE,GAAA,cAAAA,EAAApE,KAAAoE,EAAAnE,MAAA,OAGF,OAFtCU,EAAO,IAAI0C,UACZC,OAAO,OAAQzB,EAAQ0B,MAC5B5C,EAAK2C,OAAO,YAAazB,EAAQf,WAAWsD,EAAAnE,KAAA,EAC/BZ,EAAAA,EAAM0C,KAAK,0BAA2BpB,GAAM,KAAD,SAAAyD,EAAAjE,OAAA,SAAAiE,EAAAhE,MAAA,wBAAAgE,EAAA/D,OAAA,GAAA8D,EAAA,KACzD,gBAL8BE,GAAA,OAAAH,EAAA5D,MAAA,KAAAC,UAAA,KAOlB+D,EAAa,eAAAC,GAAA7E,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAA4E,EAAO3C,GAAO,OAAAlC,EAAAA,EAAAA,KAAAG,MAAA,SAAA2E,GAAA,cAAAA,EAAAzE,KAAAyE,EAAAxE,MAAA,cAAAwE,EAAAxE,KAAA,EAC5BZ,EAAAA,EAAM0C,KAAK,kCAAmCF,GAAS,KAAD,SAAA4C,EAAAtE,OAAA,SAAAsE,EAAArE,MAAA,wBAAAqE,EAAApE,OAAA,GAAAmE,EAAA,KACpE,gBAFyBE,GAAA,OAAAH,EAAAjE,MAAA,KAAAC,UAAA,KAIboE,EAAU,eAAAC,GAAAlF,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAiF,EAAOhD,GAAO,OAAAlC,EAAAA,EAAAA,KAAAG,MAAA,SAAAgF,GAAA,cAAAA,EAAA9E,KAAA8E,EAAA7E,MAAA,cAAA6E,EAAA7E,KAAA,EACzBZ,EAAAA,EAAM0C,KAAK,gCAAiCF,GAAS,KAAD,SAAAiD,EAAA3E,OAAA,SAAA2E,EAAA1E,MAAA,wBAAA0E,EAAAzE,OAAA,GAAAwE,EAAA,KAClE,gBAFsBE,GAAA,OAAAH,EAAAtE,MAAA,KAAAC,UAAA,I,2DCnDvB,IAhBsB,SAAHd,GAAA,IAAMuF,EAAKvF,EAALuF,MAAOC,EAAWxF,EAAXwF,YAAaC,EAAQzF,EAARyF,SAAQ,OACnDC,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAF,SAAA,EACEC,EAAAA,EAAAA,MAACE,EAAAA,EAAM,CAAAH,SAAA,EACLI,EAAAA,EAAAA,KAAA,SAAAJ,SAAQF,KACRM,EAAAA,EAAAA,KAAA,QAAMC,KAAK,cAAcC,QAASP,OAEnCC,IACA,C,kFCPCO,GAAkBC,EAAAA,EAAAA,KAAO,SAACC,GAAK,OACnCL,EAAAA,EAAAA,KAACM,EAAAA,GAAUC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,CAACC,QAAQ,MAASH,GAAK,IAAEI,UAAU,QAAQC,QAASL,EAAMK,UAAW,GAD1DN,EAErB,iBAAO,CACRO,aAAc,MACdC,UAAW,OACXC,QAAS,QACV,IAED,K,6HC0BA,GAlCwBT,EAAAA,EAAAA,KAAO,SAACC,GAAK,OAAKL,EAAAA,EAAAA,KAACc,EAAAA,GAASP,EAAAA,EAAAA,GAAA,GAAKF,GAAS,GAA1CD,EAA4C,SAAAjG,GAAA,IAAG4G,EAAK5G,EAAL4G,MAAOC,EAAY7G,EAAZ6G,aAAY,MAAQ,CAChG,uDAAwD,CACtDC,MAAO,UACPC,QAAS,KAEX,qCAAsC,CACpCC,YAAY,GAAD5F,OAA4B,SAAvBwF,EAAMK,QAAQC,KAAkB,4BAA8B,YAEhF,yCAA0C,CACxCC,gBAAgB,GAAD/F,OAA4B,SAAvBwF,EAAMK,QAAQC,KAAkB,sBAAwB,YAE9E,oEAAqE,CACnEJ,MAAO,UACPC,QAAS,KAEXK,MAAO,CACLC,OAAQ,kBAEV,6CAA8C,CAC5CD,MAAO,CACLE,OAAQT,GAAgB,OACxBU,SAAU,OACVC,QAAS,SAGb,6CAA8C,CAC5CJ,MAAO,CACLE,OAAQ,OACRC,SAAU,SACVC,QAAS,SAGd,I,gECqDD,EAjFc,SAACtB,GACb,IAAQuB,GAAMC,EAAAA,EAAAA,MAAND,EACFE,GAAWC,EAAAA,EAAAA,UACjBC,GAA8BC,EAAAA,EAAAA,eAASC,GAAUC,GAAAC,EAAAA,EAAAA,GAAAJ,EAAA,GAA1CK,EAAOF,EAAA,GAAEG,EAAUH,EAAA,GAC1BI,GAA4BN,EAAAA,EAAAA,UAAS,WAAUO,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAAxCE,EAAMD,EAAA,GAAEE,EAASF,EAAA,GAmBxB,OACE3C,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAF,SAAA,CACGyC,GAAWM,EAAAA,IAAwC,SAAftC,EAAMuC,OACzC5C,EAAAA,EAAAA,KAAA,OACE6C,MAAO,CACLC,SAAU,WACVC,MAAO,EACPC,MAAO,QACPvB,OAAQ,QACRwB,OAAQ,GAEVC,QAAS,kBAAMZ,OAAWJ,EAAU,KAGxCrC,EAAAA,EAAAA,MAAA,OAAKgD,MAAO,CAAEC,SAAU,YAAalD,SAAA,CAClCS,EAAM8C,QAASnD,EAAAA,EAAAA,KAACG,EAAAA,EAAe,CAACO,QAASL,EAAM+C,GAAGxD,SAAEgC,EAAEvB,EAAM8C,UAC7DnD,EAAAA,EAAAA,KAACqD,EAAe,CACdD,GAAI/C,EAAM+C,GACV5C,QAAQ,WACR8C,WAAS,EACTC,SAAUlD,EAAMmD,UAChBC,YAAa7B,EAAEvB,EAAMoD,aACrBb,KAAMvC,EAAMuC,KACZc,QAAS,kBAAMpB,GAAW,EAAK,EAC/BtB,aAAcX,EAAMW,aACpB2C,MAAOtD,EAAMsD,MACbC,WAAY,CAAEC,OAAQxD,EAAMwD,QAC5BC,SAAU,SAACC,GACU,SAAf1D,EAAMuC,KACRvC,EAAMyD,SAASC,EAAEC,OAAOC,MAAM,IAE9B5D,EAAMyD,SAASC,EAAEC,OAAOL,MAE5B,EACAO,IAAE3D,EAAAA,EAAAA,GAAA,GAAOF,EAAM8D,mBAEhBxB,EAAAA,IAAyBN,GAA0B,SAAfhC,EAAMuC,OACzC5C,EAAAA,EAAAA,KAAA,OACE6C,MAAO,CACLC,SAAU,WACVsB,IAAK,IACLC,KAAM,IACNrB,MAAO,OACPC,OAAQ,GACRrD,UAEFI,EAAAA,EAAAA,KAACsE,IAAQ,CACPC,YAAa,SAACC,GAAC,OAAM1C,EAAS2C,QAAUD,CAAC,EACzCE,WAAYjC,EACZqB,SAlEK,SAACvC,GAChBlB,EAAMyD,SAASvC,EACjB,EAiEYoD,WA1DO,SAACC,GACH,YAAXA,GAAmC,WAAXA,GAJ5BlC,EADiC,YAAXD,EAAuB,QAAU,WAMxC,YAAXmC,GACFC,YAAW,WACTvC,OAAWJ,EACb,GAAG,IAEP,WA0DF,C,yzBCxFO,IAAM4C,EAAQ,KACRC,EAAS,KACTC,EAAoB,GACpBC,EAAU,CACrB,CACEhF,KAAM,YACNiF,EAAG,EACHC,EAAG,EACHL,MAAOA,KACPC,OAAQA,KACRK,iBAAkB,EAClBC,mBAAoB,GAEtB,CACEpF,KAAM,YACNiF,EAAG,EACHC,EAAG,EACHL,MAAOA,EACPC,OAAQA,KACRK,iBAAkB,EAClBC,mBAAoB,GAEtB,CACEpF,KAAM,YACNiF,EAAGJ,EACHK,EAAG,EACHL,MAAOA,MACPC,OAAQA,KACRK,iBAAkB,EAClBC,mBAAoB,GAEtB,CACEpF,KAAM,YACNiF,EAAG,EACHC,EAAG,EACHL,MAAOA,EACPC,OAAQA,KACRK,iBAAkB,EAClBC,mBAAoB,GAEtB,CACEpF,KAAM,YACNiF,EAAGJ,EACHK,EAAG,EACHL,MAAOA,KACPC,OAAQA,KACRK,iBAAkB,EAClBC,mBAAoB,GAEtB,CACEpF,KAAM,sBACNiF,EAAG,EACHC,EAAG,EACHL,MAAOA,EACPC,OAAQA,EACRK,iBAAkB,EAClBC,mBAAoB,GAEtB,CACEpF,KAAM,sBACNiF,EAAG,EACHC,EAAG,EACHL,MAAOA,EACPC,OAAQA,EACRK,iBAAkB,EAClBC,mBAAoB,GAEtB,CACEpF,KAAM,sBACNiF,EAAG,EACHC,EAAG,EACHL,MAAOA,EACPC,OAAQA,EACRK,iBAAkB,EAClBC,mBAAoB,IAKXC,EAAa,aACbC,EAAoB,oBACpBC,EAAa,aACbC,EAAqB,qBACrBC,EAA0B,0BAC1BC,EAAY,YACZC,EAAc,cACdC,EAAmB,mBACnBC,EAAe,eACfC,EAAY,YACZC,EAAc,cACdC,EAAiB,iBACjBC,EAAe,eACfC,EAAuB,uBACvBC,EAA0B,0BAC1BC,EAA0B,0BAC1BC,EAAgB,gBAChBC,EAAoB,oBACpBC,EAA+B,+BAC/BC,EAA0B,0BAC1BC,EAAqB,qBACrBC,EAAgB,gBAGhBC,EAAiB,iBACjBC,EAAmB,mBACnBC,EAAkB,kBAClBC,EAAkB,kBAGlBjN,EAAsB,GAAAyB,OAAMyL,2BAA4C,eACxErE,GAAwB,EACxBsE,EAAwBD,2BACxBE,EAAa,aACbC,EAAgB,e,uGC/GhBC,EAAmB,SAACC,GAC/B,OAAOA,EACJC,MAAM,KACNC,KAAI,SAACC,GAAI,OAAKA,EAAKC,OAAO,GAAGC,cAAgBF,EAAKG,MAAM,GAAGC,aAAa,IACxEC,KAAK,IACV,EAEaC,EAAuB,SAACC,GACnC,IAAMC,EAAaC,IAAAA,MAAWF,EAAK,CACjCG,gBAAgB,IAGlB,GAAIF,EAAWG,OAAOC,OAAS,EAE7B,OADAC,QAAQC,MAAM,qBAAsBN,EAAWG,QACxC,KAGT,IAAM9M,EAAO2M,EAAW3M,KAAKkM,KAAI,SAACgB,GAChC,OAAOA,EAAIhB,KAAI,SAACiB,GAAI,MAAM,CAAE7E,MAAO6E,EAAM,GAC3C,IAGA,OADAH,QAAQI,QAAQ,uBACT,CAAET,WAAAA,EAAY3M,KAAAA,EACvB,C,6SC4DA,EAjFwB,SAACgF,GACvB,IAAMqI,GAAgB3G,EAAAA,EAAAA,SAAO,GACvB4G,GAAiB5G,EAAAA,EAAAA,SAAO,GA8B9B,OACE/B,EAAAA,EAAAA,KAAC4I,EAAAA,EAAG,CACF/F,MAAO,CACLhC,QAAS,OACTgI,WAAY,SACZC,eAAgB,SAChBC,WAAY,UACZC,SAAU,SACV1H,gBAAiB,UACjBE,OAAQ,kBACRsB,SAAU,WACVmG,UAAW,sBAEbC,WAAY,SAACnF,EAAGoF,GAAC,OAzCE,SAACC,EAAOD,GACzBT,EAAcjE,UAIhB0E,EAAEjE,EAAI,IAAQiE,EAAEjE,EAAI7E,EAAMgJ,SAAWhJ,EAAM2C,OAAQ3C,EAAMgJ,SAAWhJ,EAAM2C,OAAQmG,EAAEjE,GAEpFiE,EAAEhE,EAAI,IAAQgE,EAAEhE,EAAI9E,EAAMiJ,UAAYjJ,EAAMoB,QAASpB,EAAMiJ,UAAYjJ,EAAMoB,QAAS0H,EAAEhE,GAC1F9E,EAAMqC,UAAU,CAAEwC,EAAGiE,EAAEjE,EAAGC,EAAGgE,EAAEhE,IAC/BwD,EAAelE,SAAU,EAC3B,CA+B0B8E,CAAe,EAAGJ,EAAE,EAC1CK,cAAe,WACbd,EAAcjE,SAAU,CAC1B,EACAgF,aAAc,SAAC1F,EAAG2F,EAAWC,EAAKC,EAAO9G,GAAQ,OAjC5B,SAACsG,EAAOO,EAAKC,EAAO9G,GAC3C,IAAI6F,EAAelE,QAAnB,CAGA,IAAM6E,EACJO,SAASF,EAAI9G,MAAMpB,OAAQ,IAAMpB,EAAMiJ,UACnCjJ,EAAMiJ,UACNO,SAASF,EAAI9G,MAAMpB,OAAQ,IAC3B4H,EACJQ,SAASF,EAAI9G,MAAMG,MAAO,IAAM3C,EAAMgJ,SAClChJ,EAAMgJ,SACNQ,SAASF,EAAI9G,MAAMG,MAAO,IAChC3C,EAAMyJ,QAAQ,CAAE9G,MAAOqG,EAAU5H,OAAQ6H,IACzCZ,EAAcjE,SAAU,CAVxB,CAWF,CAoBMsF,CAAiB,EAAGJ,EAAqB,EAE3CK,QAAS,CACP9E,EAAG,EACHC,EAAG,GAEL8E,KAAM,CAAEjH,MAAO3C,EAAM2C,MAAOvB,OAAQpB,EAAMoB,QAC1CqB,SAAU,CAAEoC,EAAe,MAAZ7E,EAAM6E,EAAY,EAAI7E,EAAM6E,EAAGC,EAAe,MAAZ9E,EAAM8E,EAAY,EAAI9E,EAAM8E,GAC7EkE,SAAUhJ,EAAMgJ,SAChBC,UAAWjJ,EAAMiJ,UAAU1J,UAE3BC,EAAAA,EAAAA,MAAA,OACEgD,MAAO,CACLG,MAAO,OACPvB,OAAQ,OACRZ,QAAS,OACTgI,WAAY,SACZC,eAAgB,SAChBoB,UAAW,UACXtK,SAAA,EAEFI,EAAAA,EAAAA,KAAA,QAAAJ,SAAOS,EAAMJ,QACbD,EAAAA,EAAAA,KAAA,OAAKmK,UAAU,0BACfnK,EAAAA,EAAAA,KAAA,OAAKmK,UAAU,2BACfnK,EAAAA,EAAAA,KAAA,OAAKmK,UAAU,6BACfnK,EAAAA,EAAAA,KAAA,OAAKmK,UAAU,iCAIvB,E,iCCoPA,EAvUe,CACb,CACE/G,GAAI,GACJgH,WAAY,8BACZC,eAAgB,GAChBC,mBAAoB,KACpBC,WAAY,GACZC,uBAAwB,GACxBC,eAAgB,MAElB,CACErH,GAAI,GACJgH,WAAY,iBACZC,eAAgB,GAChBC,mBAAoB,KACpBC,WAAY,GACZC,uBAAwB,GACxBC,eAAgB,SAElB,CACErH,GAAI,GACJgH,WAAY,oBACZC,eAAgB,GAChBC,mBAAoB,KACpBC,WAAY,GACZC,uBAAwB,GACxBC,eAAgB,SAElB,CACErH,GAAI,GACJgH,WAAY,QACZC,eAAgB,GAChBC,mBAAoB,KACpBC,WAAY,GACZC,uBAAwB,GACxBC,eAAgB,SAElB,CACErH,GAAI,GACJgH,WAAY,QACZC,eAAgB,GAChBC,mBAAoB,KACpBC,WAAY,GACZC,uBAAwB,GACxBC,eAAgB,SAElB,CACErH,GAAI,GACJgH,WAAY,aACZC,eAAgB,EAChBC,mBAAoB,KACpBC,WAAY,GACZC,uBAAwB,GACxBC,eAAgB,MAElB,CACErH,GAAI,GACJgH,WAAY,eACZC,eAAgB,GAChBC,mBAAoB,KACpBC,WAAY,GACZC,uBAAwB,GACxBC,eAAgB,SAElB,CACErH,GAAI,GACJgH,WAAY,QACZC,eAAgB,EAChBC,mBAAoB,KACpBC,WAAY,GACZC,uBAAwB,GACxBC,eAAgB,MAElB,CACErH,GAAI,GACJgH,WAAY,MACZC,eAAgB,GAChBC,mBAAoB,KACpBC,WAAY,GACZC,uBAAwB,GACxBC,eAAgB,SAElB,CACErH,GAAI,GACJgH,WAAY,UACZC,eAAgB,GAChBC,mBAAoB,KACpBC,WAAY,GACZC,uBAAwB,GACxBC,eAAgB,SAElB,CACErH,GAAI,GACJgH,WAAY,UACZC,eAAgB,EAChBC,mBAAoB,KACpBC,WAAY,GACZC,uBAAwB,GACxBC,eAAgB,SAElB,CACErH,GAAI,GACJgH,WAAY,mBACZC,eAAgB,EAChBC,mBAAoB,KACpBC,WAAY,GACZC,uBAAwB,GACxBC,eAAgB,SAElB,CACErH,GAAI,GACJgH,WAAY,oBACZC,eAAgB,EAChBC,mBAAoB,KACpBC,WAAY,GACZC,uBAAwB,GACxBC,eAAgB,MAElB,CACErH,GAAI,GACJgH,WAAY,YACZC,eAAgB,GAChBC,mBAAoB,KACpBC,WAAY,GACZC,uBAAwB,GACxBC,eAAgB,SAElB,CACErH,GAAI,GACJgH,WAAY,YACZC,eAAgB,GAChBC,mBAAoB,KACpBC,WAAY,GACZC,uBAAwB,GACxBC,eAAgB,SAElB,CACErH,GAAI,GACJgH,WAAY,SACZC,eAAgB,GAChBC,mBAAoB,KACpBC,WAAY,GACZC,uBAAwB,GACxBC,eAAgB,SAElB,CACErH,GAAI,GACJgH,WAAY,SACZC,eAAgB,GAChBC,mBAAoB,KACpBC,WAAY,GACZC,uBAAwB,GACxBC,eAAgB,MAElB,CACErH,GAAI,GACJgH,WAAY,cACZC,eAAgB,GAChBC,mBAAoB,KACpBC,WAAY,GACZC,uBAAwB,GACxBC,eAAgB,MAElB,CACErH,GAAI,GACJgH,WAAY,iBACZC,eAAgB,GAChBC,mBAAoB,KACpBC,WAAY,GACZC,uBAAwB,GACxBC,eAAgB,SAElB,CACErH,GAAI,GACJgH,WAAY,cACZC,eAAgB,GAChBC,mBAAoB,KACpBC,WAAY,GACZC,uBAAwB,GACxBC,eAAgB,SAElB,CACErH,GAAI,GACJgH,WAAY,UACZC,eAAgB,GAChBC,mBAAoB,KACpBC,WAAY,GACZC,uBAAwB,GACxBC,eAAgB,SAElB,CACErH,GAAI,GACJgH,WAAY,YACZC,eAAgB,GAChBC,mBAAoB,KACpBC,WAAY,GACZC,uBAAwB,GACxBC,eAAgB,SAElB,CACErH,GAAI,GACJgH,WAAY,UACZC,eAAgB,GAChBC,mBAAoB,KACpBC,WAAY,GACZC,uBAAwB,GACxBC,eAAgB,SAElB,CACErH,GAAI,GACJgH,WAAY,WACZC,eAAgB,GAChBC,mBAAoB,KACpBC,WAAY,GACZC,uBAAwB,GACxBC,eAAgB,SAElB,CACErH,GAAI,GACJgH,WAAY,SACZC,eAAgB,GAChBC,mBAAoB,KACpBC,WAAY,GACZC,uBAAwB,GACxBC,eAAgB,SAElB,CACErH,GAAI,GACJgH,WAAY,aACZC,eAAgB,GAChBC,mBAAoB,KACpBC,WAAY,GACZC,uBAAwB,GACxBC,eAAgB,MAElB,CACErH,GAAI,IACJgH,WAAY,SACZC,eAAgB,EAChBC,mBAA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","sources":["api/index.js","components/container/PageContainer.js","components/forms/custom-elements/CustomFormLabel.js","components/forms/custom-elements/CustomTextField.js","components/forms/input/index.js","constants.js","utils/index.js","views/layoutManager/layoutComponent/index.js","data/stateLgd.js","views/layoutManager/componentDetails/index.js","views/layoutManager/layout/index.js","views/layoutManager/sectors/index.js","views/layoutManager/focusArea/index.js","views/layoutManager/indicators/index.js","views/layoutManager/states/index.js","views/dashboards/addData/index.js"],"sourcesContent":["import axios from 'axios';\r\nimport { BACKEND_CONNECTION_URL } from '../constants';\r\n\r\nconst BASE_URL = BACKEND_CONNECTION_URL;\r\n\r\naxios.defaults.baseURL = BASE_URL;\r\n\r\nexport const getTables = async () => {\r\n  return await axios.get(`table/listNames`);\r\n};\r\n\r\nexport const getTableData = async (data) => {\r\n  return await axios.get(\r\n    `table/data?table_name=${data.tableName}&limit=${data.limit}&skip=${data.skip}`,\r\n  );\r\n};\r\n\r\nexport const getLevels = async () => {\r\n  return await axios.get(`levels`);\r\n};\r\n\r\nexport const getComponents = async () => {\r\n  return await axios.get(`components`);\r\n};\r\n\r\nexport const getLevelsRefData = async (payload) => {\r\n  return await axios.post('levels/data', payload);\r\n};\r\n\r\nexport const getLayoutConfig = async (payload) => {\r\n  return await axios.post('layout-config', payload);\r\n};\r\n\r\nexport const createLayoutConfig = async (payload) => {\r\n  return await axios.post('layout-config/bulk-create', payload);\r\n};\r\n\r\nexport const addDataToTable = async (payload) => {\r\n  return await axios.post('table/addDataToExisting', payload);\r\n};\r\n\r\nexport const createTable = async (payload) => {\r\n  const data = new FormData();\r\n  let queryParams = '';\r\n  data.append('file', payload.file);\r\n  data.append('table_description', payload.table_description);\r\n  data.append('tableName', payload.tableName);\r\n  queryParams += `selectionType=${payload.selectionType}`;\r\n  data.append('selectionType', payload.selectionType);\r\n  if (payload.configID) {\r\n    queryParams += `&config_id=${payload.configID}`;\r\n    data.append('config_id', payload.configID);\r\n  }\r\n  return await axios.post(`table/fileIntoDb?${queryParams}`, data);\r\n};\r\n\r\nexport const loginUser = async (payload) => {\r\n  return await axios.post('authenticate', payload);\r\n};\r\n\r\nexport const addDataToTableFile = async (payload) => {\r\n  const data = new FormData();\r\n  data.append('file', payload.file);\r\n  data.append('tableName', payload.tableName);\r\n  return await axios.post('table/addDataToExisting', data);\r\n};\r\n\r\nexport const createBuilder = async (payload) => {\r\n  return await axios.post(`layout-config/builder-ui/create`, payload);\r\n};\r\n\r\nexport const getBuilder = async (payload) => {\r\n  return await axios.post(`layout-config/builder-ui/list`, payload);\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Helmet } from 'react-helmet';\r\n\r\nconst PageContainer = ({ title, description, children }) => (\r\n  <>\r\n    <Helmet>\r\n      <title>{title}</title>\r\n      <meta name=\"description\" content={description} />\r\n    </Helmet>\r\n    {children}\r\n  </>\r\n);\r\n\r\nPageContainer.propTypes = {\r\n  title: PropTypes.string,\r\n  description: PropTypes.string,\r\n  children: PropTypes.node,\r\n};\r\n\r\nexport default PageContainer;\r\n","import React from 'react';\r\nimport { styled } from '@mui/material/styles';\r\nimport { Typography } from '@mui/material';\r\n\r\nconst CustomFormLabel = styled((props) => (\r\n  <Typography variant=\"h6\" {...props} component=\"label\" htmlFor={props.htmlFor} />\r\n))(() => ({\r\n  marginBottom: '5px',\r\n  marginTop: '15px',\r\n  display: 'block',\r\n}));\r\n\r\nexport default CustomFormLabel;\r\n","import React from 'react';\r\nimport { styled } from '@mui/material/styles';\r\nimport { TextField } from '@mui/material';\r\n\r\nconst CustomTextField = styled((props) => <TextField {...props} />)(({ theme, customheight }) => ({\r\n  '& .MuiOutlinedInput-input::-webkit-input-placeholder': {\r\n    color: '#767e89',\r\n    opacity: '1',\r\n  },\r\n  '& .MuiOutlinedInput-notchedOutline': {\r\n    borderColor: `${theme.palette.mode === 'dark' ? 'rgba(255, 255, 255, 0.12)' : '#dee3e9'}`,\r\n  },\r\n  '& .MuiOutlinedInput-input.Mui-disabled': {\r\n    backgroundColor: `${theme.palette.mode === 'dark' ? 'rgba(0, 0, 0, 0.12)' : '#f8f9fb'}`,\r\n  },\r\n  '& .MuiOutlinedInput-input.Mui-disabled::-webkit-input-placeholder': {\r\n    color: '#767e89',\r\n    opacity: '1',\r\n  },\r\n  input: {\r\n    border: '1px solid grey',\r\n  },\r\n  '@media only screen and (min-width: 3600px)': {\r\n    input: {\r\n      height: customheight || '4rem',\r\n      fontSize: '5rem',\r\n      padding: '3rem',\r\n    },\r\n  },\r\n  '@media only screen and (max-width: 3600px)': {\r\n    input: {\r\n      height: '1rem',\r\n      fontSize: '0.8rem',\r\n      padding: '12px',\r\n    },\r\n  },\r\n}));\r\n\r\nexport default CustomTextField;\r\n","import React, { useRef, useState } from 'react';\r\nimport CustomTextField from '../custom-elements/CustomTextField';\r\nimport CustomFormLabel from '../custom-elements/CustomFormLabel';\r\nimport { useTranslation } from 'react-i18next';\r\nimport Keyboard from 'react-simple-keyboard';\r\nimport 'react-simple-keyboard/build/css/index.css';\r\nimport { SHOW_VIRTUAL_KEYBOARD } from '../../../constants';\r\n\r\nconst Input = (props) => {\r\n  const { t } = useTranslation();\r\n  const keyboard = useRef();\r\n  const [isFocus, setIsFocus] = useState(undefined);\r\n  const [layout, setLayout] = useState('default');\r\n\r\n  const onChange = (input) => {\r\n    props.onChange(input);\r\n  };\r\n\r\n  const handleShift = () => {\r\n    const newLayoutName = layout === 'default' ? 'shift' : 'default';\r\n    setLayout(newLayoutName);\r\n  };\r\n\r\n  const onKeyPress = (button) => {\r\n    if (button === '{shift}' || button === '{lock}') handleShift();\r\n    if (button === '{enter}') {\r\n      setTimeout(() => {\r\n        setIsFocus(undefined);\r\n      }, 100);\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      {isFocus && SHOW_VIRTUAL_KEYBOARD && props.type !== 'file' && (\r\n        <div\r\n          style={{\r\n            position: 'absolute',\r\n            inset: 0,\r\n            width: '100vw',\r\n            height: '100vh',\r\n            zIndex: 2,\r\n          }}\r\n          onClick={() => setIsFocus(undefined)}\r\n        />\r\n      )}\r\n      <div style={{ position: 'relative' }}>\r\n        {props.label && <CustomFormLabel htmlFor={props.id}>{t(props.label)}</CustomFormLabel>}\r\n        <CustomTextField\r\n          id={props.id}\r\n          variant=\"outlined\"\r\n          fullWidth\r\n          inputRef={props.inputFile}\r\n          placeholder={t(props.placeholder)}\r\n          type={props.type}\r\n          onFocus={() => setIsFocus(true)}\r\n          customheight={props.customheight}\r\n          value={props.value}\r\n          inputProps={{ accept: props.accept }}\r\n          onChange={(e) => {\r\n            if (props.type === 'file') {\r\n              props.onChange(e.target.files[0]);\r\n            } else {\r\n              props.onChange(e.target.value);\r\n            }\r\n          }}\r\n          sx={{ ...props.textFieldStyles }}\r\n        />\r\n        {SHOW_VIRTUAL_KEYBOARD && isFocus && props.type !== \"file\" && (\r\n          <div\r\n            style={{\r\n              position: 'absolute',\r\n              top: 300,\r\n              left: 300,\r\n              width: '25vw',\r\n              zIndex: 3,\r\n            }}\r\n          >\r\n            <Keyboard\r\n              keyboardRef={(r) => (keyboard.current = r)}\r\n              layoutName={layout}\r\n              onChange={onChange}\r\n              onKeyPress={onKeyPress}\r\n            />\r\n          </div>\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\nexport default Input;\r\n","export const WIDTH = 1920;\r\nexport const HEIGHT = 1080;\r\nexport const DIVISION_MULTIPLE = 12;\r\nexport const SCREENS = [\r\n  {\r\n    name: 'DISPLAY_1',\r\n    x: 0,\r\n    y: 0,\r\n    WIDTH: WIDTH * 2,\r\n    HEIGHT: HEIGHT * 2,\r\n    VERTICAL_SCREENS: 2,\r\n    HORIZONTAL_SCREENS: 2,\r\n  },\r\n  {\r\n    name: 'DISPLAY_2',\r\n    x: 0,\r\n    y: 0,\r\n    WIDTH: WIDTH,\r\n    HEIGHT: HEIGHT * 2,\r\n    VERTICAL_SCREENS: 2,\r\n    HORIZONTAL_SCREENS: 1,\r\n  },\r\n  {\r\n    name: 'DISPLAY_3',\r\n    x: WIDTH,\r\n    y: 0,\r\n    WIDTH: WIDTH * 7,\r\n    HEIGHT: HEIGHT * 2,\r\n    VERTICAL_SCREENS: 2,\r\n    HORIZONTAL_SCREENS: 7,\r\n  },\r\n  {\r\n    name: 'DISPLAY_4',\r\n    x: 0,\r\n    y: 0,\r\n    WIDTH: WIDTH,\r\n    HEIGHT: HEIGHT * 2,\r\n    VERTICAL_SCREENS: 2,\r\n    HORIZONTAL_SCREENS: 1,\r\n  },\r\n  {\r\n    name: 'DISPLAY_5',\r\n    x: WIDTH,\r\n    y: 0,\r\n    WIDTH: WIDTH * 2,\r\n    HEIGHT: HEIGHT * 2,\r\n    VERTICAL_SCREENS: 2,\r\n    HORIZONTAL_SCREENS: 2,\r\n  },\r\n  {\r\n    name: 'CONNECTING_SCREEN_1',\r\n    x: 0,\r\n    y: 0,\r\n    WIDTH: WIDTH,\r\n    HEIGHT: HEIGHT,\r\n    VERTICAL_SCREENS: 1,\r\n    HORIZONTAL_SCREENS: 1,\r\n  },\r\n  {\r\n    name: 'CONNECTING_SCREEN_2',\r\n    x: 0,\r\n    y: 0,\r\n    WIDTH: WIDTH,\r\n    HEIGHT: HEIGHT,\r\n    VERTICAL_SCREENS: 1,\r\n    HORIZONTAL_SCREENS: 1,\r\n  },\r\n  {\r\n    name: 'CONNECTING_SCREEN_3',\r\n    x: 0,\r\n    y: 0,\r\n    WIDTH: WIDTH,\r\n    HEIGHT: HEIGHT,\r\n    VERTICAL_SCREENS: 1,\r\n    HORIZONTAL_SCREENS: 1,\r\n  },\r\n];\r\n\r\n//CHART\r\nexport const LINE_CHART = 'LINE_CHART';\r\nexport const SMOOTH_LINE_CHART = 'SMOOTH_LINE_CHART';\r\nexport const AREA_CHART = 'AREA_CHART';\r\nexport const STACKED_LINE_CHART = 'STACKED_LINE_CHART';\r\nexport const STACKED_LINE_AREA_CHART = 'STACKED_LINE_AREA_CHART';\r\nexport const PIE_CHART = 'PIE_CHART';\r\nexport const DONUT_CHART = 'DONUT_CHART';\r\nexport const HALF_DONUT_CHART = 'HALF_DONUT_CHART';\r\nexport const COLUMN_CHART = 'COLUMN_CHART';\r\nexport const BAR_CHART = 'BAR_CHART';\r\nexport const POLAR_CHART = 'POLAR_CHART';\r\nexport const ROSE_PIE_CHART = 'ROSE_PIE_CHART';\r\nexport const FUNNEL_CHART = 'FUNNEL_CHART';\r\nexport const INDIA_STATE_HEAT_MAP = 'INDIA_STATE_HEAT_MAP';\r\nexport const INDIA_DISTRICT_HEAT_MAP = 'INDIA_DISTRICT_HEAT_MAP';\r\nexport const STATE_DISTRICT_HEAT_MAP = 'STATE_DISTRICT_HEAT_MAP';\r\nexport const TREEMAP_CHART = 'TREEMAP_CHART';\r\nexport const STACKED_BAR_CHART = 'STACKED_BAR_CHART';\r\nexport const HORIZONTAL_STACKED_BAR_CHART = 'HORIZONTAL_STACKED_BAR_CHART';\r\nexport const POLAR_STACKED_BAR_CHART = 'POLAR_STACKED_BAR_CHART';\r\nexport const SCATTER_PLOT_CHART = 'SCATTER_PLOT_CHART';\r\nexport const BAR_WITH_LINE = 'BAR_WITH_LINE';\r\n\r\n//Component\r\nexport const TEXT_COMPONENT = 'TEXT_COMPONENT';\r\nexport const IFRAME_COMPONENT = 'IFRAME_COMPONENT';\r\nexport const IMAGE_COMPONENT = 'IMAGE_COMPONENT';\r\nexport const VIDEO_COMPONENT = 'VIDEO_COMPONENT';\r\n\r\n//Config\r\nexport const BACKEND_CONNECTION_URL = `${process.env.REACT_APP_BACKEND_CONNECTION_URL}/admin/api/`;\r\nexport const SHOW_VIRTUAL_KEYBOARD = false;\r\nexport const SOCKET_CONNECTION_URL = process.env.REACT_APP_SOCKET_CONNECTION_URL;\r\nexport const CONNECTION = 'connection';\r\nexport const DISCONNECTION = 'disconnection';\r\n","import Papa from 'papaparse';\r\n\r\nexport const snakeToTitleCase = (snakeStr) => {\r\n  return snakeStr\r\n    .split('_') // Split the string into an array of words\r\n    .map((word) => word.charAt(0).toUpperCase() + word.slice(1).toLowerCase()) // Capitalize the first letter of each word\r\n    .join(' '); // Join the words back into a single string with spaces\r\n};\r\n\r\nexport const formatCSVToDataArray = (csv) => {\r\n  const parsedData = Papa.parse(csv, {\r\n    skipEmptyLines: true,\r\n  });\r\n\r\n  if (parsedData.errors.length > 0) {\r\n    console.error('Error parsing CSV:', parsedData.errors);\r\n    return null;\r\n  }\r\n\r\n  const data = parsedData.data.map((row) => {\r\n    return row.map((cell) => ({ value: cell }));\r\n  });\r\n\r\n  console.timeEnd('CSV Conversion Data');\r\n  return { parsedData, data };\r\n};\r\n\r\nexport const formatXLSXToDataArray = (xlsxData) => {\r\n  const workbook = xlsx.read(xlsxData, { type: 'binary' });\r\n  const sheetName = workbook.SheetNames[0];\r\n  const worksheet = workbook.Sheets[sheetName];\r\n\r\n  const data = xlsx.utils\r\n    .sheet_to_json(worksheet, { header: 1 })\r\n    .map((row) => row.map((cell) => ({ value: cell })));\r\n\r\n  console.timeEnd('XLSX Conversion Data');\r\n  return { data };\r\n};\r\n","import React, { useRef } from 'react';\r\nimport { Rnd } from 'react-rnd';\r\nimport './style.css';\r\n\r\nconst LayoutComponent = (props) => {\r\n  const isResizingRef = useRef(false);\r\n  const isDragggingRef = useRef(false);\r\n\r\n  const handleDragStop = (index, d) => {\r\n    if (isResizingRef.current) {\r\n      return;\r\n    }\r\n    const newX =\r\n      d.x < 0 ? 0 : d.x > props.maxWidth - props.width ? props.maxWidth - props.width : d.x;\r\n    const newY =\r\n      d.y < 0 ? 0 : d.y > props.maxHeight - props.height ? props.maxHeight - props.height : d.y;\r\n    props.setLayout({ x: d.x, y: d.y });\r\n    isDragggingRef.current = false;\r\n  };\r\n\r\n  const handleResizeStop = (index, ref, delta, position) => {\r\n    if (isDragggingRef.current) {\r\n      return;\r\n    }\r\n    const maxHeight =\r\n      parseInt(ref.style.height, 10) > props.maxHeight\r\n        ? props.maxHeight\r\n        : parseInt(ref.style.height, 10);\r\n    const maxWidth =\r\n      parseInt(ref.style.width, 10) > props.maxWidth\r\n        ? props.maxWidth\r\n        : parseInt(ref.style.width, 10);\r\n    props.setSize({ width: maxWidth, height: maxHeight });\r\n    isResizingRef.current = false;\r\n  };\r\n\r\n  return (\r\n    <Rnd\r\n      style={{\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        background: '#f0f0f0',\r\n        overflow: 'hidden',\r\n        backgroundColor: '#dedede',\r\n        border: '2px solid black',\r\n        position: 'absolute',\r\n        transform: 'perspective(600px)',\r\n      }}\r\n      onDragStop={(e, d) => handleDragStop(0, d)}\r\n      onResizeStart={() => {\r\n        isResizingRef.current = true;\r\n      }}\r\n      onResizeStop={(e, direction, ref, delta, position) =>\r\n        handleResizeStop(0, ref, delta, position)\r\n      }\r\n      default={{\r\n        x: 0,\r\n        y: 0,\r\n      }}\r\n      size={{ width: props.width, height: props.height }}\r\n      position={{ x: props.x === 300 ? 0 : props.x, y: props.y === 300 ? 0 : props.y }}\r\n      maxWidth={props.maxWidth}\r\n      maxHeight={props.maxHeight}\r\n    >\r\n      <div\r\n        style={{\r\n          width: '100%',\r\n          height: '100%',\r\n          display: 'flex',\r\n          alignItems: 'center',\r\n          justifyContent: 'center',\r\n          textAlign: 'center',\r\n        }}\r\n      >\r\n        <span>{props.name}</span>\r\n        <div className=\"arrow arrow-top-left\"></div>\r\n        <div className=\"arrow arrow-top-right\"></div>\r\n        <div className=\"arrow arrow-bottom-left\"></div>\r\n        <div className=\"arrow arrow-bottom-right\"></div>\r\n      </div>\r\n    </Rnd>\r\n  );\r\n};\r\n\r\nexport default LayoutComponent;\r\n","const states = [\r\n  {\r\n    id: 74,\r\n    state_name: 'Andaman And Nicobar Islands',\r\n    state_lgd_code: 35,\r\n    state_abbreviation: 'AN',\r\n    state_area: '',\r\n    state_total_population: '',\r\n    is_state_or_ut: 'ut',\r\n  },\r\n  {\r\n    id: 75,\r\n    state_name: 'Andhra Pradesh',\r\n    state_lgd_code: 28,\r\n    state_abbreviation: 'AP',\r\n    state_area: '',\r\n    state_total_population: '',\r\n    is_state_or_ut: 'state',\r\n  },\r\n  {\r\n    id: 76,\r\n    state_name: 'Arunachal Pradesh',\r\n    state_lgd_code: 12,\r\n    state_abbreviation: 'AR',\r\n    state_area: '',\r\n    state_total_population: '',\r\n    is_state_or_ut: 'state',\r\n  },\r\n  {\r\n    id: 77,\r\n    state_name: 'Assam',\r\n    state_lgd_code: 18,\r\n    state_abbreviation: 'AS',\r\n    state_area: '',\r\n    state_total_population: '',\r\n    is_state_or_ut: 'state',\r\n  },\r\n  {\r\n    id: 78,\r\n    state_name: 'Bihar',\r\n    state_lgd_code: 10,\r\n    state_abbreviation: 'BH',\r\n    state_area: '',\r\n    state_total_population: '',\r\n    is_state_or_ut: 'state',\r\n  },\r\n  {\r\n    id: 79,\r\n    state_name: 'Chandigarh',\r\n    state_lgd_code: 4,\r\n    state_abbreviation: 'CH',\r\n    state_area: '',\r\n    state_total_population: '',\r\n    is_state_or_ut: 'ut',\r\n  },\r\n  {\r\n    id: 80,\r\n    state_name: 'Chhattisgarh',\r\n    state_lgd_code: 22,\r\n    state_abbreviation: 'CT',\r\n    state_area: '',\r\n    state_total_population: '',\r\n    is_state_or_ut: 'state',\r\n  },\r\n  {\r\n    id: 81,\r\n    state_name: 'Delhi',\r\n    state_lgd_code: 7,\r\n    state_abbreviation: 'DL',\r\n    state_area: '',\r\n    state_total_population: '',\r\n    is_state_or_ut: 'ut',\r\n  },\r\n  {\r\n    id: 82,\r\n    state_name: 'Goa',\r\n    state_lgd_code: 30,\r\n    state_abbreviation: 'GA',\r\n    state_area: '',\r\n    state_total_population: '',\r\n    is_state_or_ut: 'state',\r\n  },\r\n  {\r\n    id: 83,\r\n    state_name: 'Gujarat',\r\n    state_lgd_code: 24,\r\n    state_abbreviation: 'GJ',\r\n    state_area: '',\r\n    state_total_population: '',\r\n    is_state_or_ut: 'state',\r\n  },\r\n  {\r\n    id: 84,\r\n    state_name: 'Haryana',\r\n    state_lgd_code: 6,\r\n    state_abbreviation: 'HR',\r\n    state_area: '',\r\n    state_total_population: '',\r\n    is_state_or_ut: 'state',\r\n  },\r\n  {\r\n    id: 85,\r\n    state_name: 'Himachal Pradesh',\r\n    state_lgd_code: 2,\r\n    state_abbreviation: 'HP',\r\n    state_area: '',\r\n    state_total_population: '',\r\n    is_state_or_ut: 'state',\r\n  },\r\n  {\r\n    id: 86,\r\n    state_name: 'Jammu And Kashmir',\r\n    state_lgd_code: 1,\r\n    state_abbreviation: 'JK',\r\n    state_area: '',\r\n    state_total_population: '',\r\n    is_state_or_ut: 'ut',\r\n  },\r\n  {\r\n    id: 87,\r\n    state_name: 'Jharkhand',\r\n    state_lgd_code: 20,\r\n    state_abbreviation: 'JH',\r\n    state_area: '',\r\n    state_total_population: '',\r\n    is_state_or_ut: 'state',\r\n  },\r\n  {\r\n    id: 88,\r\n    state_name: 'Karnataka',\r\n    state_lgd_code: 29,\r\n    state_abbreviation: 'KA',\r\n    state_area: '',\r\n    state_total_population: '',\r\n    is_state_or_ut: 'state',\r\n  },\r\n  {\r\n    id: 89,\r\n    state_name: 'Kerala',\r\n    state_lgd_code: 32,\r\n    state_abbreviation: 'KL',\r\n    state_area: '',\r\n    state_total_population: '',\r\n    is_state_or_ut: 'state',\r\n  },\r\n  {\r\n    id: 90,\r\n    state_name: 'Ladakh',\r\n    state_lgd_code: 37,\r\n    state_abbreviation: 'LA',\r\n    state_area: '',\r\n    state_total_population: '',\r\n    is_state_or_ut: 'ut',\r\n  },\r\n  {\r\n    id: 91,\r\n    state_name: 'Lakshadweep',\r\n    state_lgd_code: 31,\r\n    state_abbreviation: 'LD',\r\n    state_area: '',\r\n    state_total_population: '',\r\n    is_state_or_ut: 'ut',\r\n  },\r\n  {\r\n    id: 92,\r\n    state_name: 'Madhya Pradesh',\r\n    state_lgd_code: 23,\r\n    state_abbreviation: 'MP',\r\n    state_area: '',\r\n    state_total_population: '',\r\n    is_state_or_ut: 'state',\r\n  },\r\n  {\r\n    id: 93,\r\n    state_name: 'Maharashtra',\r\n    state_lgd_code: 27,\r\n    state_abbreviation: 'MH',\r\n    state_area: '',\r\n    state_total_population: '',\r\n    is_state_or_ut: 'state',\r\n  },\r\n  {\r\n    id: 94,\r\n    state_name: 'Manipur',\r\n    state_lgd_code: 14,\r\n    state_abbreviation: 'MN',\r\n    state_area: '',\r\n    state_total_population: '',\r\n    is_state_or_ut: 'state',\r\n  },\r\n  {\r\n    id: 95,\r\n    state_name: 'Meghalaya',\r\n    state_lgd_code: 17,\r\n    state_abbreviation: 'ML',\r\n    state_area: '',\r\n    state_total_population: '',\r\n    is_state_or_ut: 'state',\r\n  },\r\n  {\r\n    id: 96,\r\n    state_name: 'Mizoram',\r\n    state_lgd_code: 15,\r\n    state_abbreviation: 'MZ',\r\n    state_area: '',\r\n    state_total_population: '',\r\n    is_state_or_ut: 'state',\r\n  },\r\n  {\r\n    id: 97,\r\n    state_name: 'Nagaland',\r\n    state_lgd_code: 13,\r\n    state_abbreviation: 'NL',\r\n    state_area: '',\r\n    state_total_population: '',\r\n    is_state_or_ut: 'state',\r\n  },\r\n  {\r\n    id: 98,\r\n    state_name: 'Odisha',\r\n    state_lgd_code: 21,\r\n    state_abbreviation: 'OD',\r\n    state_area: '',\r\n    state_total_population: '',\r\n    is_state_or_ut: 'state',\r\n  },\r\n  {\r\n    id: 99,\r\n    state_name: 'Puducherry',\r\n    state_lgd_code: 34,\r\n    state_abbreviation: 'PY',\r\n    state_area: '',\r\n    state_total_population: '',\r\n    is_state_or_ut: 'ut',\r\n  },\r\n  {\r\n    id: 100,\r\n    state_name: 'Punjab',\r\n    state_lgd_code: 3,\r\n    state_abbreviation: 'PB',\r\n    state_area: '',\r\n    state_total_population: '',\r\n    is_state_or_ut: 'state',\r\n  },\r\n  {\r\n    id: 101,\r\n    state_name: 'Rajasthan',\r\n    state_lgd_code: 8,\r\n    state_abbreviation: 'RJ',\r\n    state_area: '',\r\n    state_total_population: '',\r\n    is_state_or_ut: 'state',\r\n  },\r\n  {\r\n    id: 102,\r\n    state_name: 'Sikkim',\r\n    state_lgd_code: 11,\r\n    state_abbreviation: 'SK',\r\n    state_area: '',\r\n    state_total_population: '',\r\n    is_state_or_ut: 'state',\r\n  },\r\n  {\r\n    id: 103,\r\n    state_name: 'Tamil Nadu',\r\n    state_lgd_code: 33,\r\n    state_abbreviation: 'TN',\r\n    state_area: '',\r\n    state_total_population: '',\r\n    is_state_or_ut: 'state',\r\n  },\r\n  {\r\n    id: 104,\r\n    state_name: 'Telangana',\r\n    state_lgd_code: 36,\r\n    state_abbreviation: 'TS',\r\n    state_area: '',\r\n    state_total_population: '',\r\n    is_state_or_ut: 'state',\r\n  },\r\n  {\r\n    id: 105,\r\n    state_name: 'The Dadra And Nagar Haveli And Daman And Diu',\r\n    state_lgd_code: 38,\r\n    state_abbreviation: 'DN',\r\n    state_area: '',\r\n    state_total_population: '',\r\n    is_state_or_ut: 'ut',\r\n  },\r\n  {\r\n    id: 106,\r\n    state_name: 'Tripura',\r\n    state_lgd_code: 16,\r\n    state_abbreviation: 'TR',\r\n    state_area: '',\r\n    state_total_population: '',\r\n    is_state_or_ut: 'state',\r\n  },\r\n  {\r\n    id: 107,\r\n    state_name: 'Uttarakhand',\r\n    state_lgd_code: 5,\r\n    state_abbreviation: 'UK',\r\n    state_area: '',\r\n    state_total_population: '',\r\n    is_state_or_ut: 'state',\r\n  },\r\n  {\r\n    id: 108,\r\n    state_name: 'Uttar Pradesh',\r\n    state_lgd_code: 9,\r\n    state_abbreviation: 'UP',\r\n    state_area: '',\r\n    state_total_population: '',\r\n    is_state_or_ut: 'state',\r\n  },\r\n  {\r\n    id: 109,\r\n    state_name: 'West Bengal',\r\n    state_lgd_code: 19,\r\n    state_abbreviation: 'WB',\r\n    state_area: '',\r\n    state_total_population: '',\r\n    is_state_or_ut: 'state',\r\n  },\r\n];\r\n\r\nexport default states;\r\n","import React, { useRef, useEffect, useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { Box, Button, MenuItem, Select, FormControl } from '@mui/material';\r\nimport { getTables, getTableData } from '../../../api';\r\nimport Input from '../../../components/forms/input';\r\nimport CustomFormLabel from '../../../components/forms/custom-elements/CustomFormLabel';\r\nimport {\r\n  AREA_CHART,\r\n  IFRAME_COMPONENT,\r\n  IMAGE_COMPONENT,\r\n  INDIA_DISTRICT_HEAT_MAP,\r\n  INDIA_STATE_HEAT_MAP,\r\n  LINE_CHART,\r\n  SMOOTH_LINE_CHART,\r\n  TEXT_COMPONENT,\r\n  VIDEO_COMPONENT,\r\n  STACKED_LINE_AREA_CHART,\r\n  STACKED_LINE_CHART,\r\n  STATE_DISTRICT_HEAT_MAP,\r\n  PIE_CHART,\r\n  DONUT_CHART,\r\n  HALF_DONUT_CHART,\r\n  TREEMAP_CHART,\r\n  COLUMN_CHART,\r\n  BAR_CHART,\r\n  POLAR_CHART,\r\n  STACKED_BAR_CHART,\r\n  HORIZONTAL_STACKED_BAR_CHART,\r\n  POLAR_STACKED_BAR_CHART,\r\n  ROSE_PIE_CHART,\r\n  FUNNEL_CHART,\r\n  SCATTER_PLOT_CHART,\r\n  BAR_WITH_LINE,\r\n} from '../../../constants';\r\nimport States from '../../../data/stateLgd';\r\nimport { formatCSVToDataArray } from '../../../utils';\r\n\r\nconst colors = [\r\n  { label: '#283619 (Agriculture)', value: '#283619' },\r\n  { label: '#144857 (Energy)', value: '#144857' },\r\n  { label: '#0A573B (Health)', value: '#0A573B' },\r\n  { label: '#453103 (Manufacturing)', value: '#453103' },\r\n  { label: '#815F05 (MSME)', value: '#815F05' },\r\n  { label: '#4B081A (Tourism)', value: '#4B081A' },\r\n  { label: '#0ED7EB (Water & wash)', value: '#0ED7EB' },\r\n  { label: 'Traffic light', value: 'Traffic colors' },\r\n];\r\n\r\nconst ComponentDetails = (props) => {\r\n  const [headers, setHeaders] = useState([]);\r\n  const [numberOfXLines, setNumberOfXLines] = useState(undefined);\r\n  const [numberOfYLines, setNumberOfYLines] = useState(undefined);\r\n  const [xAxisSelections, setXAxisSelections] = useState([]);\r\n  const [yAxisSelections, setYAxisSelections] = useState([]);\r\n  const [legends, setLegends] = useState([]);\r\n  const [numberOfBars, setNumberOfBars] = useState(5);\r\n  const [barSelection, setBarSelection] = useState([]);\r\n  const [dataType, setDataType] = useState(undefined);\r\n  const [tables, setTables] = useState([]);\r\n\r\n  const { t } = useTranslation();\r\n  const inputFile = useRef(null);\r\n\r\n  const getUniqueKeys = (data) => {\r\n    return data[0]?.map((o) => o.value);\r\n  };\r\n\r\n  const dataTypes = [\r\n    { label: 'Upload file', value: 'NEW_FILE_UPLOAD' },\r\n    { label: 'Select Table', value: 'SELECT_TABLE' },\r\n  ];\r\n\r\n  useEffect(() => {\r\n    if (\r\n      (props.type === LINE_CHART ||\r\n        props.type === SMOOTH_LINE_CHART ||\r\n        props.type === AREA_CHART ||\r\n        props.type === SCATTER_PLOT_CHART ||\r\n        props.type === INDIA_STATE_HEAT_MAP ||\r\n        props.type === INDIA_DISTRICT_HEAT_MAP ||\r\n        props.type === STACKED_LINE_CHART ||\r\n        props.type === STACKED_LINE_AREA_CHART ||\r\n        props.type === BAR_WITH_LINE ||\r\n        props.type === STATE_DISTRICT_HEAT_MAP ||\r\n        props.type === PIE_CHART ||\r\n        props.type === DONUT_CHART ||\r\n        props.type === TREEMAP_CHART ||\r\n        props.type === HALF_DONUT_CHART ||\r\n        props.type === HORIZONTAL_STACKED_BAR_CHART ||\r\n        props.type === STACKED_BAR_CHART ||\r\n        props.type === POLAR_STACKED_BAR_CHART ||\r\n        props.type === COLUMN_CHART ||\r\n        props.type === BAR_CHART ||\r\n        props.type === POLAR_CHART ||\r\n        props.type === ROSE_PIE_CHART ||\r\n        props.type === FUNNEL_CHART) &&\r\n      props.file\r\n    ) {\r\n      const reader = new FileReader();\r\n      reader.onload = (e) => {\r\n        const fileData = e.target.result;\r\n        const result = formatCSVToDataArray(fileData);\r\n        if (result) {\r\n          setHeaders(getUniqueKeys(result.data));\r\n        }\r\n      };\r\n      reader.onerror = (error) => {\r\n        console.error('Error reading the file:', error);\r\n      };\r\n      reader.readAsText(props.file);\r\n    }\r\n  }, [props.file, props.type]);\r\n\r\n  useEffect(() => {\r\n    if (dataType === 'SELECT_TABLE' && tables.length === 0) {\r\n      const getTablesData = async () => {\r\n        const res = await getTables();\r\n        if (res.data) {\r\n          setTables(res.data.map((o) => o.table_name));\r\n        }\r\n      };\r\n      getTablesData();\r\n    }\r\n  }, [dataType]);\r\n\r\n  useEffect(() => {\r\n    if (props.table_name && dataType === 'SELECT_TABLE') {\r\n      const getTablesData = async () => {\r\n        const res = await getTableData({\r\n          tableName: props.table_name,\r\n          limit: 1,\r\n          skip: 0,\r\n        });\r\n        if (res.data) {\r\n          setHeaders(Object.keys(res.data[0]));\r\n        }\r\n      };\r\n      getTablesData();\r\n    }\r\n  }, [props.table_name, dataType]);\r\n\r\n  const handleNumberOfYChange = (event) => {\r\n    const value = event;\r\n    if (value < headers.length) {\r\n      setNumberOfYLines(Number(value));\r\n      setYAxisSelections(Array(Number(value)).fill(''));\r\n    }\r\n  };\r\n\r\n  const handleNumberOfXChange = (event) => {\r\n    const value = event;\r\n    if (value < headers.length) {\r\n      setNumberOfXLines(Number(value));\r\n      setYAxisSelections(Array(Number(value)).fill(''));\r\n    }\r\n  };\r\n\r\n  const handleNumberOfBarChange = (event) => {\r\n    const value = event;\r\n    if (value < headers.length && numberOfBars > 1) {\r\n      setNumberOfBars(Number(value));\r\n      setBarSelection(Array(Number(value).fill('')));\r\n    }\r\n  };\r\n\r\n  const handleYAxisSelectionChange = (index, value) => {\r\n    const newSelections = [...yAxisSelections];\r\n    newSelections[index] = value;\r\n    setYAxisSelections(newSelections);\r\n    props.onTextChange(newSelections, 'y_axis_links');\r\n  };\r\n\r\n  const handleXAxisSelectionChange = (index, value) => {\r\n    const newSelections = [...xAxisSelections];\r\n    newSelections[index] = value;\r\n    setXAxisSelections(newSelections);\r\n    props.onTextChange(newSelections, 'z_axis_links');\r\n  };\r\n\r\n  const handleBarSelectionChange = (index, value) => {\r\n    const newSelections = [...barSelection];\r\n    newSelections[index] = value;\r\n    setBarSelection(newSelections);\r\n    props.onTextChange(newSelections, 'y_axis_links');\r\n  };\r\n\r\n  const handleLegendInputChange = (index, value) => {\r\n    const newLegends = [...legends];\r\n    newLegends[index] = value;\r\n    setLegends(newLegends);\r\n    props.onTextChange(newLegends, 'legends');\r\n  };\r\n\r\n  return (\r\n    <Box\r\n      sx={{\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        flexDirection: 'row',\r\n        flexWrap: 'wrap',\r\n        gap: '20px',\r\n      }}\r\n    >\r\n      {(props.type === LINE_CHART ||\r\n        props.type === SMOOTH_LINE_CHART ||\r\n        props.type === AREA_CHART ||\r\n        props.type === INDIA_STATE_HEAT_MAP ||\r\n        props.type === SCATTER_PLOT_CHART ||\r\n        props.type === INDIA_DISTRICT_HEAT_MAP ||\r\n        props.type === STATE_DISTRICT_HEAT_MAP ||\r\n        props.type === BAR_WITH_LINE ||\r\n        props.type === STACKED_LINE_CHART ||\r\n        props.type === STACKED_LINE_AREA_CHART ||\r\n        props.type === PIE_CHART ||\r\n        props.type === TREEMAP_CHART ||\r\n        props.type === DONUT_CHART ||\r\n        props.type === HALF_DONUT_CHART ||\r\n        props.type === POLAR_STACKED_BAR_CHART ||\r\n        props.type === STACKED_BAR_CHART ||\r\n        props.type === HORIZONTAL_STACKED_BAR_CHART ||\r\n        props.type === COLUMN_CHART ||\r\n        props.type === BAR_CHART ||\r\n        props.type === POLAR_CHART ||\r\n        props.type === ROSE_PIE_CHART ||\r\n        props.type === FUNNEL_CHART) && (\r\n        <Box sx={{ display: 'flex', alignItems: 'center', justifyContent: 'center' }}>\r\n          {props.edit ? (\r\n            <>\r\n              <CustomFormLabel>\r\n                {t('table_name')} - {props.table_name}\r\n              </CustomFormLabel>\r\n            </>\r\n          ) : (\r\n            <>\r\n              <FormControl\r\n                sx={{\r\n                  '@media only screen and (min-width: 3600px)': {\r\n                    minWidth: '800px',\r\n                  },\r\n                  '@media only screen and (max-width: 3600px)': {\r\n                    minWidth: '200px',\r\n                  },\r\n                  mr: '20px',\r\n                }}\r\n              >\r\n                <Select\r\n                  labelId=\"select-header-label\"\r\n                  id=\"select-header\"\r\n                  displayEmpty\r\n                  value={dataType}\r\n                  placeholder={t('select_data_type')}\r\n                  onChange={(e) => {\r\n                    setDataType(e.target.value);\r\n                    if (inputFile.current) {\r\n                      inputFile.current.value = '';\r\n                      inputFile.current.type = 'text';\r\n                      inputFile.current.type = 'file';\r\n                    }\r\n                    props.onTextChange(undefined, 'file');\r\n                    props.onTextChange(undefined, 'table_name');\r\n                  }}\r\n                  renderValue={(selected) => {\r\n                    if (selected === '' || !selected) {\r\n                      return <>{t('select_data_type')}</>;\r\n                    }\r\n                    const name = dataTypes.find((o) => o.value === selected);\r\n                    if (name) {\r\n                      return <>{t(name.label)}</>;\r\n                    }\r\n                  }}\r\n                  sx={{\r\n                    display: 'flex',\r\n                    alignItems: 'center',\r\n                    justifyContent: 'center',\r\n                    textAlign: 'center',\r\n                  }}\r\n                >\r\n                  <MenuItem disabled value=\"\">\r\n                    <em>{t('select_data_type')}</em>\r\n                  </MenuItem>\r\n                  {dataTypes.map((header, index) => (\r\n                    <MenuItem key={index} value={header.value}>\r\n                      {header.label}\r\n                    </MenuItem>\r\n                  ))}\r\n                </Select>\r\n              </FormControl>\r\n              {dataType && (\r\n                <>\r\n                  {dataType === 'NEW_FILE_UPLOAD' ? (\r\n                    <>\r\n                      {!props.file && (\r\n                        <Input\r\n                          id={'file'}\r\n                          type=\"file\"\r\n                          accept=\".csv\"\r\n                          onChange={(val) => props.onTextChange(val, 'file')}\r\n                          placeholder={'file'}\r\n                          inputFile={inputFile}\r\n                        />\r\n                      )}\r\n                      {props.file && <CustomFormLabel>{props.file?.name}</CustomFormLabel>}\r\n                      {props.file && (\r\n                        <Button\r\n                          color=\"secondary\"\r\n                          variant=\"contained\"\r\n                          size=\"large\"\r\n                          sx={{\r\n                            '@media only screen and (min-width: 3600px)': {\r\n                              fontSize: '3.2rem',\r\n                              minWidth: '64px',\r\n                              maxHeight: '64px',\r\n                            },\r\n                            '@media only screen and (max-width: 3600px)': {\r\n                              minWidth: '40px',\r\n                            },\r\n                            ml: '20px',\r\n                            mr: '30px',\r\n                          }}\r\n                          onClick={() => {\r\n                            if (inputFile.current) {\r\n                              inputFile.current.value = '';\r\n                              inputFile.current.type = 'text';\r\n                              inputFile.current.type = 'file';\r\n                            }\r\n                            props.onTextChange(undefined, 'file');\r\n                          }}\r\n                        >\r\n                          X\r\n                        </Button>\r\n                      )}\r\n                      {props.file && (\r\n                        <Input\r\n                          id={'text'}\r\n                          value={props.table_description}\r\n                          onChange={(val) => props.onTextChange(val, 'table_description')}\r\n                          placeholder={'enter_table_description'}\r\n                          customheight={'1px'}\r\n                        />\r\n                      )}\r\n                    </>\r\n                  ) : (\r\n                    <FormControl\r\n                      sx={{\r\n                        '@media only screen and (min-width: 3600px)': {\r\n                          minWidth: '800px',\r\n                        },\r\n                        '@media only screen and (max-width: 3600px)': {\r\n                          minWidth: '200px',\r\n                        },\r\n                        mr: '20px',\r\n                      }}\r\n                    >\r\n                      <Select\r\n                        labelId=\"select-header-label\"\r\n                        id=\"select-header\"\r\n                        displayEmpty\r\n                        value={props.table_name}\r\n                        placeholder={t('select_table_name')}\r\n                        onChange={(e) => {\r\n                          props.onTextChange(e.target.value, 'table_name');\r\n                        }}\r\n                        renderValue={(selected) => {\r\n                          if (selected === '' || !selected) {\r\n                            return <>{t('select_table_name')}</>;\r\n                          }\r\n                          const name = tables.find((o) => o === selected);\r\n                          if (name) {\r\n                            return <>{t(name)}</>;\r\n                          }\r\n                        }}\r\n                        sx={{\r\n                          display: 'flex',\r\n                          alignItems: 'center',\r\n                          justifyContent: 'center',\r\n                          textAlign: 'center',\r\n                        }}\r\n                      >\r\n                        <MenuItem disabled value=\"\">\r\n                          <em>{t('select_table_name')}</em>\r\n                        </MenuItem>\r\n                        {tables.map((header, index) => (\r\n                          <MenuItem key={index} value={header}>\r\n                            {header}\r\n                          </MenuItem>\r\n                        ))}\r\n                      </Select>\r\n                    </FormControl>\r\n                  )}\r\n                </>\r\n              )}\r\n            </>\r\n          )}\r\n        </Box>\r\n      )}\r\n\r\n      {(props.type === STACKED_LINE_CHART ||\r\n        props.type === STACKED_LINE_AREA_CHART ||\r\n        props.type === POLAR_STACKED_BAR_CHART ||\r\n        props.type === BAR_WITH_LINE ||\r\n        props.type === STACKED_BAR_CHART ||\r\n        props.type === HORIZONTAL_STACKED_BAR_CHART) &&\r\n        headers.length > 0 && (\r\n          <Input\r\n            id={'text'}\r\n            value={numberOfYLines}\r\n            onChange={(e) => handleNumberOfYChange(e)}\r\n            placeholder={\r\n              props.type === BAR_WITH_LINE ? 'Select No of bars' : 'Select Number Of Y Lines'\r\n            }\r\n            customheight={'1px'}\r\n          />\r\n        )}\r\n      {props.type === BAR_WITH_LINE && headers.length > 0 && (\r\n        <Input\r\n          id={'text'}\r\n          value={numberOfXLines}\r\n          onChange={(e) => handleNumberOfXChange(e)}\r\n          placeholder={'Select No of lines'}\r\n          customheight={'1px'}\r\n        />\r\n      )}\r\n\r\n      {props.type === COLUMN_CHART && headers.length > 0 && (\r\n        <Input\r\n          id={'text'}\r\n          value={numberOfBars}\r\n          onChange={(e) => handleNumberOfBarChange(e)}\r\n          placeholder=\"Select Number Of Bars\"\r\n          customheight={'1px'}\r\n        />\r\n      )}\r\n\r\n      {props.type === BAR_WITH_LINE &&\r\n        headers.length > 0 &&\r\n        Array.from({ length: numberOfXLines }).map((_, index) => (\r\n          <React.Fragment key={index}>\r\n            <FormControl\r\n              sx={{\r\n                '@media only screen and (min-width: 3600px)': {\r\n                  minWidth: '800px',\r\n                },\r\n                '@media only screen and (max-width: 3600px)': {\r\n                  minWidth: '200px',\r\n                },\r\n              }}\r\n            >\r\n              <Select\r\n                labelId={`select-header-label-${index}`}\r\n                id={`select-header-${index}`}\r\n                displayEmpty\r\n                value={xAxisSelections[index]}\r\n                placeholder={t('select_line')}\r\n                onChange={(event) => handleXAxisSelectionChange(index, event.target.value)}\r\n                renderValue={(selected) => {\r\n                  if (selected === '' || !selected) {\r\n                    return (\r\n                      <>\r\n                        {t('select_line')} {`${index + 1}`}\r\n                      </>\r\n                    );\r\n                  }\r\n                  const name = headers.find((o) => o === selected);\r\n                  if (name) {\r\n                    return <>{t(name)}</>;\r\n                  }\r\n                }}\r\n                sx={{\r\n                  display: 'flex',\r\n                  alignItems: 'center',\r\n                  justifyContent: 'center',\r\n                  textAlign: 'center',\r\n                }}\r\n              >\r\n                <MenuItem disabled value=\"\">\r\n                  <em>{t('select_line')}</em>\r\n                </MenuItem>\r\n                {headers.map((header, index) => (\r\n                  <MenuItem key={index} value={header}>\r\n                    {header}\r\n                  </MenuItem>\r\n                ))}\r\n              </Select>\r\n            </FormControl>\r\n            <Input\r\n              id={`legend-input-${numberOfYLines + index}`}\r\n              value={legends[numberOfYLines + index]}\r\n              onChange={(value) => handleLegendInputChange(numberOfYLines + index, value)}\r\n              placeholder={`enter_legend_${numberOfYLines + index + 1}`}\r\n              customheight={'1px'}\r\n              sx={{\r\n                '@media only screen and (min-width: 3600px)': {\r\n                  minWidth: '800px',\r\n                },\r\n                '@media only screen and (max-width: 3600px)': {\r\n                  minWidth: '200px',\r\n                },\r\n              }}\r\n            />\r\n          </React.Fragment>\r\n        ))}\r\n\r\n      {(props.type === STACKED_LINE_CHART ||\r\n        props.type === STACKED_LINE_AREA_CHART ||\r\n        props.type === POLAR_STACKED_BAR_CHART ||\r\n        props.type === STACKED_BAR_CHART ||\r\n        props.type === BAR_WITH_LINE ||\r\n        props.type === HORIZONTAL_STACKED_BAR_CHART) &&\r\n        headers.length > 0 &&\r\n        Array.from({ length: numberOfYLines }).map((_, index) => (\r\n          <React.Fragment key={index}>\r\n            <FormControl\r\n              sx={{\r\n                '@media only screen and (min-width: 3600px)': {\r\n                  minWidth: '800px',\r\n                },\r\n                '@media only screen and (max-width: 3600px)': {\r\n                  minWidth: '200px',\r\n                },\r\n              }}\r\n            >\r\n              <Select\r\n                labelId={`select-header-label-${index}`}\r\n                id={`select-header-${index}`}\r\n                displayEmpty\r\n                value={yAxisSelections[index]}\r\n                placeholder={t('select_y_axis')}\r\n                onChange={(event) => handleYAxisSelectionChange(index, event.target.value)}\r\n                renderValue={(selected) => {\r\n                  if (selected === '' || !selected) {\r\n                    return (\r\n                      <>\r\n                        {t('select_y_axis')} {`${index + 1}`}\r\n                      </>\r\n                    );\r\n                  }\r\n                  const name = headers.find((o) => o === selected);\r\n                  if (name) {\r\n                    return <>{t(name)}</>;\r\n                  }\r\n                }}\r\n                sx={{\r\n                  display: 'flex',\r\n                  alignItems: 'center',\r\n                  justifyContent: 'center',\r\n                  textAlign: 'center',\r\n                }}\r\n              >\r\n                <MenuItem disabled value=\"\">\r\n                  <em>{t('select_y_axis')}</em>\r\n                </MenuItem>\r\n                {headers.map((header, index) => (\r\n                  <MenuItem key={index} value={header}>\r\n                    {header}\r\n                  </MenuItem>\r\n                ))}\r\n              </Select>\r\n            </FormControl>\r\n            <Input\r\n              id={`legend-input-${index}`}\r\n              value={legends[index]}\r\n              onChange={(value) => handleLegendInputChange(index, value)}\r\n              placeholder={`enter_legend_${index + 1}`}\r\n              customheight={'1px'}\r\n              sx={{\r\n                '@media only screen and (min-width: 3600px)': {\r\n                  minWidth: '800px',\r\n                },\r\n                '@media only screen and (max-width: 3600px)': {\r\n                  minWidth: '200px',\r\n                },\r\n              }}\r\n            />\r\n          </React.Fragment>\r\n        ))}\r\n\r\n      {props.type === COLUMN_CHART &&\r\n        numberOfBars > 1 &&\r\n        headers.length > 0 &&\r\n        Array.from({ length: numberOfBars }).map((_, index) => (\r\n          <React.Fragment key={index}>\r\n            <FormControl\r\n              sx={{\r\n                '@media only screen and (min-width: 3600px)': {\r\n                  minWidth: '800px',\r\n                },\r\n                '@media only screen and (max-width: 3600px)': {\r\n                  minWidth: '200px',\r\n                },\r\n              }}\r\n            >\r\n              <Select\r\n                labelId={`select-header-label-${index}`}\r\n                id={`select-header-${index}`}\r\n                displayEmpty\r\n                value={barSelection[index]}\r\n                placeholder={t('select_y_axis')}\r\n                onChange={(event) => handleBarSelectionChange(index, event.target.value)}\r\n                renderValue={(selected) => {\r\n                  if (selected === '' || !selected) {\r\n                    return (\r\n                      <>\r\n                        {t('select_y_axis')} {`${index + 1}`}\r\n                      </>\r\n                    );\r\n                  }\r\n                  const name = headers.find((o) => o === selected);\r\n                  if (name) {\r\n                    return <>{t(name)}</>;\r\n                  }\r\n                }}\r\n                sx={{\r\n                  display: 'flex',\r\n                  alignItems: 'center',\r\n                  justifyContent: 'center',\r\n                  textAlign: 'center',\r\n                }}\r\n              >\r\n                <MenuItem disabled value=\"\">\r\n                  <em>{t('select_y_axis')}</em>\r\n                </MenuItem>\r\n                {headers.map((header, index) => (\r\n                  <MenuItem key={index} value={header}>\r\n                    {header}\r\n                  </MenuItem>\r\n                ))}\r\n              </Select>\r\n            </FormControl>\r\n            <Input\r\n              id={`legend-input-${index}`}\r\n              value={legends[index]}\r\n              onChange={(value) => handleLegendInputChange(index, value)}\r\n              placeholder={`enter_legend_${index + 1}`}\r\n              customheight={'1px'}\r\n              sx={{\r\n                '@media only screen and (min-width: 3600px)': {\r\n                  minWidth: '800px',\r\n                },\r\n                '@media only screen and (max-width: 3600px)': {\r\n                  minWidth: '200px',\r\n                },\r\n              }}\r\n            />\r\n          </React.Fragment>\r\n        ))}\r\n\r\n      {(props.type === LINE_CHART ||\r\n        props.type === SMOOTH_LINE_CHART ||\r\n        props.type === AREA_CHART ||\r\n        props.type === STACKED_LINE_CHART ||\r\n        props.type === STACKED_LINE_AREA_CHART ||\r\n        props.type === PIE_CHART ||\r\n        props.type === TREEMAP_CHART ||\r\n        props.type === DONUT_CHART ||\r\n        props.type === SCATTER_PLOT_CHART ||\r\n        props.type === HALF_DONUT_CHART ||\r\n        props.type === POLAR_STACKED_BAR_CHART ||\r\n        props.type === STACKED_BAR_CHART ||\r\n        props.type === HORIZONTAL_STACKED_BAR_CHART ||\r\n        props.type === COLUMN_CHART ||\r\n        props.type === BAR_CHART ||\r\n        props.type === BAR_WITH_LINE ||\r\n        props.type === POLAR_CHART ||\r\n        props.type === ROSE_PIE_CHART ||\r\n        props.type === FUNNEL_CHART) &&\r\n        headers.length > 0 && (\r\n          <FormControl\r\n            sx={{\r\n              '@media only screen and (min-width: 3600px)': {\r\n                minWidth: '800px',\r\n              },\r\n              '@media only screen and (max-width: 3600px)': {\r\n                minWidth: '200px',\r\n              },\r\n            }}\r\n          >\r\n            <Select\r\n              labelId=\"select-header-label\"\r\n              id=\"select-header\"\r\n              displayEmpty\r\n              value={props.x_axis_links}\r\n              placeholder={t('select_x_axis')}\r\n              onChange={(val) => {\r\n                props.onTextChange([val.target.value], 'x_axis_links');\r\n              }}\r\n              renderValue={(selected) => {\r\n                if (selected === '' || !selected) {\r\n                  return <>{t('select_x_axis')}</>;\r\n                }\r\n                const name = headers.find((o) => o === selected);\r\n                if (name) {\r\n                  return <>{t(name)}</>;\r\n                }\r\n              }}\r\n              sx={{\r\n                display: 'flex',\r\n                alignItems: 'center',\r\n                justifyContent: 'center',\r\n                textAlign: 'center',\r\n              }}\r\n            >\r\n              <MenuItem disabled value=\"\">\r\n                <em>{t('select_x_axis')}</em>\r\n              </MenuItem>\r\n              {headers.map((header, index) => (\r\n                <MenuItem key={index} value={header}>\r\n                  {header}\r\n                </MenuItem>\r\n              ))}\r\n            </Select>\r\n          </FormControl>\r\n        )}\r\n      {props.type === INDIA_STATE_HEAT_MAP && headers.length > 0 && (\r\n        <FormControl\r\n          sx={{\r\n            '@media only screen and (min-width: 3600px)': {\r\n              minWidth: '800px',\r\n            },\r\n            '@media only screen and (max-width: 3600px)': {\r\n              minWidth: '200px',\r\n            },\r\n          }}\r\n        >\r\n          <Select\r\n            labelId=\"select-header-label\"\r\n            id=\"select-header\"\r\n            displayEmpty\r\n            value={props.state_lgd_link}\r\n            placeholder={t('select_state_column')}\r\n            onChange={(val) => {\r\n              props.onTextChange(val.target.value, 'state_lgd_link');\r\n            }}\r\n            renderValue={(selected) => {\r\n              if (selected === '' || !selected) {\r\n                return <>{t('select_state_column')}</>;\r\n              }\r\n              const name = headers.find((o) => o === selected);\r\n              if (name) {\r\n                return <>{t(name)}</>;\r\n              }\r\n            }}\r\n            sx={{\r\n              display: 'flex',\r\n              alignItems: 'center',\r\n              justifyContent: 'center',\r\n              textAlign: 'center',\r\n            }}\r\n          >\r\n            <MenuItem disabled value=\"\">\r\n              <em>{t('select_state_column')}</em>\r\n            </MenuItem>\r\n            {headers.map((header, index) => (\r\n              <MenuItem key={index} value={header}>\r\n                {header}\r\n              </MenuItem>\r\n            ))}\r\n          </Select>\r\n        </FormControl>\r\n      )}\r\n      {(props.type === INDIA_DISTRICT_HEAT_MAP || props.type === STATE_DISTRICT_HEAT_MAP) &&\r\n        headers.length > 0 && (\r\n          <FormControl\r\n            sx={{\r\n              '@media only screen and (min-width: 3600px)': {\r\n                minWidth: '800px',\r\n              },\r\n              '@media only screen and (max-width: 3600px)': {\r\n                minWidth: '200px',\r\n              },\r\n            }}\r\n          >\r\n            <Select\r\n              labelId=\"select-header-label\"\r\n              id=\"select-header\"\r\n              displayEmpty\r\n              value={props.district_lgd_link}\r\n              placeholder={t('select_district_column')}\r\n              onChange={(val) => {\r\n                props.onTextChange(val.target.value, 'district_lgd_link');\r\n              }}\r\n              renderValue={(selected) => {\r\n                if (selected === '' || !selected) {\r\n                  return <>{t('select_district_column')}</>;\r\n                }\r\n                const name = headers.find((o) => o === selected);\r\n                if (name) {\r\n                  return <>{t(name)}</>;\r\n                }\r\n              }}\r\n              sx={{\r\n                display: 'flex',\r\n                alignItems: 'center',\r\n                justifyContent: 'center',\r\n                textAlign: 'center',\r\n              }}\r\n            >\r\n              <MenuItem disabled value=\"\">\r\n                <em>{t('select_district_column')}</em>\r\n              </MenuItem>\r\n              {headers.map((header, index) => (\r\n                <MenuItem key={index} value={header}>\r\n                  {header}\r\n                </MenuItem>\r\n              ))}\r\n            </Select>\r\n          </FormControl>\r\n        )}\r\n      {props.type === STATE_DISTRICT_HEAT_MAP && (\r\n        <FormControl\r\n          sx={{\r\n            '@media only screen and (min-width: 3600px)': {\r\n              minWidth: '800px',\r\n            },\r\n            '@media only screen and (max-width: 3600px)': {\r\n              minWidth: '200px',\r\n            },\r\n          }}\r\n        >\r\n          <Select\r\n            labelId=\"select-header-label\"\r\n            id=\"select-header\"\r\n            displayEmpty\r\n            value={props.state_lgd_code}\r\n            placeholder={t('select_state')}\r\n            onChange={(val) => {\r\n              props.onTextChange(val.target.value, 'state_lgd_code');\r\n            }}\r\n            renderValue={(selected) => {\r\n              if (selected === '' || !selected) {\r\n                return <>{t('select_state')}</>;\r\n              }\r\n              const name = States.find((o) => o.state_lgd_code === selected);\r\n              if (name) {\r\n                return <>{t(name.state_name)}</>;\r\n              }\r\n            }}\r\n            sx={{\r\n              display: 'flex',\r\n              alignItems: 'center',\r\n              justifyContent: 'center',\r\n              textAlign: 'center',\r\n            }}\r\n          >\r\n            <MenuItem disabled value=\"\">\r\n              <em>{t('select_state')}</em>\r\n            </MenuItem>\r\n            {States.map((header, index) => (\r\n              <MenuItem key={index} value={header.state_lgd_code}>\r\n                {header.state_name}\r\n              </MenuItem>\r\n            ))}\r\n          </Select>\r\n        </FormControl>\r\n      )}\r\n      {(props.type === INDIA_STATE_HEAT_MAP ||\r\n        props.type === INDIA_DISTRICT_HEAT_MAP ||\r\n        props.type === STATE_DISTRICT_HEAT_MAP) &&\r\n        headers.length > 0 && (\r\n          <FormControl\r\n            sx={{\r\n              '@media only screen and (min-width: 3600px)': {\r\n                minWidth: '800px',\r\n              },\r\n              '@media only screen and (max-width: 3600px)': {\r\n                minWidth: '200px',\r\n              },\r\n            }}\r\n          >\r\n            <Select\r\n              labelId=\"select-header-label\"\r\n              id=\"select-header\"\r\n              displayEmpty\r\n              value={props.x_axis_links}\r\n              placeholder={t('select_value_column')}\r\n              onChange={(val) => {\r\n                props.onTextChange([val.target.value], 'x_axis_links');\r\n              }}\r\n              renderValue={(selected) => {\r\n                if (selected === '' || !selected) {\r\n                  return <>{t('select_value_column')}</>;\r\n                }\r\n                const name = headers.find((o) => o === selected);\r\n                if (name) {\r\n                  return <>{t(name)}</>;\r\n                }\r\n              }}\r\n              sx={{\r\n                display: 'flex',\r\n                alignItems: 'center',\r\n                justifyContent: 'center',\r\n                textAlign: 'center',\r\n              }}\r\n            >\r\n              <MenuItem disabled value=\"\">\r\n                <em>{t('select_value_column')}</em>\r\n              </MenuItem>\r\n              {headers.map((header, index) => (\r\n                <MenuItem key={index} value={header}>\r\n                  {header}\r\n                </MenuItem>\r\n              ))}\r\n            </Select>\r\n          </FormControl>\r\n        )}\r\n\r\n      {(props.type === LINE_CHART ||\r\n        props.type === SMOOTH_LINE_CHART ||\r\n        props.type === AREA_CHART ||\r\n        props.type === PIE_CHART ||\r\n        props.type === SCATTER_PLOT_CHART ||\r\n        props.type === DONUT_CHART ||\r\n        props.type === TREEMAP_CHART ||\r\n        props.type === HALF_DONUT_CHART ||\r\n        props.type === BAR_CHART ||\r\n        (props.type === COLUMN_CHART && numberOfBars <= 1) ||\r\n        props.type === POLAR_CHART ||\r\n        props.type === ROSE_PIE_CHART ||\r\n        props.type === FUNNEL_CHART) &&\r\n        headers.length > 0 && (\r\n          <FormControl\r\n            sx={{\r\n              '@media only screen and (min-width: 3600px)': {\r\n                minWidth: '800px',\r\n              },\r\n              '@media only screen and (max-width: 3600px)': {\r\n                minWidth: '200px',\r\n              },\r\n            }}\r\n          >\r\n            <Select\r\n              labelId=\"select-header-label\"\r\n              id=\"select-header\"\r\n              displayEmpty\r\n              value={props.y_axis_links}\r\n              placeholder={t('select_y_axis')}\r\n              onChange={(val) => {\r\n                props.onTextChange([val.target.value], 'y_axis_links');\r\n              }}\r\n              renderValue={(selected) => {\r\n                if (selected === '' || !selected) {\r\n                  return <>{t('select_y_axis')}</>;\r\n                }\r\n                const name = headers.find((o) => o === selected);\r\n                if (name) {\r\n                  return <>{t(name)}</>;\r\n                }\r\n              }}\r\n              sx={{\r\n                display: 'flex',\r\n                alignItems: 'center',\r\n                justifyContent: 'center',\r\n                textAlign: 'center',\r\n              }}\r\n            >\r\n              <MenuItem disabled value=\"\">\r\n                <em>{t('select_y_axis')}</em>\r\n              </MenuItem>\r\n              {headers.map((header, index) => (\r\n                <MenuItem key={index} value={header}>\r\n                  {header}\r\n                </MenuItem>\r\n              ))}\r\n            </Select>\r\n          </FormControl>\r\n        )}\r\n\r\n      {(props.type === LINE_CHART ||\r\n        props.type === SMOOTH_LINE_CHART ||\r\n        props.type === AREA_CHART ||\r\n        props.type === STACKED_LINE_CHART ||\r\n        props.type === STACKED_LINE_AREA_CHART ||\r\n        props.type === POLAR_STACKED_BAR_CHART ||\r\n        props.type === STACKED_BAR_CHART ||\r\n        props.type === HORIZONTAL_STACKED_BAR_CHART ||\r\n        props.type === PIE_CHART ||\r\n        props.type === DONUT_CHART ||\r\n        props.type === BAR_WITH_LINE ||\r\n        props.type === HALF_DONUT_CHART ||\r\n        props.type === SCATTER_PLOT_CHART ||\r\n        props.type === COLUMN_CHART ||\r\n        props.type === BAR_CHART ||\r\n        props.type === POLAR_CHART ||\r\n        props.type === ROSE_PIE_CHART ||\r\n        props.type === FUNNEL_CHART) &&\r\n        headers.length > 0 && (\r\n          <Input\r\n            id={'text'}\r\n            value={props.x_label}\r\n            onChange={(val) => props.onTextChange(val, 'x_label')}\r\n            placeholder=\"x_label\"\r\n            customheight={'1px'}\r\n          />\r\n        )}\r\n\r\n      {(props.type === LINE_CHART ||\r\n        props.type === SMOOTH_LINE_CHART ||\r\n        props.type === AREA_CHART ||\r\n        props.type === STACKED_LINE_CHART ||\r\n        props.type === POLAR_STACKED_BAR_CHART ||\r\n        props.type === STACKED_BAR_CHART ||\r\n        props.type === HORIZONTAL_STACKED_BAR_CHART ||\r\n        props.type === SCATTER_PLOT_CHART ||\r\n        props.type === STACKED_LINE_AREA_CHART ||\r\n        props.type === PIE_CHART ||\r\n        props.type === DONUT_CHART ||\r\n        props.type === BAR_WITH_LINE ||\r\n        props.type === HALF_DONUT_CHART ||\r\n        props.type === COLUMN_CHART ||\r\n        props.type === BAR_CHART ||\r\n        props.type === POLAR_CHART ||\r\n        props.type === ROSE_PIE_CHART ||\r\n        props.type === FUNNEL_CHART) &&\r\n        headers.length > 0 && (\r\n          <Input\r\n            id={'text'}\r\n            value={props.y_label_1}\r\n            onChange={(val) => props.onTextChange(val, 'y_label_1')}\r\n            placeholder=\"y_label_1\"\r\n            customheight={'1px'}\r\n          />\r\n        )}\r\n\r\n      {props.type === BAR_WITH_LINE && headers.length > 0 && (\r\n        <Input\r\n          id={'text'}\r\n          value={props.y_label_2}\r\n          onChange={(val) => props.onTextChange(val, 'y_label_2')}\r\n          placeholder=\"y_label_2\"\r\n          customheight={'1px'}\r\n        />\r\n      )}\r\n\r\n      {(props.type === TEXT_COMPONENT || props.type === IFRAME_COMPONENT) && (\r\n        <Input\r\n          id={'text'}\r\n          value={props.text}\r\n          customheight={'1px'}\r\n          onChange={(val) => props.onTextChange(val, 'text')}\r\n          placeholder={props.type === IFRAME_COMPONENT ? 'enter_url' : 'enter_text'}\r\n        />\r\n      )}\r\n      {(props.type === IMAGE_COMPONENT || props.type === VIDEO_COMPONENT) && (\r\n        <Box sx={{ display: 'flex', alignItems: 'center', justifyContent: 'center' }}>\r\n          {!props.file && (\r\n            <Input\r\n              id={'file'}\r\n              type=\"file\"\r\n              accept={props.type === VIDEO_COMPONENT ? 'video/*' : 'image/*'}\r\n              onChange={(val) => props.onTextChange(val, 'file')}\r\n              placeholder={'file'}\r\n              inputFile={inputFile}\r\n            />\r\n          )}\r\n          {props.file && <CustomFormLabel>{props.file?.name}</CustomFormLabel>}\r\n          {props.file && (\r\n            <Button\r\n              color=\"secondary\"\r\n              variant=\"contained\"\r\n              size=\"large\"\r\n              sx={{\r\n                '@media only screen and (min-width: 3600px)': {\r\n                  fontSize: '3.2rem',\r\n                  minWidth: '64px',\r\n                  maxHeight: '64px',\r\n                },\r\n                '@media only screen and (max-width: 3600px)': {\r\n                  minWidth: '40px',\r\n                },\r\n                ml: '20px',\r\n              }}\r\n              onClick={() => {\r\n                if (inputFile.current) {\r\n                  inputFile.current.value = '';\r\n                  inputFile.current.type = 'text';\r\n                  inputFile.current.type = 'file';\r\n                }\r\n                props.onTextChange(undefined, 'file');\r\n              }}\r\n            >\r\n              X\r\n            </Button>\r\n          )}\r\n        </Box>\r\n      )}\r\n      {props.type !== TEXT_COMPONENT && (\r\n        <>\r\n          <Input\r\n            id={'heading'}\r\n            value={props.heading}\r\n            placeholder={'enter_heading'}\r\n            customheight={'1px'}\r\n            onChange={(val) => props.onTextChange(val, 'heading')}\r\n          />\r\n          <Input\r\n            id={'subHeading'}\r\n            value={props.sub_heading}\r\n            customheight={'1px'}\r\n            onChange={(val) => props.onTextChange(val, 'sub_heading')}\r\n            placeholder={'enter_subHeading'}\r\n          />\r\n          <Input\r\n            id={'source'}\r\n            value={props.source}\r\n            customheight={'1px'}\r\n            onChange={(val) => props.onTextChange(val, 'source')}\r\n            placeholder={'enter_source'}\r\n          />\r\n          <Input\r\n            id={'note'}\r\n            value={props.note}\r\n            placeholder={'enter_note'}\r\n            customheight={'1px'}\r\n            onChange={(val) => props.onTextChange(val, 'note')}\r\n          />\r\n        </>\r\n      )}\r\n      {(props.type === 'IMAGE_COMPONENT' || props.type === 'VIDEO_COMPONENT') && (\r\n        <FormControl\r\n          sx={{\r\n            '@media only screen and (min-width: 3600px)': {\r\n              minWidth: '800px',\r\n            },\r\n            '@media only screen and (max-width: 3600px)': {\r\n              minWidth: '200px',\r\n            },\r\n            mr: '20px',\r\n          }}\r\n        >\r\n          <Select\r\n            labelId=\"select-header-label\"\r\n            id=\"select-header\"\r\n            displayEmpty\r\n            value={props.crop_type}\r\n            placeholder={t('select_crop_type')}\r\n            onChange={(e) => {\r\n              props.onTextChange(e.target.value, 'crop_type');\r\n            }}\r\n            renderValue={(selected) => {\r\n              if (selected === '' || !selected) {\r\n                return <>{t('select_crop_type')}</>;\r\n              }\r\n              const name = ['LEFT', 'RIGHT'].find((o) => o === selected);\r\n              if (name) {\r\n                return <>{t(name)}</>;\r\n              }\r\n            }}\r\n            sx={{\r\n              display: 'flex',\r\n              alignItems: 'center',\r\n              justifyContent: 'center',\r\n              textAlign: 'center',\r\n            }}\r\n          >\r\n            <MenuItem disabled value=\"\">\r\n              <em>{t('select_crop_type')}</em>\r\n            </MenuItem>\r\n            {['LEFT', 'RIGHT'].map((header, index) => (\r\n              <MenuItem key={index} value={header}>\r\n                {header}\r\n              </MenuItem>\r\n            ))}\r\n          </Select>\r\n        </FormControl>\r\n      )}\r\n      {(props.type === INDIA_STATE_HEAT_MAP ||\r\n        props.type === INDIA_DISTRICT_HEAT_MAP ||\r\n        props.type === STATE_DISTRICT_HEAT_MAP) && (\r\n        <>\r\n          <FormControl\r\n            sx={{\r\n              '@media only screen and (min-width: 3600px)': {\r\n                minWidth: '800px',\r\n              },\r\n              '@media only screen and (max-width: 3600px)': {\r\n                minWidth: '200px',\r\n              },\r\n              mr: '20px',\r\n            }}\r\n          >\r\n            <Select\r\n              labelId=\"select-header-label\"\r\n              id=\"select-header\"\r\n              displayEmpty\r\n              value={props.custom_css?.map_type}\r\n              placeholder={t('select_map_type')}\r\n              onChange={(e) => {\r\n                props.onTextChange(\r\n                  {\r\n                    ...props.custom_css,\r\n                    map_type: e.target.value,\r\n                  },\r\n                  'custom_css',\r\n                );\r\n              }}\r\n              renderValue={(selected) => {\r\n                if (selected === '' || !selected) {\r\n                  return <>{t('select_map_type')}</>;\r\n                }\r\n                const name = ['POSITIVE', 'NEGATIVE'].find((o) => o === selected);\r\n                if (name) {\r\n                  return <>{t(name)}</>;\r\n                }\r\n              }}\r\n              sx={{\r\n                display: 'flex',\r\n                alignItems: 'center',\r\n                justifyContent: 'center',\r\n                textAlign: 'center',\r\n              }}\r\n            >\r\n              <MenuItem disabled value=\"\">\r\n                <em>{t('select_map_type')}</em>\r\n              </MenuItem>\r\n              {['POSITIVE', 'NEGATIVE'].map((header, index) => (\r\n                <MenuItem key={index} value={header}>\r\n                  {header}\r\n                </MenuItem>\r\n              ))}\r\n            </Select>\r\n          </FormControl>\r\n          <FormControl\r\n            sx={{\r\n              '@media only screen and (min-width: 3600px)': {\r\n                minWidth: '800px',\r\n              },\r\n              '@media only screen and (max-width: 3600px)': {\r\n                minWidth: '200px',\r\n              },\r\n              mr: '20px',\r\n            }}\r\n          >\r\n            <Select\r\n              labelId=\"select-header-label\"\r\n              id=\"select-header\"\r\n              displayEmpty\r\n              value={props.custom_css?.map_format}\r\n              placeholder={t('select_map_format')}\r\n              onChange={(e) => {\r\n                props.onTextChange(\r\n                  {\r\n                    ...props.custom_css,\r\n                    map_format: e.target.value,\r\n                  },\r\n                  'custom_css',\r\n                );\r\n              }}\r\n              renderValue={(selected) => {\r\n                if (selected === '' || !selected) {\r\n                  return <>{t('select_map_format')}</>;\r\n                }\r\n                const name = ['PERCENTAGE', 'MEDIAN'].find((o) => o === selected);\r\n                if (name) {\r\n                  return <>{t(name)}</>;\r\n                }\r\n              }}\r\n              sx={{\r\n                display: 'flex',\r\n                alignItems: 'center',\r\n                justifyContent: 'center',\r\n                textAlign: 'center',\r\n              }}\r\n            >\r\n              <MenuItem disabled value=\"\">\r\n                <em>{t('select_map_format')}</em>\r\n              </MenuItem>\r\n              {['PERCENTAGE', 'MEDIAN'].map((header, index) => (\r\n                <MenuItem key={index} value={header}>\r\n                  {header}\r\n                </MenuItem>\r\n              ))}\r\n            </Select>\r\n          </FormControl>\r\n          <FormControl\r\n            sx={{\r\n              '@media only screen and (min-width: 3600px)': {\r\n                minWidth: '800px',\r\n              },\r\n              '@media only screen and (max-width: 3600px)': {\r\n                minWidth: '200px',\r\n              },\r\n              mr: '20px',\r\n            }}\r\n          >\r\n            <Select\r\n              labelId=\"select-header-label\"\r\n              id=\"select-header\"\r\n              displayEmpty\r\n              value={props.custom_css?.heat_map_color}\r\n              placeholder={t('select_color_type')}\r\n              onChange={(e) => {\r\n                props.onTextChange(\r\n                  {\r\n                    ...props.custom_css,\r\n                    heat_map_color: e.target.value,\r\n                  },\r\n                  'custom_css',\r\n                );\r\n              }}\r\n              renderValue={(selected) => {\r\n                if (selected === '' || !selected) {\r\n                  return <>{t('select_color_type')}</>;\r\n                }\r\n                const name =\r\n                  props.custom_css?.map_format === 'PERCENTAGE'\r\n                    ? colors.find((o) => o.value === selected)\r\n                    : [{ label: 'Traffic light', value: 'Traffic colors' }].find(\r\n                        (o) => o.value === selected,\r\n                      );\r\n                if (name) {\r\n                  return <>{t(name.label)}</>;\r\n                }\r\n              }}\r\n              sx={{\r\n                display: 'flex',\r\n                alignItems: 'center',\r\n                justifyContent: 'center',\r\n                textAlign: 'center',\r\n              }}\r\n            >\r\n              <MenuItem disabled value=\"\">\r\n                <em>{t('select_color_type')}</em>\r\n              </MenuItem>\r\n              {props.custom_css?.map_format === 'PERCENTAGE'\r\n                ? colors.map((header, index) => (\r\n                    <MenuItem key={index} value={header.value} sx={{ background: header.value }}>\r\n                      {header.label}\r\n                    </MenuItem>\r\n                  ))\r\n                : [{ label: 'Traffic light', value: 'Traffic colors' }].map((header, index) => (\r\n                    <MenuItem key={index} value={header.value} sx={{ background: header.value }}>\r\n                      {header.label}\r\n                    </MenuItem>\r\n                  ))}\r\n            </Select>\r\n          </FormControl>\r\n        </>\r\n      )}\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default ComponentDetails;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport {\r\n  Typography,\r\n  FormControl,\r\n  Select,\r\n  MenuItem,\r\n  Grid,\r\n  Box,\r\n  Button,\r\n  Alert,\r\n  Snackbar,\r\n} from '@mui/material';\r\nimport {\r\n  DIVISION_MULTIPLE,\r\n  IMAGE_COMPONENT,\r\n  SCREENS,\r\n  TEXT_COMPONENT,\r\n  VIDEO_COMPONENT,\r\n} from '../../../constants';\r\nimport LayoutComponent from '../layoutComponent';\r\nimport ComponentDetails from '../componentDetails';\r\nimport { createLayoutConfig, getComponents, createTable } from '../../../api';\r\n\r\nconst Layout = (props) => {\r\n  const { t } = useTranslation();\r\n  const { screen, step, setStep, displays, setDisplays } = props;\r\n  const [components, setComponents] = useState([]);\r\n  const [alertMessage, setAlertMessage] = useState('');\r\n  const [edit, setEdit] = useState(false);\r\n  const [showPreview, setShowPreview] = useState(false);\r\n\r\n  const handleClose = (reason) => {\r\n    if (reason === 'clickaway') {\r\n      return;\r\n    }\r\n    setAlertMessage('');\r\n  };\r\n\r\n  useEffect(() => {\r\n    const getComponentsData = async () => {\r\n      const res = await getComponents();\r\n      if (res.data) {\r\n        setComponents(res.data);\r\n      }\r\n    };\r\n    getComponentsData();\r\n  }, []);\r\n\r\n  const handleSubmit = async () => {\r\n    let screens = displays[screen];\r\n    let data = [];\r\n\r\n    if (edit) {\r\n      for (let i = 0; i < screens.length; i++) {\r\n        let obj = screens[i];\r\n        if (obj.y_axis_links && obj.y_axis_links.includes('')) {\r\n          setAlertMessage(t('y_axis_links_contain_empty_value'));\r\n          return;\r\n        }\r\n        // if (!obj.heading) {\r\n        //   setAlertMessage(t('please_enter_heading'));\r\n        //   return;\r\n        // }\r\n        data.push({\r\n          id: obj.config_id,\r\n          heading: obj.heading,\r\n          sub_heading: obj.sub_heading,\r\n          source: obj.source,\r\n          note: obj.note,\r\n          custom_css: obj.custom_css\r\n            ? { ...obj.custom_css, crop_type: obj.crop_type }\r\n            : { crop_type: obj.crop_type },\r\n          x_axis_links: obj.x_axis_links,\r\n          y_axis_links: obj.y_axis_links,\r\n          z_axis_links: obj.z_axis_links,\r\n          state_lgd_link: obj.state_lgd_link,\r\n          district_lgd_link: obj.district_lgd_link,\r\n          legends: obj.legends,\r\n          legend_colors: obj.legend_colors,\r\n          x_label: obj.x_label,\r\n          rotate_x_label: obj.rotate_x_label,\r\n          y_label_1: obj.y_label_1,\r\n          state_lgd_code: obj.state_lgd_code,\r\n          rotate_y_label_1: obj.rotate_y_label_1,\r\n          y_label_2: obj.y_label_2,\r\n          rotate_y_label_2: obj.rotate_y_label_2,\r\n          level_id: props.level,\r\n          level_ref_id: props.levelRefID?.toString(),\r\n          component_id: obj.id,\r\n          screen_type: screen,\r\n          x_start: obj.x,\r\n          x_end: obj.width,\r\n          y_start: obj.y,\r\n          text: obj.text,\r\n          y_end: obj.height,\r\n        });\r\n      }\r\n      const res = await createLayoutConfig({ screen_type: screen, data });\r\n      if (res.data) {\r\n        setShowPreview(true);\r\n        setAlertMessage(t('data_updated_successfully'));\r\n        data = res.data.map((o, index) => {\r\n          return {\r\n            ...screens[index],\r\n            file: undefined,\r\n            id: o.id,\r\n            table_name: `table_${o.id}`,\r\n            component_slug: o.component_slug,\r\n          };\r\n        });\r\n      }\r\n    } else {\r\n      for (let i = 0; i < screens.length; i++) {\r\n        if (screens.id) {\r\n          continue;\r\n        }\r\n        let obj = screens[i];\r\n        // Check if y_axis_links contains an empty string\r\n        if (obj.y_axis_links && obj.y_axis_links.includes('')) {\r\n          setAlertMessage(t('y_axis_links_contain_empty_value'));\r\n          return;\r\n        }\r\n        if (\r\n          obj.file &&\r\n          !obj.table_description &&\r\n          obj.slug !== 'IMAGE_COMPONENT' &&\r\n          obj.slug !== 'VIDEO_COMPONENT'\r\n        ) {\r\n          setAlertMessage(t('please_enter_table_description'));\r\n          return;\r\n        }\r\n        // if (!obj.heading) {\r\n        //   setAlertMessage(t('please_enter_heading'));\r\n        //   return;\r\n        // }\r\n        if (!obj.file && !obj.table_name) {\r\n          setAlertMessage(t('missing_file'));\r\n          return;\r\n        }\r\n        data.push({\r\n          heading: obj.heading,\r\n          sub_heading: obj.sub_heading,\r\n          source: obj.source,\r\n          note: obj.note,\r\n          custom_css: obj.custom_css\r\n            ? { ...obj.custom_css, crop_type: obj.crop_type }\r\n            : { crop_type: obj.crop_type },\r\n          x_axis_links: obj.x_axis_links,\r\n          y_axis_links: obj.y_axis_links,\r\n          table_name: obj.table_name,\r\n          z_axis_links: obj.z_axis_links,\r\n          state_lgd_link: obj.state_lgd_link,\r\n          district_lgd_link: obj.district_lgd_link,\r\n          legends: obj.legends,\r\n          legend_colors: obj.legend_colors,\r\n          x_label: obj.x_label,\r\n          rotate_x_label: obj.rotate_x_label,\r\n          y_label_1: obj.y_label_1,\r\n          state_lgd_code: obj.state_lgd_code,\r\n          rotate_y_label_1: obj.rotate_y_label_1,\r\n          y_label_2: obj.y_label_2,\r\n          rotate_y_label_2: obj.rotate_y_label_2,\r\n          level_id: props.level,\r\n          level_ref_id: props.levelRefID?.toString(),\r\n          component_id: obj.id,\r\n          screen_type: screen,\r\n          x_start: obj.x,\r\n          x_end: obj.width,\r\n          y_start: obj.y,\r\n          text: obj.text,\r\n          y_end: obj.height,\r\n        });\r\n      }\r\n      const res = await createLayoutConfig({ screen_type: screen, data });\r\n      if (res.data) {\r\n        setAlertMessage('Data saved successfully.');\r\n        data = res.data.map((o, index) => {\r\n          return {\r\n            ...screens[index],\r\n            file: undefined,\r\n            id: o.id,\r\n            table_name: screens[index]?.table_name || `table_${o.id}`,\r\n            component_slug: o.component_slug,\r\n          };\r\n        });\r\n        for (let i = 0; i < res.data?.length; i++) {\r\n          setShowPreview(true);\r\n          if (res.data[i].component_slug === TEXT_COMPONENT) {\r\n            continue;\r\n          }\r\n          if (!screens[i].file) {\r\n            continue;\r\n          }\r\n          if (\r\n            res.data[i].component_slug === IMAGE_COMPONENT ||\r\n            res.data[i].component_slug === VIDEO_COMPONENT\r\n          ) {\r\n            await createTable({\r\n              tableName: `table_${res.data[i].id}`,\r\n              file: screens[i].file,\r\n              selectionType: 'media',\r\n              configID: res.data[i].id,\r\n            });\r\n          } else {\r\n            await createTable({\r\n              tableName: `table_${res.data[i].id}`,\r\n              file: screens[i].file,\r\n              selectionType: 'file',\r\n              configID: res.data[i].id,\r\n              table_description: screens[i].table_description,\r\n            });\r\n          }\r\n        }\r\n        setDisplays({\r\n          ...displays,\r\n          [screen]: data,\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {alertMessage && (\r\n        <Snackbar\r\n          open={true}\r\n          autoHideDuration={6000}\r\n          onClose={handleClose}\r\n          anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n        >\r\n          <Alert onClose={handleClose} severity=\"success\" variant=\"filled\" sx={{ width: '100%' }}>\r\n            {alertMessage}\r\n          </Alert>\r\n        </Snackbar>\r\n      )}\r\n      {screen && step === 'LAYOUT_MANAGER' && (\r\n        <>\r\n          <Grid container spacing={3}>\r\n            <Grid item xs={12}>\r\n              <div\r\n                style={{\r\n                  width: SCREENS.find((o) => o.name === screen)?.WIDTH / DIVISION_MULTIPLE,\r\n                  height: SCREENS.find((o) => o.name === screen)?.HEIGHT / DIVISION_MULTIPLE,\r\n                  backgroundColor: '#edeaea',\r\n                  marginTop: '10px',\r\n                  position: 'relative',\r\n                  display: 'flex',\r\n                  flexWrap: 'wrap',\r\n                  border: '1px dotted black',\r\n                }}\r\n              >\r\n                {Array.from({\r\n                  length:\r\n                    SCREENS.find((o) => o.name === screen)?.VERTICAL_SCREENS *\r\n                    SCREENS.find((o) => o.name === screen)?.HORIZONTAL_SCREENS,\r\n                }).map((_, index) => (\r\n                  <div\r\n                    key={index}\r\n                    style={{\r\n                      width:\r\n                        SCREENS.find((o) => o.name === screen)?.WIDTH /\r\n                        DIVISION_MULTIPLE /\r\n                        SCREENS.find((o) => o.name === screen)?.HORIZONTAL_SCREENS,\r\n                      height:\r\n                        SCREENS.find((o) => o.name === screen)?.HEIGHT /\r\n                        DIVISION_MULTIPLE /\r\n                        SCREENS.find((o) => o.name === screen)?.VERTICAL_SCREENS,\r\n                      border: '1px dotted black',\r\n                      boxSizing: 'border-box',\r\n                    }}\r\n                  ></div>\r\n                ))}\r\n                {displays[screen]\r\n                  ?.filter((o) => !!o.component)\r\n                  ?.map((o, index) => {\r\n                    const display = SCREENS.find((o) => o.name === screen);\r\n                    return (\r\n                      <LayoutComponent\r\n                        {...o}\r\n                        name={o.component}\r\n                        width={o.width / DIVISION_MULTIPLE}\r\n                        height={o.height / DIVISION_MULTIPLE}\r\n                        x={o.x / DIVISION_MULTIPLE || 100 * index}\r\n                        y={o.y / DIVISION_MULTIPLE || 100 * index}\r\n                        index={index}\r\n                        key={index}\r\n                        maxHeight={display.HEIGHT / DIVISION_MULTIPLE}\r\n                        maxWidth={display.WIDTH / DIVISION_MULTIPLE}\r\n                        setSize={(obj) => {\r\n                          let arr = displays[screen];\r\n                          let data = arr[index] || {};\r\n                          data.width = Math.round(obj.width) * DIVISION_MULTIPLE;\r\n                          data.height = Math.round(obj.height) * DIVISION_MULTIPLE;\r\n                          arr[index] = data;\r\n                          setDisplays({\r\n                            ...displays,\r\n                            [screen]: arr,\r\n                          });\r\n                        }}\r\n                        setLayout={(obj) => {\r\n                          let arr = displays[screen];\r\n                          arr[index] = {\r\n                            ...arr[index],\r\n                            x: Math.round(obj.x) * DIVISION_MULTIPLE,\r\n                            y: Math.round(obj.y) * DIVISION_MULTIPLE,\r\n                          };\r\n                          setDisplays({\r\n                            ...displays,\r\n                            [screen]: arr,\r\n                          });\r\n                        }}\r\n                      />\r\n                    );\r\n                  })}\r\n              </div>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid container spacing={3}>\r\n            <Grid item xs={12} justifyContent={'center'}>\r\n              <Typography\r\n                sx={{\r\n                  '@media only screen and (min-width: 3600px)': {\r\n                    fontSize: '4rem',\r\n                  },\r\n                  '@media only screen and (max-width: 3600px)': {\r\n                    fontSize: '1.2rem',\r\n                  },\r\n                  fontWeight: 'bold',\r\n                  whiteSpace: 'nowrap',\r\n                  mt: 5,\r\n                }}\r\n              >\r\n                {t('components')}\r\n              </Typography>\r\n              <div style={{ display: 'flex', flexWrap: 'wrap', alignItems: 'center' }}>\r\n                {displays[screen]?.map((o, index) => {\r\n                  return (\r\n                    <Box sx={{ display: 'flex', alignItems: 'center', m: 2 }} key={index}>\r\n                      <FormControl\r\n                        sx={{\r\n                          '@media only screen and (min-width: 3600px)': {\r\n                            minWidth: '800px',\r\n                          },\r\n                          '@media only screen and (max-width: 3600px)': {\r\n                            minWidth: '200px',\r\n                          },\r\n                        }}\r\n                        key={index}\r\n                      >\r\n                        <Select\r\n                          labelId=\"demo-simple-select-label1\"\r\n                          id=\"demo-simple-select1\"\r\n                          displayEmpty\r\n                          value={o.slug}\r\n                          placeholder={t('select_component')}\r\n                          sx={{\r\n                            display: 'flex',\r\n                            alignItems: 'center',\r\n                            justifyContent: 'center',\r\n                            textAlign: 'center',\r\n                          }}\r\n                          renderValue={(selected) => {\r\n                            if (selected === '') {\r\n                              return <>{t('select_component')}</>;\r\n                            }\r\n                            const name = components.find((o) => o.slug === selected);\r\n                            if (name) {\r\n                              return <>{t(name.name)}</>;\r\n                            }\r\n                          }}\r\n                          onChange={(e) => {\r\n                            if (displays[screen]?.find((o) => o.isUpdated)) {\r\n                              return;\r\n                            }\r\n                            let allDisplayComp = displays[screen]?.filter((o) => !!o.component);\r\n                            const obj = components.find((o) => o.slug === e.target.value);\r\n                            allDisplayComp[index] = {\r\n                              ...obj,\r\n                              component: e.target.value,\r\n                              x: 0,\r\n                              y: 0,\r\n                            };\r\n                            setDisplays({\r\n                              ...displays,\r\n                              [screen]: allDisplayComp,\r\n                            });\r\n                          }}\r\n                        >\r\n                          <MenuItem disabled value=\"\">\r\n                            <em>{t('select_component')}</em>\r\n                          </MenuItem>\r\n                          {components.map((o, index) => {\r\n                            return (\r\n                              <MenuItem key={index} value={o.slug}>\r\n                                {t(o.name)}\r\n                              </MenuItem>\r\n                            );\r\n                          })}\r\n                        </Select>\r\n                      </FormControl>\r\n                      <Button\r\n                        color=\"secondary\"\r\n                        variant=\"contained\"\r\n                        size=\"large\"\r\n                        sx={{\r\n                          '@media only screen and (min-width: 3600px)': {\r\n                            fontSize: '4rem',\r\n                            minWidth: '150px',\r\n                            m: '0 20px',\r\n                          },\r\n                          '@media only screen and (max-width: 3600px)': {\r\n                            minWidth: '40px',\r\n                            m: '0 16px',\r\n                            fontSize: '1.2rem',\r\n                            padding: 0,\r\n                          },\r\n                        }}\r\n                        // disabled={displays[screen].find((o) => o.isUpdated)}\r\n                        onClick={() => {\r\n                          let allDisplayComp = displays[screen]?.filter((o) => !!o.component);\r\n                          allDisplayComp.push({\r\n                            component: '',\r\n                            slug: '',\r\n                          });\r\n                          setDisplays({\r\n                            ...displays,\r\n                            [screen]: allDisplayComp,\r\n                          });\r\n                        }}\r\n                      >\r\n                        +\r\n                      </Button>\r\n                      {displays[screen]?.length !== 1 && (\r\n                        <Button\r\n                          color=\"secondary\"\r\n                          variant=\"contained\"\r\n                          size=\"large\"\r\n                          // disabled={displays[screen].find((o) => o.isUpdated)}\r\n                          sx={{\r\n                            '@media only screen and (min-width: 3600px)': {\r\n                              fontSize: '4rem',\r\n                              minWidth: '150px',\r\n                              m: '0 20px',\r\n                            },\r\n                            '@media only screen and (max-width: 3600px)': {\r\n                              minWidth: '40px',\r\n                              m: '0 2px',\r\n                              fontSize: '1.2rem',\r\n                              padding: 0,\r\n                            },\r\n                          }}\r\n                          onClick={() => {\r\n                            let arr = displays[screen];\r\n                            arr.splice(index, 1);\r\n                            setDisplays({\r\n                              ...displays,\r\n                              [screen]: arr,\r\n                            });\r\n                          }}\r\n                        >\r\n                          -\r\n                        </Button>\r\n                      )}\r\n                    </Box>\r\n                  );\r\n                })}\r\n              </div>\r\n              <Button\r\n                color=\"secondary\"\r\n                variant=\"contained\"\r\n                size=\"large\"\r\n                sx={{\r\n                  '@media only screen and (min-width: 3600px)': {\r\n                    fontSize: '4rem',\r\n                    minWidth: '150px',\r\n                  },\r\n                  '@media only screen and (max-width: 3600px)': {\r\n                    minWidth: '40px',\r\n                  },\r\n                }}\r\n                disabled={displays[screen]\r\n                  ?.map((o) => o.component)\r\n                  .some((element) => element === '' || element === undefined)}\r\n                onClick={() => {\r\n                  if (displays[screen]?.find((o) => o.isUpdated)) {\r\n                    setEdit(true);\r\n                    setShowPreview(true);\r\n                    setStep('LAYOUT_DETAILS');\r\n                  } else {\r\n                    setEdit(false);\r\n                    setStep('LAYOUT_DETAILS');\r\n                  }\r\n                }}\r\n              >\r\n                {displays[screen]?.find((o) => o.isUpdated) ? t('edit') : t('next')}\r\n              </Button>\r\n            </Grid>\r\n          </Grid>\r\n        </>\r\n      )}\r\n      {screen && step === 'LAYOUT_DETAILS' && (\r\n        <>\r\n          <div style={{ width: '100%' }}>\r\n            {displays[screen]?.length > 0 &&\r\n              displays[screen]?.map((o, index) => {\r\n                return (\r\n                  <Grid\r\n                    container\r\n                    spacing={3}\r\n                    mt={4}\r\n                    key={index}\r\n                    justifyContent={'center'}\r\n                    alignItems={'center'}\r\n                  >\r\n                    <Grid item xs={2}>\r\n                      <Typography\r\n                        sx={{\r\n                          '@media only screen and (min-width: 3600px)': {\r\n                            fontSize: '2.8rem',\r\n                          },\r\n                          '@media only screen and (max-width: 3600px)': {\r\n                            fontSize: '1.2rem',\r\n                          },\r\n                          whiteSpace: 'break-spaces',\r\n                        }}\r\n                      >\r\n                        {index + 1}- {t(o.name) || t(o.component)}\r\n                      </Typography>\r\n                    </Grid>\r\n                    <Grid item xs={10}>\r\n                      <ComponentDetails\r\n                        {...o}\r\n                        type={o.slug}\r\n                        edit={edit}\r\n                        onTextChange={(val, type) => {\r\n                          if (type === 'text' && val?.length > 500) {\r\n                            return setAlertMessage(\r\n                              `${t('text_message_should_not_be_more_than_500')}`,\r\n                            );\r\n                          }\r\n                          let allDisplayComp = displays[screen];\r\n                          let data = allDisplayComp[index];\r\n                          data = {\r\n                            ...data,\r\n                            [type]: val,\r\n                          };\r\n                          allDisplayComp[index] = data;\r\n                          setDisplays({\r\n                            ...displays,\r\n                            [screen]: allDisplayComp,\r\n                          });\r\n                        }}\r\n                        crop_type={o.custom_css?.crop_type}\r\n                      />\r\n                    </Grid>\r\n                  </Grid>\r\n                );\r\n              })}\r\n          </div>\r\n          <Box\r\n            sx={{\r\n              display: 'flex',\r\n              alignItems: 'center',\r\n              flexDirection: 'row',\r\n              justifyContent: 'center',\r\n              width: '100%',\r\n            }}\r\n          >\r\n            {edit ? (\r\n              <>\r\n                <Button\r\n                  color=\"secondary\"\r\n                  variant=\"contained\"\r\n                  size=\"large\"\r\n                  sx={{\r\n                    '@media only screen and (min-width: 3600px)': {\r\n                      fontSize: '4rem',\r\n                      minWidth: '150px',\r\n                    },\r\n                    '@media only screen and (max-width: 3600px)': {\r\n                      minWidth: '40px',\r\n                    },\r\n                    mt: '60px',\r\n                    ml: '60px',\r\n                  }}\r\n                  onClick={() => {\r\n                    let newScreen = 'DISPLAY_3';\r\n                    if (screen === 'DISPLAY_1') {\r\n                      newScreen = 'DISPLAY_1';\r\n                    }\r\n                    if (screen === 'DISPLAY_3' || screen === 'DISPLAY_2') {\r\n                      newScreen = 'DISPLAY_2';\r\n                    }\r\n\r\n                    for (let i = 0; i < displays[screen]?.length; i++) {\r\n                      let newX = displays[screen][i].x;\r\n                      let name = `ADMIN_COMPONENT_${i + 1}`;\r\n                      if (screen === 'DISPLAY_5') {\r\n                        let width = SCREENS.find((o) => o.name === 'DISPLAY_4')?.WIDTH;\r\n                        newX += width;\r\n                      }\r\n                      if (screen !== 'DISPLAY_3') {\r\n                        props.count.current = props.count.current + 1;\r\n                        name = `ADMIN_COMPONENT_${props.count.current}`;\r\n                      }\r\n                      if (screen === 'DISPLAY_2') {\r\n                        newX = 0;\r\n                      }\r\n                      if (screen === 'DISPLAY_3') {\r\n                        let width = SCREENS.find((o) => o.name === 'DISPLAY_2')?.WIDTH;\r\n                        newX += width;\r\n                      }\r\n                      if (\r\n                        screen === 'CONNECTING_SCREEN_1' ||\r\n                        screen === 'CONNECTING_SCREEN_2' ||\r\n                        screen === 'CONNECTING_SCREEN_3'\r\n                      ) {\r\n                        newScreen = 'WIDGET_BAR';\r\n                      }\r\n                      if (screen === 'CONNECTING_SCREEN_2') {\r\n                        let width = SCREENS.find((o) => o.name === 'CONNECTING_SCREEN_1')?.WIDTH;\r\n                        newX += width;\r\n                      }\r\n                      if (screen === 'CONNECTING_SCREEN_3') {\r\n                        let width = SCREENS.find((o) => o.name === 'CONNECTING_SCREEN_2')?.WIDTH;\r\n                        newX += width;\r\n                        let width1 = SCREENS.find((o) => o.name === 'CONNECTING_SCREEN_1')?.WIDTH;\r\n                        newX += width1;\r\n                      }\r\n                      props.socket.emit('move', {\r\n                        ...displays[screen][i],\r\n                        destination: newScreen,\r\n                        x: newX,\r\n                        theme: 'default',\r\n                        config_id: displays[screen][i].config_id,\r\n                        selectedLanguage: 'en',\r\n                        component: [name],\r\n                        componentType: [displays[screen][i].component_slug],\r\n                      });\r\n                    }\r\n                  }}\r\n                >\r\n                  {t('preview')}\r\n                </Button>\r\n                <Button\r\n                  color=\"secondary\"\r\n                  variant=\"contained\"\r\n                  size=\"large\"\r\n                  onClick={handleSubmit}\r\n                  sx={{\r\n                    '@media only screen and (min-width: 3600px)': {\r\n                      fontSize: '4rem',\r\n                      minWidth: '150px',\r\n                    },\r\n                    '@media only screen and (max-width: 3600px)': {\r\n                      minWidth: '40px',\r\n                    },\r\n                    mt: '60px',\r\n                    ml: '60px',\r\n                  }}\r\n                >\r\n                  {t('save')}\r\n                </Button>\r\n              </>\r\n            ) : showPreview ? (\r\n              <Button\r\n                color=\"secondary\"\r\n                variant=\"contained\"\r\n                size=\"large\"\r\n                sx={{\r\n                  '@media only screen and (min-width: 3600px)': {\r\n                    fontSize: '4rem',\r\n                    minWidth: '150px',\r\n                  },\r\n                  '@media only screen and (max-width: 3600px)': {\r\n                    minWidth: '40px',\r\n                  },\r\n                  mt: '60px',\r\n                  ml: '60px',\r\n                }}\r\n                onClick={() => {\r\n                  let newScreen = 'DISPLAY_3';\r\n                  if (screen === 'DISPLAY_1') {\r\n                    newScreen = 'DISPLAY_1';\r\n                  }\r\n                  if (screen === 'DISPLAY_3' || screen === 'DISPLAY_2') {\r\n                    newScreen = 'DISPLAY_2';\r\n                  }\r\n                  for (let i = 0; i < displays[screen]?.length; i++) {\r\n                    let newX = displays[screen][i].x;\r\n                    let name = `ADMIN_COMPONENT_${i + 1}`;\r\n                    if (screen === 'DISPLAY_5') {\r\n                      let width = SCREENS.find((o) => o.name === 'DISPLAY_4')?.WIDTH;\r\n                      newX += width;\r\n                    }\r\n                    if (screen !== 'DISPLAY_3') {\r\n                      props.count.current = props.count.current + 1;\r\n                      name = `ADMIN_COMPONENT_${props.count.current}`;\r\n                    }\r\n                    if (screen === 'DISPLAY_2') {\r\n                      newX = 0;\r\n                    }\r\n                    if (screen === 'DISPLAY_3') {\r\n                      let width = SCREENS.find((o) => o.name === 'DISPLAY_2')?.WIDTH;\r\n                      newX += width;\r\n                    }\r\n                    if (\r\n                      screen === 'CONNECTING_SCREEN_1' ||\r\n                      screen === 'CONNECTING_SCREEN_2' ||\r\n                      screen === 'CONNECTING_SCREEN_3'\r\n                    ) {\r\n                      newScreen = 'WIDGET_BAR';\r\n                    }\r\n                    if (screen === 'CONNECTING_SCREEN_2') {\r\n                      let width = SCREENS.find((o) => o.name === 'CONNECTING_SCREEN_1')?.WIDTH;\r\n                      newX += width;\r\n                    }\r\n                    if (screen === 'CONNECTING_SCREEN_3') {\r\n                      let width = SCREENS.find((o) => o.name === 'CONNECTING_SCREEN_2')?.WIDTH;\r\n                      newX += width;\r\n                      let width1 = SCREENS.find((o) => o.name === 'CONNECTING_SCREEN_1')?.WIDTH;\r\n                      newX += width1;\r\n                    }\r\n                    props.socket.emit('move', {\r\n                      ...displays[screen][i],\r\n                      destination: newScreen,\r\n                      x: newX,\r\n                      theme: 'default',\r\n                      config_id: displays[screen][i].config_id || displays[screen][i].id,\r\n                      selectedLanguage: 'en',\r\n                      component: [name],\r\n                      componentType: [displays[screen][i].component_slug],\r\n                    });\r\n                  }\r\n                }}\r\n              >\r\n                {t('preview')}\r\n              </Button>\r\n            ) : (\r\n              <Button\r\n                color=\"secondary\"\r\n                variant=\"contained\"\r\n                size=\"large\"\r\n                onClick={handleSubmit}\r\n                sx={{\r\n                  '@media only screen and (min-width: 3600px)': {\r\n                    fontSize: '4rem',\r\n                    minWidth: '150px',\r\n                  },\r\n                  '@media only screen and (max-width: 3600px)': {\r\n                    minWidth: '40px',\r\n                  },\r\n                  mt: '60px',\r\n                  ml: '60px',\r\n                }}\r\n              >\r\n                {t('save')}\r\n              </Button>\r\n            )}\r\n          </Box>\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Layout;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport PageContainer from '../../../components/container/PageContainer';\r\nimport { Typography, FormControl, Select, MenuItem, Button } from '@mui/material';\r\nimport { SCREENS } from '../../../constants';\r\nimport Input from '../../../components/forms/input';\r\nimport Layout from '../layout';\r\nimport { getLevelsRefData, getLayoutConfig, addDataToTable } from '../../../api';\r\nimport CustomFormLabel from '../../../components/forms/custom-elements/CustomFormLabel';\r\n\r\nconst SectorsLayoutManager = (props) => {\r\n  const { t } = useTranslation();\r\n  const { step, setStep } = props;\r\n  const [screen, setScreen] = useState('');\r\n  const [displays, setDisplays] = useState({});\r\n  const [name, setName] = useState(undefined);\r\n  const [sector, setSector] = useState('');\r\n  const [allSectors, setAllSectors] = useState([]);\r\n  const [isNewSector, setIsNewSector] = useState(false);\r\n  const [layoutsAdded, setLayoutsAdded] = useState(false);\r\n  const [sectorName, setSectorName] = useState('');\r\n\r\n  useEffect(() => {\r\n    const getSectors = async () => {\r\n      const res = await getLevelsRefData({\r\n        level_id: 1,\r\n        filters: [\r\n          {\r\n            column_name: 'created_from',\r\n            column_value: 'admin_panel',\r\n          },\r\n        ],\r\n      });\r\n      if (res.data) {\r\n        setAllSectors(res.data);\r\n      }\r\n    };\r\n    getSectors();\r\n  }, []);\r\n\r\n  const getLayoutDetails = async (id) => {\r\n    const res = await getLayoutConfig({\r\n      level_id: 1,\r\n      level_ref_id: sector?.toString(),\r\n      screen_type: id,\r\n    });\r\n    if (res.data) {\r\n      if (res.data.length > 0) {\r\n        setLayoutsAdded(true);\r\n        let finalData = [];\r\n        res.data.forEach((o) => {\r\n          finalData.push({\r\n            ...o,\r\n            config_id: o.id,\r\n            id: o.component_id,\r\n            component: o.component_name,\r\n            slug: o.component_slug,\r\n            x: o.x_start,\r\n            width: o.x_end,\r\n            y: o.y_start,\r\n            height: o.y_end,\r\n            isUpdated: true,\r\n          });\r\n        });\r\n        setDisplays({ ...displays, [id]: finalData });\r\n      } else {\r\n        setLayoutsAdded(false);\r\n        if (step === 'LAYOUT_MANAGER') {\r\n          setDisplays({\r\n            ...displays,\r\n            [id]:\r\n              displays[id]?.length > 0\r\n                ? displays[id]\r\n                : [\r\n                    {\r\n                      component: '',\r\n                      slug: '',\r\n                    },\r\n                  ],\r\n          });\r\n        }\r\n      }\r\n      setScreen(id);\r\n    }\r\n  };\r\n\r\n  const addNewSector = async () => {\r\n    const res = await addDataToTable({\r\n      tableData: [\r\n        {\r\n          sector_name: name,\r\n          sector_image_url: 'IMAGE_URL',\r\n          is_available: 1,\r\n        },\r\n      ],\r\n      tableName: 'sectors',\r\n    });\r\n    if (res.data) {\r\n      setSector(res.data.data[0]);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <PageContainer title=\"Layout Manager\" description=\"Layout Manager\">\r\n      <div\r\n        style={{\r\n          width: '100%',\r\n          display: 'flex',\r\n          alignItems: 'flex-start',\r\n          flexDirection: 'column',\r\n          marginLeft: '100px',\r\n        }}\r\n      >\r\n        <div\r\n          style={{\r\n            width: '100%',\r\n            display: 'flex',\r\n            alignItems: 'flex-start',\r\n          }}\r\n        >\r\n          <Typography\r\n            sx={{\r\n              '@media only screen and (min-width: 3600px)': {\r\n                fontSize: '4rem',\r\n              },\r\n              '@media only screen and (max-width: 3600px)': {\r\n                fontSize: '1.6rem',\r\n              },\r\n              fontWeight: 'bold',\r\n              whiteSpace: 'nowrap',\r\n              mr: 10,\r\n            }}\r\n          >\r\n            {sectorName ? `${t(props.title) + ' ' + t('of') + ' ' + sectorName}` : t(props.title)}\r\n          </Typography>\r\n\r\n          {sector ? (\r\n            <FormControl\r\n              sx={{\r\n                '@media only screen and (min-width: 3600px)': {\r\n                  minWidth: '1200px',\r\n                },\r\n                '@media only screen and (max-width: 3600px)': {\r\n                  minWidth: '200px',\r\n                },\r\n                ml: '100px',\r\n                mr: '100px',\r\n              }}\r\n            >\r\n              <Select\r\n                labelId=\"demo-simple-select-label\"\r\n                id=\"demo-simple-select\"\r\n                displayEmpty\r\n                value={screen}\r\n                placeholder={t('select_display_screen')}\r\n                sx={{\r\n                  display: 'flex',\r\n                  alignItems: 'center',\r\n                  justifyContent: 'center',\r\n                  textAlign: 'center',\r\n                }}\r\n                renderValue={(selected) => {\r\n                  if (selected === '') {\r\n                    return <>{t('select_display_screen')}</>;\r\n                  }\r\n                  const name = SCREENS.find((o) => o.name === selected);\r\n                  if (name) {\r\n                    return <>{t(name.name)}</>;\r\n                  }\r\n                }}\r\n                onChange={(e) => {\r\n                  getLayoutDetails(e.target.value);\r\n                }}\r\n              >\r\n                <MenuItem disabled value=\"\">\r\n                  <em>{t('select_display_screen')}</em>\r\n                </MenuItem>\r\n                {SCREENS.map((o, index) => {\r\n                  return (\r\n                    <MenuItem key={index} value={o.name}>\r\n                      {t(o.name)}\r\n                    </MenuItem>\r\n                  );\r\n                })}\r\n              </Select>\r\n            </FormControl>\r\n          ) : (\r\n            <>\r\n              {isNewSector ? (\r\n                <Input\r\n                  id={'name'}\r\n                  value={name}\r\n                  placeholder={'enter_sector_name'}\r\n                  onChange={(val) => {\r\n                    setName(val);\r\n                    setSectorName(val);\r\n                  }}\r\n                  customheight={'6px'}\r\n                />\r\n              ) : (\r\n                <FormControl\r\n                  sx={{\r\n                    '@media only screen and (min-width: 3600px)': {\r\n                      minWidth: '1200px',\r\n                    },\r\n                    '@media only screen and (max-width: 3600px)': {\r\n                      minWidth: '200px',\r\n                    },\r\n                    ml: '20px',\r\n                    mr: '20px',\r\n                  }}\r\n                >\r\n                  <Select\r\n                    labelId=\"demo-simple-select-label\"\r\n                    id=\"demo-simple-select\"\r\n                    displayEmpty\r\n                    value={sector}\r\n                    placeholder={t('select_existing_sector')}\r\n                    sx={{\r\n                      display: 'flex',\r\n                      alignItems: 'center',\r\n                      justifyContent: 'center',\r\n                      textAlign: 'center',\r\n                    }}\r\n                    renderValue={(selected) => {\r\n                      if (selected === '') {\r\n                        return <>{t('select_existing_sector')}</>;\r\n                      }\r\n                      const name = allSectors.find((o) => o.id === selected);\r\n                      if (name) {\r\n                        return <>{t(name.sector_name)}</>;\r\n                      }\r\n                    }}\r\n                    onChange={(e) => {\r\n                      setSector(e.target.value);\r\n                      const name = allSectors.find((o) => o.id === e.target.value);\r\n                      if (name) {\r\n                        setSectorName(name.sector_name);\r\n                      }\r\n                    }}\r\n                  >\r\n                    <MenuItem disabled value=\"\">\r\n                      <em>{t('select_existing_sector')}</em>\r\n                    </MenuItem>\r\n                    {allSectors.map((o, index) => {\r\n                      return (\r\n                        <MenuItem key={index} value={o.id}>\r\n                          {t(o.sector_name)}\r\n                        </MenuItem>\r\n                      );\r\n                    })}\r\n                  </Select>\r\n                </FormControl>\r\n              )}\r\n              {!isNewSector && <CustomFormLabel>OR</CustomFormLabel>}\r\n              <Button\r\n                color=\"secondary\"\r\n                variant=\"contained\"\r\n                size=\"large\"\r\n                sx={{\r\n                  '@media only screen and (min-width: 3600px)': {\r\n                    fontSize: '4rem',\r\n                    minWidth: '150px',\r\n                    maxHeight: '100px',\r\n                  },\r\n                  '@media only screen and (max-width: 3600px)': {\r\n                    minWidth: '40px',\r\n                  },\r\n                  ml: '20px',\r\n                }}\r\n                onClick={() => {\r\n                  if (!isNewSector) {\r\n                    setIsNewSector(true);\r\n                  } else {\r\n                    addNewSector();\r\n                  }\r\n                }}\r\n              >\r\n                {isNewSector ? t('add') : t('add_new_sector')}\r\n              </Button>\r\n            </>\r\n          )}\r\n        </div>\r\n        <Layout\r\n          screen={screen}\r\n          step={step}\r\n          setStep={setStep}\r\n          level={1}\r\n          levelRefID={sector}\r\n          displays={displays}\r\n          setDisplays={setDisplays}\r\n          layoutsAdded={layoutsAdded}\r\n          socket={props.socket}\r\n          count={props.count}\r\n        />\r\n      </div>\r\n    </PageContainer>\r\n  );\r\n};\r\n\r\nexport default SectorsLayoutManager;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport PageContainer from '../../../components/container/PageContainer';\r\nimport { Typography, FormControl, Select, MenuItem, Button } from '@mui/material';\r\nimport { SCREENS } from '../../../constants';\r\nimport { getLevelsRefData, getLayoutConfig, addDataToTable } from '../../../api';\r\nimport Input from '../../../components/forms/input';\r\nimport Layout from '../layout';\r\nimport CustomFormLabel from '../../../components/forms/custom-elements/CustomFormLabel';\r\n\r\nconst FocusAreaLayoutManager = (props) => {\r\n  const { t } = useTranslation();\r\n  const [screen, setScreen] = useState('');\r\n  const [name, setName] = useState(undefined);\r\n  const [sector, setSector] = useState('');\r\n  const [focusArea, setFocusArea] = useState('');\r\n  const [allFocusAreas, setAllFocusAreas] = useState([]);\r\n  const [allSectors, setAllSectors] = useState([]);\r\n  const [displays, setDisplays] = useState({});\r\n  const { step, setStep } = props;\r\n  const [isNewFocusArea, setIsNewFocusArea] = useState(false);\r\n  const [layoutsAdded, setLayoutsAdded] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const getSectors = async () => {\r\n      const res = await getLevelsRefData({\r\n        level_id: 1,\r\n        filters: [\r\n          {\r\n            column_name: 'created_from',\r\n            column_value: 'admin_panel',\r\n          },\r\n        ],\r\n      });\r\n      if (res.data) {\r\n        setAllSectors(res.data);\r\n      }\r\n    };\r\n    getSectors();\r\n  }, []);\r\n\r\n  const getFocusAreas = async (id) => {\r\n    const res = await getLevelsRefData({\r\n      level_id: 2,\r\n      filters: [\r\n        {\r\n          column_name: 'sector_id',\r\n          column_value: id?.toString(),\r\n        },\r\n        {\r\n          column_name: 'created_from',\r\n          column_value: 'admin_panel',\r\n        },\r\n      ],\r\n    });\r\n    if (res.data) {\r\n      setAllFocusAreas(res.data);\r\n    }\r\n  };\r\n\r\n  const getLayoutDetails = async (id) => {\r\n    const res = await getLayoutConfig({\r\n      level_id: 2,\r\n      level_ref_id: focusArea?.toString(),\r\n      screen_type: id,\r\n    });\r\n    if (res.data) {\r\n      if (res.data.length > 0) {\r\n        setLayoutsAdded(true);\r\n        let finalData = [];\r\n        res.data.forEach((o) => {\r\n          finalData.push({\r\n            ...o,\r\n            config_id: o.id,\r\n            id: o.component_id,\r\n            component: o.component_name,\r\n            slug: o.component_slug,\r\n            x: o.x_start,\r\n            width: o.x_end,\r\n            y: o.y_start,\r\n            height: o.y_end,\r\n            isUpdated: true,\r\n          });\r\n        });\r\n        setDisplays({ ...displays, [id]: finalData });\r\n      } else {\r\n        setLayoutsAdded(false);\r\n        if (step === 'LAYOUT_MANAGER') {\r\n          setDisplays({\r\n            ...displays,\r\n            [id]:\r\n              displays[id]?.length > 0\r\n                ? displays[id]\r\n                : [\r\n                    {\r\n                      component: '',\r\n                      slug: '',\r\n                    },\r\n                  ],\r\n          });\r\n        }\r\n      }\r\n      setScreen(id);\r\n    }\r\n  };\r\n\r\n  const addNewFocusArea = async () => {\r\n    const sectorName = allSectors.find((o) => o.id === sector)?.sector_name;\r\n    const res = await addDataToTable({\r\n      tableData: [\r\n        {\r\n          title: name,\r\n          sector_id: sector,\r\n          sector_name: sectorName,\r\n        },\r\n      ],\r\n      tableName: 'sector_focus_areas',\r\n    });\r\n    if (res.data) {\r\n      setFocusArea(res.data.data[0]);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <PageContainer title=\"Layout Manager\" description=\"Layout Manager\">\r\n      <div\r\n        style={{\r\n          width: '100%',\r\n          display: 'flex',\r\n          alignItems: 'flex-start',\r\n          flexDirection: 'column',\r\n          marginLeft: '100px',\r\n        }}\r\n      >\r\n        <div\r\n          style={{\r\n            width: '100%',\r\n            display: 'flex',\r\n            alignItems: 'flex-start',\r\n            gap: '20px',\r\n            flexWrap: 'wrap',\r\n          }}\r\n        >\r\n          <Typography\r\n            sx={{\r\n              '@media only screen and (min-width: 3600px)': {\r\n                fontSize: '4rem',\r\n              },\r\n              '@media only screen and (max-width: 3600px)': {\r\n                fontSize: '1.6rem',\r\n              },\r\n              fontWeight: 'bold',\r\n              whiteSpace: 'nowrap',\r\n            }}\r\n          >\r\n            {t(props.title)}\r\n          </Typography>\r\n\r\n          {focusArea || focusArea === 0 ? (\r\n            <FormControl\r\n              sx={{\r\n                '@media only screen and (min-width: 3600px)': {\r\n                  minWidth: '1200px',\r\n                },\r\n                '@media only screen and (max-width: 3600px)': {\r\n                  minWidth: '200px',\r\n                },\r\n                ml: '20px',\r\n                mr: '20px',\r\n              }}\r\n            >\r\n              <Select\r\n                labelId=\"demo-simple-select-label\"\r\n                id=\"demo-simple-select\"\r\n                displayEmpty\r\n                value={screen}\r\n                placeholder={t('select_display_screen')}\r\n                sx={{\r\n                  display: 'flex',\r\n                  alignItems: 'center',\r\n                  justifyContent: 'center',\r\n                  textAlign: 'center',\r\n                }}\r\n                renderValue={(selected) => {\r\n                  if (selected === '') {\r\n                    return <>{t('select_display_screen')}</>;\r\n                  }\r\n                  const name = SCREENS.find((o) => o.name === selected);\r\n                  if (name) {\r\n                    return <>{t(name.name)}</>;\r\n                  }\r\n                }}\r\n                onChange={(e) => {\r\n                  getLayoutDetails(e.target.value);\r\n                }}\r\n              >\r\n                <MenuItem disabled value=\"\">\r\n                  <em>{t('select_display_screen')}</em>\r\n                </MenuItem>\r\n                {SCREENS.map((o, index) => {\r\n                  return (\r\n                    <MenuItem key={index} value={o.name}>\r\n                      {t(o.name)}\r\n                    </MenuItem>\r\n                  );\r\n                })}\r\n              </Select>\r\n            </FormControl>\r\n          ) : (\r\n            <>\r\n              {allSectors && allSectors?.length > 0 && (\r\n                <FormControl\r\n                  sx={{\r\n                    '@media only screen and (min-width: 3600px)': {\r\n                      minWidth: '1200px',\r\n                    },\r\n                    '@media only screen and (max-width: 3600px)': {\r\n                      minWidth: '200px',\r\n                    },\r\n                    ml: '20px',\r\n                    mr: '20px',\r\n                  }}\r\n                >\r\n                  <Select\r\n                    labelId=\"demo-simple-select-label\"\r\n                    id=\"demo-simple-select\"\r\n                    displayEmpty\r\n                    value={sector}\r\n                    placeholder={t('select_sector')}\r\n                    sx={{\r\n                      display: 'flex',\r\n                      alignItems: 'center',\r\n                      justifyContent: 'center',\r\n                      textAlign: 'center',\r\n                    }}\r\n                    renderValue={(selected) => {\r\n                      if (selected === '') {\r\n                        return <>{t('select_sector')}</>;\r\n                      }\r\n                      const name = allSectors.find((o) => o.id === selected);\r\n                      if (name) {\r\n                        return <>{t(name.sector_name)}</>;\r\n                      }\r\n                    }}\r\n                    onChange={(e) => {\r\n                      setSector(e.target.value);\r\n                      getFocusAreas(e.target.value);\r\n                    }}\r\n                  >\r\n                    <MenuItem disabled value=\"\">\r\n                      <em>{t('select_sector')}</em>\r\n                    </MenuItem>\r\n                    {allSectors.map((o, index) => {\r\n                      return (\r\n                        <MenuItem key={index} value={o.id}>\r\n                          {t(o.sector_name)}\r\n                        </MenuItem>\r\n                      );\r\n                    })}\r\n                  </Select>\r\n                </FormControl>\r\n              )}\r\n              {sector && (\r\n                <>\r\n                  {isNewFocusArea ? (\r\n                    <Input\r\n                      id={'name'}\r\n                      value={name}\r\n                      placeholder={'enter_focus_area_name'}\r\n                      onChange={setName}\r\n                      customheight={'6px'}\r\n                    />\r\n                  ) : (\r\n                    <FormControl\r\n                      sx={{\r\n                        '@media only screen and (min-width: 3600px)': {\r\n                          minWidth: '1200px',\r\n                        },\r\n                        '@media only screen and (max-width: 3600px)': {\r\n                          minWidth: '200px',\r\n                        },\r\n                        ml: '20px',\r\n                        mr: '20px',\r\n                      }}\r\n                    >\r\n                      <Select\r\n                        labelId=\"demo-simple-select-label\"\r\n                        id=\"demo-simple-select\"\r\n                        displayEmpty\r\n                        value={focusArea}\r\n                        placeholder={t('select_existing_focus_area')}\r\n                        sx={{\r\n                          display: 'flex',\r\n                          alignItems: 'center',\r\n                          justifyContent: 'center',\r\n                          textAlign: 'center',\r\n                        }}\r\n                        renderValue={(selected) => {\r\n                          if (selected === '') {\r\n                            return <>{t('select_existing_focus_area')}</>;\r\n                          }\r\n                          const name = allFocusAreas.find((o) => o.id === selected);\r\n                          if (name) {\r\n                            return <>{t(name.title)}</>;\r\n                          }\r\n                        }}\r\n                        onChange={(e) => {\r\n                          setFocusArea(e.target.value);\r\n                        }}\r\n                      >\r\n                        <MenuItem disabled value=\"\">\r\n                          <em>{t('select_existing_focus_area')}</em>\r\n                        </MenuItem>\r\n                        {allFocusAreas.map((o, index) => {\r\n                          return (\r\n                            <MenuItem key={index} value={o.id}>\r\n                              {t(o.title)}\r\n                            </MenuItem>\r\n                          );\r\n                        })}\r\n                      </Select>\r\n                    </FormControl>\r\n                  )}\r\n                  {!isNewFocusArea && <CustomFormLabel>OR</CustomFormLabel>}\r\n                  <Button\r\n                    color=\"secondary\"\r\n                    variant=\"contained\"\r\n                    size=\"large\"\r\n                    sx={{\r\n                      '@media only screen and (min-width: 3600px)': {\r\n                        fontSize: '4rem',\r\n                        minWidth: '150px',\r\n                        maxHeight: '100px',\r\n                      },\r\n                      '@media only screen and (max-width: 3600px)': {\r\n                        minWidth: '40px',\r\n                      },\r\n                      ml: '20px',\r\n                    }}\r\n                    onClick={() => {\r\n                      if (!isNewFocusArea) {\r\n                        setIsNewFocusArea(true);\r\n                      } else {\r\n                        addNewFocusArea();\r\n                      }\r\n                    }}\r\n                  >\r\n                    {isNewFocusArea ? t('add') : t('add_new_focus_area')}\r\n                  </Button>\r\n                </>\r\n              )}\r\n            </>\r\n          )}\r\n        </div>\r\n        <Layout\r\n          screen={screen}\r\n          step={step}\r\n          setStep={setStep}\r\n          displays={displays}\r\n          setDisplays={setDisplays}\r\n          layoutsAdded={layoutsAdded}\r\n          level={2}\r\n          levelRefID={focusArea}\r\n          socket={props.socket}\r\n          count={props.count}\r\n        />\r\n      </div>\r\n    </PageContainer>\r\n  );\r\n};\r\n\r\nexport default FocusAreaLayoutManager;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport PageContainer from '../../../components/container/PageContainer';\r\nimport { Typography, FormControl, Select, MenuItem, Button } from '@mui/material';\r\nimport { SCREENS } from '../../../constants';\r\nimport { getLevelsRefData, getLayoutConfig, addDataToTable } from '../../../api';\r\nimport Input from '../../../components/forms/input';\r\nimport Layout from '../layout';\r\nimport CustomFormLabel from '../../../components/forms/custom-elements/CustomFormLabel';\r\n\r\nconst IndicatorLayoutManager = (props) => {\r\n  const { t } = useTranslation();\r\n  const [screen, setScreen] = useState('');\r\n  const [name, setName] = useState(undefined);\r\n  const [sector, setSector] = useState('');\r\n  const [focusArea, setFocusArea] = useState('');\r\n  const [allSectors, setAllSectors] = useState([]);\r\n  const [allFocusAreas, setAllFocusAreas] = useState([]);\r\n  const [stateDormant, setStateDormant] = useState('');\r\n  const [indicatorDormant, setIndicatorDormant] = useState('');\r\n  const [indicatorType, setIndicatorType] = useState('');\r\n  const [displays, setDisplays] = useState({});\r\n  const [allIndicators, setAllIndicators] = useState([]);\r\n  const [isNewIndicator, setIsNewIndicator] = useState(false);\r\n  const [layoutsAdded, setLayoutsAdded] = useState(false);\r\n  const [indicator, setIndicator] = useState('');\r\n  const { step, setStep } = props;\r\n\r\n  const indicatorTypes = [\r\n    { id: 'Positive', name: 'postive' },\r\n    { id: 'Negative', name: 'negative' },\r\n  ];\r\n\r\n  const stateDormants = [\r\n    { id: 1, name: 'true' },\r\n    { id: 0, name: 'false' },\r\n  ];\r\n\r\n  const indicatorDormants = [\r\n    { id: 1, name: 'true' },\r\n    { id: 0, name: 'false' },\r\n  ];\r\n\r\n  useEffect(() => {\r\n    const getSectors = async () => {\r\n      const res = await getLevelsRefData({\r\n        level_id: 1,\r\n        filters: [\r\n          {\r\n            column_name: 'created_from',\r\n            column_value: 'admin_panel',\r\n          },\r\n        ],\r\n      });\r\n      if (res.data) {\r\n        setAllSectors(res.data);\r\n      }\r\n    };\r\n    getSectors();\r\n  }, []);\r\n\r\n  const getFocusAreas = async (id) => {\r\n    const res = await getLevelsRefData({\r\n      level_id: 2,\r\n      filters: [\r\n        {\r\n          column_name: 'sector_id',\r\n          column_value: id?.toString(),\r\n        },\r\n        {\r\n          column_name: 'created_from',\r\n          column_value: 'admin_panel',\r\n        },\r\n      ],\r\n    });\r\n    if (res.data) {\r\n      setAllFocusAreas(res.data);\r\n    }\r\n  };\r\n\r\n  const getIndicators = async (id) => {\r\n    let focusArea = allFocusAreas.find((o) => o.id === id);\r\n    const res = await getLevelsRefData({\r\n      level_id: 3,\r\n      filters: [\r\n        {\r\n          column_name: 'sector_id',\r\n          column_value: sector?.toString(),\r\n        },\r\n        {\r\n          column_name: 'focus_area',\r\n          column_value: focusArea.title,\r\n        },\r\n        {\r\n          column_name: 'state_dormant',\r\n          column_value: '0',\r\n        },\r\n        {\r\n          column_name: 'created_from',\r\n          column_value: 'admin_panel',\r\n        },\r\n      ],\r\n    });\r\n    if (res.data) {\r\n      setAllIndicators(res.data);\r\n    }\r\n  };\r\n\r\n  const getLayoutDetails = async (id) => {\r\n    const res = await getLayoutConfig({\r\n      level_id: 3,\r\n      level_ref_id: indicator?.toString(),\r\n      screen_type: id,\r\n    });\r\n    if (res.data) {\r\n      if (res.data.length > 0) {\r\n        setLayoutsAdded(true);\r\n        let finalData = [];\r\n        res.data.forEach((o) => {\r\n          finalData.push({\r\n            ...o,\r\n            config_id: o.id,\r\n            id: o.component_id,\r\n            component: o.component_name,\r\n            slug: o.component_slug,\r\n            x: o.x_start,\r\n            width: o.x_end,\r\n            y: o.y_start,\r\n            height: o.y_end,\r\n            isUpdated: true,\r\n          });\r\n        });\r\n        setDisplays({ ...displays, [id]: finalData });\r\n      } else {\r\n        setLayoutsAdded(false);\r\n        if (step === 'LAYOUT_MANAGER') {\r\n          setDisplays({\r\n            ...displays,\r\n            [id]:\r\n              displays[id]?.length > 0\r\n                ? displays[id]\r\n                : [\r\n                    {\r\n                      component: '',\r\n                      slug: '',\r\n                    },\r\n                  ],\r\n          });\r\n        }\r\n      }\r\n      setScreen(id);\r\n    }\r\n  };\r\n\r\n  const addIndicator = async () => {\r\n    const sectorName = allSectors.find((o) => o.id === sector)?.sector_name;\r\n    const focusAreaName = allFocusAreas.find((o) => o.id === focusArea)?.title;\r\n    const res = await addDataToTable({\r\n      tableData: [\r\n        {\r\n          indicator_name: name,\r\n          indicator_display_name: name,\r\n          display_on_control_panel: 1,\r\n          sector_id: sector,\r\n          sector_name: sectorName,\r\n          focus_area: focusAreaName,\r\n          data_visibility: 'admin_panel',\r\n          indicator_type: indicatorType || 'Positive',\r\n          focus_area_id: focusArea,\r\n          indicator_from: 'Non-NFS',\r\n          state_dormant: stateDormant || 0,\r\n          indicator_dormant: indicatorDormant || 0,\r\n        },\r\n      ],\r\n      tableName: 'indicator_mappings',\r\n    });\r\n    if (res.data) {\r\n      setIndicator(res.data.data[0]);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <PageContainer title=\"Layout Manager\" description=\"Layout Manager\">\r\n      <div\r\n        style={{\r\n          width: '100%',\r\n          display: 'flex',\r\n          alignItems: 'flex-start',\r\n          flexDirection: 'column',\r\n          marginLeft: '100px',\r\n        }}\r\n      >\r\n        <div\r\n          id={'LAYOUT_TOP'}\r\n          style={{\r\n            width: '100%',\r\n            display: 'flex',\r\n            flexDirection: 'row',\r\n            flexWrap: 'wrap',\r\n            gap: '2rem',\r\n            alignItems: 'flex-start',\r\n          }}\r\n        >\r\n          <Typography\r\n            sx={{\r\n              '@media only screen and (min-width: 3600px)': {\r\n                fontSize: '4rem',\r\n              },\r\n              '@media only screen and (max-width: 3600px)': {\r\n                fontSize: '1.6rem',\r\n              },\r\n              fontWeight: 'bold',\r\n              whiteSpace: 'nowrap',\r\n            }}\r\n          >\r\n            {t(props.title)}\r\n          </Typography>\r\n\r\n          {indicator ? (\r\n            <>\r\n              <FormControl\r\n                sx={{\r\n                  '@media only screen and (min-width: 3600px)': {\r\n                    minWidth: '1200px',\r\n                  },\r\n                  '@media only screen and (max-width: 3600px)': {\r\n                    minWidth: '200px',\r\n                  },\r\n                  ml: '20px',\r\n                  mr: '20px',\r\n                }}\r\n              >\r\n                <Select\r\n                  labelId=\"demo-simple-select-label\"\r\n                  id=\"demo-simple-select\"\r\n                  displayEmpty\r\n                  value={screen}\r\n                  placeholder={t('select_display_screen')}\r\n                  sx={{\r\n                    display: 'flex',\r\n                    alignItems: 'center',\r\n                    justifyContent: 'center',\r\n                    textAlign: 'center',\r\n                  }}\r\n                  renderValue={(selected) => {\r\n                    if (selected === '') {\r\n                      return <>{t('select_display_screen')}</>;\r\n                    }\r\n                    const name = SCREENS.find((o) => o.name === selected);\r\n                    if (name) {\r\n                      return <>{t(name.name)}</>;\r\n                    }\r\n                  }}\r\n                  onChange={(e) => {\r\n                    getLayoutDetails(e.target.value);\r\n                  }}\r\n                >\r\n                  <MenuItem disabled value=\"\">\r\n                    <em>{t('select_display_screen')}</em>\r\n                  </MenuItem>\r\n                  {SCREENS.map((o, index) => {\r\n                    return (\r\n                      <MenuItem key={index} value={o.name}>\r\n                        {t(o.name)}\r\n                      </MenuItem>\r\n                    );\r\n                  })}\r\n                </Select>\r\n              </FormControl>\r\n            </>\r\n          ) : (\r\n            <>\r\n              {allSectors && allSectors?.length > 0 && (\r\n                <FormControl\r\n                  sx={{\r\n                    '@media only screen and (min-width: 3600px)': {\r\n                      minWidth: '1200px',\r\n                    },\r\n                    '@media only screen and (max-width: 3600px)': {\r\n                      minWidth: '200px',\r\n                    },\r\n                    ml: '20px',\r\n                    mr: '20px',\r\n                  }}\r\n                >\r\n                  <Select\r\n                    labelId=\"demo-simple-select-label\"\r\n                    id=\"demo-simple-select\"\r\n                    displayEmpty\r\n                    value={sector}\r\n                    placeholder={t('select_sector')}\r\n                    sx={{\r\n                      display: 'flex',\r\n                      alignItems: 'center',\r\n                      justifyContent: 'center',\r\n                      textAlign: 'center',\r\n                    }}\r\n                    renderValue={(selected) => {\r\n                      if (selected === '') {\r\n                        return <>{t('select_sector')}</>;\r\n                      }\r\n                      const name = allSectors.find((o) => o.id === selected);\r\n                      if (name) {\r\n                        return <>{t(name.sector_name)}</>;\r\n                      }\r\n                    }}\r\n                    onChange={(e) => {\r\n                      setSector(e.target.value);\r\n                      getFocusAreas(e.target.value);\r\n                    }}\r\n                  >\r\n                    <MenuItem disabled value=\"\">\r\n                      <em>{t('select_sector')}</em>\r\n                    </MenuItem>\r\n                    {allSectors.map((o, index) => {\r\n                      return (\r\n                        <MenuItem key={index} value={o.id}>\r\n                          {t(o.sector_name)}\r\n                        </MenuItem>\r\n                      );\r\n                    })}\r\n                  </Select>\r\n                </FormControl>\r\n              )}\r\n              {allFocusAreas && allFocusAreas?.length > 0 && (\r\n                <FormControl\r\n                  sx={{\r\n                    '@media only screen and (min-width: 3600px)': {\r\n                      minWidth: '1200px',\r\n                    },\r\n                    '@media only screen and (max-width: 3600px)': {\r\n                      minWidth: '200px',\r\n                    },\r\n                    ml: '20px',\r\n                    mr: '20px',\r\n                  }}\r\n                >\r\n                  <Select\r\n                    labelId=\"demo-simple-select-label1\"\r\n                    id=\"demo-simple-select1\"\r\n                    displayEmpty\r\n                    value={focusArea}\r\n                    placeholder={t('select_focus_area')}\r\n                    sx={{\r\n                      display: 'flex',\r\n                      alignItems: 'center',\r\n                      justifyContent: 'center',\r\n                      textAlign: 'center',\r\n                    }}\r\n                    renderValue={(selected) => {\r\n                      if (selected === '') {\r\n                        return <>{t('select_focus_area')}</>;\r\n                      }\r\n                      const name = allFocusAreas.find((o) => o.id === selected);\r\n                      if (name) {\r\n                        return <>{t(name.title)}</>;\r\n                      }\r\n                    }}\r\n                    onChange={(e) => {\r\n                      setFocusArea(e.target.value);\r\n                      getIndicators(e.target.value);\r\n                    }}\r\n                  >\r\n                    <MenuItem disabled value=\"\">\r\n                      <em>{t('select_focus_area')}</em>\r\n                    </MenuItem>\r\n                    {allFocusAreas.map((o, index) => {\r\n                      return (\r\n                        <MenuItem key={index} value={o.id}>\r\n                          {t(o.title)}\r\n                        </MenuItem>\r\n                      );\r\n                    })}\r\n                  </Select>\r\n                </FormControl>\r\n              )}\r\n              {(focusArea || focusArea === 0) && (\r\n                <>\r\n                  {isNewIndicator ? (\r\n                    <>\r\n                      <Input\r\n                        id={'name'}\r\n                        value={name}\r\n                        placeholder={'enter_indicator_name'}\r\n                        onChange={setName}\r\n                        customheight={'6px'}\r\n                      />\r\n                      <FormControl\r\n                        sx={{\r\n                          '@media only screen and (min-width: 3600px)': {\r\n                            minWidth: '800px',\r\n                          },\r\n                          '@media only screen and (max-width: 3600px)': {\r\n                            minWidth: '200px',\r\n                          },\r\n                          ml: '20px',\r\n                          mr: '20px',\r\n                        }}\r\n                      >\r\n                        <Select\r\n                          labelId=\"demo-simple-select-label\"\r\n                          id=\"demo-simple-select\"\r\n                          displayEmpty\r\n                          value={indicatorType}\r\n                          placeholder={t('select_indicator_type')}\r\n                          sx={{\r\n                            display: 'flex',\r\n                            alignItems: 'center',\r\n                            justifyContent: 'center',\r\n                            textAlign: 'center',\r\n                          }}\r\n                          renderValue={(selected) => {\r\n                            if (selected === '') {\r\n                              return <>{t('select_indicator_type')}</>;\r\n                            }\r\n                            const name = indicatorTypes.find((o) => o.id === selected);\r\n                            if (name) {\r\n                              return <>{t(name.name)}</>;\r\n                            }\r\n                          }}\r\n                          onChange={(e) => {\r\n                            setIndicatorType(e.target.value);\r\n                          }}\r\n                        >\r\n                          <MenuItem disabled value=\"\">\r\n                            <em>{t('select_indicator_type')}</em>\r\n                          </MenuItem>\r\n                          {indicatorTypes.map((o, index) => {\r\n                            return (\r\n                              <MenuItem key={index} value={o.id}>\r\n                                {t(o.name)}\r\n                              </MenuItem>\r\n                            );\r\n                          })}\r\n                        </Select>\r\n                      </FormControl>\r\n                      <FormControl\r\n                        sx={{\r\n                          '@media only screen and (min-width: 3600px)': {\r\n                            minWidth: '800px',\r\n                          },\r\n                          '@media only screen and (max-width: 3600px)': {\r\n                            minWidth: '200px',\r\n                          },\r\n                          ml: '20px',\r\n                          mr: '20px',\r\n                        }}\r\n                      >\r\n                        <Select\r\n                          labelId=\"demo-simple-select-label\"\r\n                          id=\"demo-simple-select\"\r\n                          displayEmpty\r\n                          value={indicatorDormant}\r\n                          placeholder={t('select_indicator_dormant')}\r\n                          sx={{\r\n                            display: 'flex',\r\n                            alignItems: 'center',\r\n                            justifyContent: 'center',\r\n                            textAlign: 'center',\r\n                          }}\r\n                          renderValue={(selected) => {\r\n                            if (selected === '') {\r\n                              return <>{t('select_indicator_dormant')}</>;\r\n                            }\r\n                            const name = indicatorDormants.find((o) => o.id === selected);\r\n                            if (name) {\r\n                              return <>{t(name.name)}</>;\r\n                            }\r\n                          }}\r\n                          onChange={(e) => {\r\n                            setIndicatorDormant(e.target.value);\r\n                          }}\r\n                        >\r\n                          <MenuItem disabled value=\"\">\r\n                            <em>{t('select_indicator_dormant')}</em>\r\n                          </MenuItem>\r\n                          {indicatorDormants.map((o, index) => {\r\n                            return (\r\n                              <MenuItem key={index} value={o.id}>\r\n                                {t(o.name)}\r\n                              </MenuItem>\r\n                            );\r\n                          })}\r\n                        </Select>\r\n                      </FormControl>\r\n                      <FormControl\r\n                        sx={{\r\n                          '@media only screen and (min-width: 3600px)': {\r\n                            minWidth: '800px',\r\n                          },\r\n                          '@media only screen and (max-width: 3600px)': {\r\n                            minWidth: '200px',\r\n                          },\r\n                          ml: '20px',\r\n                          mr: '20px',\r\n                        }}\r\n                      >\r\n                        <Select\r\n                          labelId=\"demo-simple-select-label\"\r\n                          id=\"demo-simple-select\"\r\n                          displayEmpty\r\n                          value={stateDormant}\r\n                          placeholder={t('select_state_dormant')}\r\n                          sx={{\r\n                            display: 'flex',\r\n                            alignItems: 'center',\r\n                            justifyContent: 'center',\r\n                            textAlign: 'center',\r\n                          }}\r\n                          renderValue={(selected) => {\r\n                            if (selected === '') {\r\n                              return <>{t('select_state_dormant')}</>;\r\n                            }\r\n                            const name = stateDormants.find((o) => o.id === selected);\r\n                            if (name) {\r\n                              return <>{t(name.name)}</>;\r\n                            }\r\n                          }}\r\n                          onChange={(e) => {\r\n                            setStateDormant(e.target.value);\r\n                          }}\r\n                        >\r\n                          <MenuItem disabled value=\"\">\r\n                            <em>{t('select_state_dormant')}</em>\r\n                          </MenuItem>\r\n                          {stateDormants.map((o, index) => {\r\n                            return (\r\n                              <MenuItem key={index} value={o.id}>\r\n                                {t(o.name)}\r\n                              </MenuItem>\r\n                            );\r\n                          })}\r\n                        </Select>\r\n                      </FormControl>\r\n                    </>\r\n                  ) : (\r\n                    <>\r\n                      {allIndicators?.length > 0 && (\r\n                        <>\r\n                          <FormControl\r\n                            sx={{\r\n                              '@media only screen and (min-width: 3600px)': {\r\n                                minWidth: '1200px',\r\n                              },\r\n                              '@media only screen and (max-width: 3600px)': {\r\n                                minWidth: '200px',\r\n                              },\r\n                              ml: '20px',\r\n                              mr: '20px',\r\n                            }}\r\n                          >\r\n                            <Select\r\n                              labelId=\"demo-simple-select-label\"\r\n                              id=\"demo-simple-select\"\r\n                              displayEmpty\r\n                              value={indicator}\r\n                              placeholder={t('select_existing_indicator')}\r\n                              sx={{\r\n                                display: 'flex',\r\n                                alignItems: 'center',\r\n                                justifyContent: 'center',\r\n                                textAlign: 'center',\r\n                              }}\r\n                              renderValue={(selected) => {\r\n                                if (selected === '') {\r\n                                  return <>{t('select_existing_indicator')}</>;\r\n                                }\r\n                                const name = allIndicators.find(\r\n                                  (o) => (o.indicator_id || o.id) === selected,\r\n                                );\r\n                                if (name) {\r\n                                  return <>{t(name.indicator_display_name)}</>;\r\n                                }\r\n                              }}\r\n                              onChange={(e) => {\r\n                                setIndicator(e.target.value);\r\n                              }}\r\n                            >\r\n                              <MenuItem disabled value=\"\">\r\n                                <em>{t('select_existing_indicator')}</em>\r\n                              </MenuItem>\r\n                              {allIndicators.map((o, index) => {\r\n                                return (\r\n                                  <MenuItem key={index} value={o.indicator_id || o.id}>\r\n                                    {t(o.indicator_display_name)}\r\n                                  </MenuItem>\r\n                                );\r\n                              })}\r\n                            </Select>\r\n                          </FormControl>\r\n                          {!isNewIndicator && <CustomFormLabel>OR</CustomFormLabel>}\r\n                        </>\r\n                      )}\r\n                    </>\r\n                  )}\r\n                  <Button\r\n                    color=\"secondary\"\r\n                    variant=\"contained\"\r\n                    size=\"large\"\r\n                    sx={{\r\n                      '@media only screen and (min-width: 3600px)': {\r\n                        fontSize: '4rem',\r\n                        minWidth: '150px',\r\n                        maxHeight: '100px',\r\n                      },\r\n                      '@media only screen and (max-width: 3600px)': {\r\n                        minWidth: '40px',\r\n                      },\r\n                      ml: '20px',\r\n                    }}\r\n                    onClick={() => {\r\n                      if (!isNewIndicator) {\r\n                        setIsNewIndicator(true);\r\n                      } else {\r\n                        addIndicator();\r\n                      }\r\n                    }}\r\n                  >\r\n                    {isNewIndicator ? t('add') : t('add_indicator')}\r\n                  </Button>\r\n                </>\r\n              )}\r\n            </>\r\n          )}\r\n        </div>\r\n        <Layout\r\n          screen={screen}\r\n          step={step}\r\n          setStep={setStep}\r\n          level={3}\r\n          levelRefID={indicator}\r\n          displays={displays}\r\n          setDisplays={setDisplays}\r\n          layoutsAdded={layoutsAdded}\r\n          socket={props.socket}\r\n          count={props.count}\r\n        />\r\n      </div>\r\n    </PageContainer>\r\n  );\r\n};\r\n\r\nexport default IndicatorLayoutManager;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport PageContainer from '../../../components/container/PageContainer';\r\nimport { Typography, FormControl, Select, MenuItem } from '@mui/material';\r\nimport { SCREENS } from '../../../constants';\r\nimport { getLevelsRefData, getLayoutConfig } from '../../../api';\r\nimport Layout from '../layout';\r\n\r\nconst StateLayoutManager = (props) => {\r\n  const { t } = useTranslation();\r\n  const [screen, setScreen] = useState('');\r\n  const [sector, setSector] = useState('');\r\n  const [focusArea, setFocusArea] = useState('');\r\n  const [indicator, setIndicator] = useState('');\r\n  const [allSectors, setAllSectors] = useState([]);\r\n  const [allFocusAreas, setAllFocusAreas] = useState([]);\r\n  const [allIndicators, setAllIndicators] = useState([]);\r\n  const [displays, setDisplays] = useState({});\r\n  const [layoutsAdded, setLayoutsAdded] = useState(false);\r\n  const { step, setStep } = props;\r\n\r\n  useEffect(() => {\r\n    const getSectors = async () => {\r\n      const res = await getLevelsRefData({\r\n        level_id: 1,\r\n        filters: [\r\n          {\r\n            column_name: 'created_from',\r\n            column_value: 'admin_panel',\r\n          },\r\n        ],\r\n      });\r\n      if (res.data) {\r\n        setAllSectors(res.data);\r\n      }\r\n    };\r\n    getSectors();\r\n  }, []);\r\n\r\n  const getFocusAreas = async (id) => {\r\n    const res = await getLevelsRefData({\r\n      level_id: 2,\r\n      filters: [\r\n        {\r\n          column_name: 'sector_id',\r\n          column_value: id?.toString(),\r\n        },\r\n        {\r\n          column_name: 'created_from',\r\n          column_value: 'admin_panel',\r\n        },\r\n      ],\r\n    });\r\n    if (res.data) {\r\n      setAllFocusAreas(res.data);\r\n    }\r\n  };\r\n\r\n  const getIndicators = async (id) => {\r\n    let focusArea = allFocusAreas.find((o) => o.id === id);\r\n    const res = await getLevelsRefData({\r\n      level_id: 3,\r\n      filters: [\r\n        {\r\n          column_name: 'sector_id',\r\n          column_value: sector?.toString(),\r\n        },\r\n        {\r\n          column_name: 'focus_area',\r\n          column_value: focusArea.title,\r\n        },\r\n        {\r\n          column_name: 'state_dormant',\r\n          column_value: '0',\r\n        },\r\n        {\r\n          column_name: 'created_from',\r\n          column_value: 'admin_panel',\r\n        },\r\n      ],\r\n    });\r\n    if (res.data) {\r\n      setAllIndicators(res.data);\r\n    }\r\n  };\r\n\r\n  const getLayoutDetails = async (id) => {\r\n    const res = await getLayoutConfig({\r\n      level_id: 4,\r\n      level_ref_id: indicator?.toString(),\r\n      screen_type: id,\r\n    });\r\n    if (res.data) {\r\n      if (res.data.length > 0) {\r\n        setLayoutsAdded(true);\r\n        let finalData = [];\r\n        res.data.forEach((o) => {\r\n          finalData.push({\r\n            ...o,\r\n            config_id: o.id,\r\n            id: o.component_id,\r\n            component: o.component_name,\r\n            slug: o.component_slug,\r\n            x: o.x_start,\r\n            width: o.x_end,\r\n            y: o.y_start,\r\n            height: o.y_end,\r\n            isUpdated: true,\r\n          });\r\n        });\r\n        setDisplays({ ...displays, [id]: finalData });\r\n      } else {\r\n        setLayoutsAdded(false);\r\n        if (step === 'LAYOUT_MANAGER') {\r\n          setDisplays({\r\n            ...displays,\r\n            [id]:\r\n              displays[id]?.length > 0\r\n                ? displays[id]\r\n                : [\r\n                    {\r\n                      component: '',\r\n                      slug: '',\r\n                    },\r\n                  ],\r\n          });\r\n        }\r\n      }\r\n      setScreen(id);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <PageContainer title=\"Layout Manager\" description=\"Layout Manager\">\r\n      <div\r\n        style={{\r\n          width: '100%',\r\n          display: 'flex',\r\n          alignItems: 'flex-start',\r\n          flexDirection: 'column',\r\n          marginLeft: '100px',\r\n        }}\r\n      >\r\n        <div\r\n          style={{\r\n            width: '100%',\r\n            display: 'flex',\r\n            flexDirection: 'row',\r\n            flexWrap: 'wrap',\r\n            gap: '2rem',\r\n            alignItems: 'flex-start',\r\n          }}\r\n        >\r\n          <Typography\r\n            sx={{\r\n              '@media only screen and (min-width: 3600px)': {\r\n                fontSize: '4rem',\r\n              },\r\n              '@media only screen and (max-width: 3600px)': {\r\n                fontSize: '1.6rem',\r\n              },\r\n              fontWeight: 'bold',\r\n              whiteSpace: 'nowrap',\r\n            }}\r\n          >\r\n            {t(props.title)}\r\n          </Typography>\r\n          {allSectors && allSectors?.length > 0 && (\r\n            <FormControl\r\n              sx={{\r\n                '@media only screen and (min-width: 3600px)': {\r\n                  minWidth: '1200px',\r\n                },\r\n                '@media only screen and (max-width: 3600px)': {\r\n                  minWidth: '200px',\r\n                },\r\n                ml: '20px',\r\n                mr: '20px',\r\n              }}\r\n            >\r\n              <Select\r\n                labelId=\"demo-simple-select-label\"\r\n                id=\"demo-simple-select\"\r\n                displayEmpty\r\n                value={sector}\r\n                placeholder={t('select_sector')}\r\n                sx={{\r\n                  display: 'flex',\r\n                  alignItems: 'center',\r\n                  justifyContent: 'center',\r\n                  textAlign: 'center',\r\n                }}\r\n                renderValue={(selected) => {\r\n                  if (selected === '') {\r\n                    return <>{t('select_sector')}</>;\r\n                  }\r\n                  const name = allSectors.find((o) => o.id === selected);\r\n                  if (name) {\r\n                    return <>{t(name.sector_name)}</>;\r\n                  }\r\n                }}\r\n                onChange={(e) => {\r\n                  setSector(e.target.value);\r\n                  getFocusAreas(e.target.value);\r\n                }}\r\n              >\r\n                <MenuItem disabled value=\"\">\r\n                  <em>{t('select_sector')}</em>\r\n                </MenuItem>\r\n                {allSectors.map((o, index) => {\r\n                  return (\r\n                    <MenuItem key={index} value={o.id}>\r\n                      {t(o.sector_name)}\r\n                    </MenuItem>\r\n                  );\r\n                })}\r\n              </Select>\r\n            </FormControl>\r\n          )}\r\n          {allFocusAreas && allFocusAreas?.length > 0 && (\r\n            <FormControl\r\n              sx={{\r\n                '@media only screen and (min-width: 3600px)': {\r\n                  minWidth: '1200px',\r\n                },\r\n                '@media only screen and (max-width: 3600px)': {\r\n                  minWidth: '200px',\r\n                },\r\n                ml: '20px',\r\n                mr: '20px',\r\n              }}\r\n            >\r\n              <Select\r\n                labelId=\"demo-simple-select-label1\"\r\n                id=\"demo-simple-select1\"\r\n                displayEmpty\r\n                value={focusArea}\r\n                placeholder={t('select_focus_area')}\r\n                sx={{\r\n                  display: 'flex',\r\n                  alignItems: 'center',\r\n                  justifyContent: 'center',\r\n                  textAlign: 'center',\r\n                }}\r\n                renderValue={(selected) => {\r\n                  if (selected === '') {\r\n                    return <>{t('select_focus_area')}</>;\r\n                  }\r\n                  const name = allFocusAreas.find((o) => o.id === selected);\r\n                  if (name) {\r\n                    return <>{t(name.title)}</>;\r\n                  }\r\n                }}\r\n                onChange={(e) => {\r\n                  setFocusArea(e.target.value);\r\n                  getIndicators(e.target.value);\r\n                }}\r\n              >\r\n                <MenuItem disabled value=\"\">\r\n                  <em>{t('select_focus_area')}</em>\r\n                </MenuItem>\r\n                {allFocusAreas.map((o, index) => {\r\n                  return (\r\n                    <MenuItem key={index} value={o.id}>\r\n                      {t(o.title)}\r\n                    </MenuItem>\r\n                  );\r\n                })}\r\n              </Select>\r\n            </FormControl>\r\n          )}\r\n          {allIndicators && allIndicators?.length > 0 && (\r\n            <FormControl\r\n              sx={{\r\n                '@media only screen and (min-width: 3600px)': {\r\n                  minWidth: '1200px',\r\n                },\r\n                '@media only screen and (max-width: 3600px)': {\r\n                  minWidth: '200px',\r\n                },\r\n                ml: '20px',\r\n                mr: '20px',\r\n              }}\r\n            >\r\n              <Select\r\n                labelId=\"demo-simple-select-label1\"\r\n                id=\"demo-simple-select1\"\r\n                displayEmpty\r\n                value={indicator}\r\n                placeholder={t('select_indicator')}\r\n                sx={{\r\n                  display: 'flex',\r\n                  alignItems: 'center',\r\n                  justifyContent: 'center',\r\n                  textAlign: 'center',\r\n                }}\r\n                renderValue={(selected) => {\r\n                  if (selected === '') {\r\n                    return <>{t('select_indicator')}</>;\r\n                  }\r\n                  const name = allIndicators.find((o) => o.indicator_id === selected);\r\n                  if (name) {\r\n                    return <>{t(name.indicator_display_name)}</>;\r\n                  }\r\n                }}\r\n                onChange={(e) => {\r\n                  setIndicator(e.target.value);\r\n                }}\r\n              >\r\n                <MenuItem disabled value=\"\">\r\n                  <em>{t('select_indicator')}</em>\r\n                </MenuItem>\r\n                {allIndicators.map((o, index) => {\r\n                  return (\r\n                    <MenuItem key={index} value={o.indicator_id}>\r\n                      {t(o.indicator_display_name)}\r\n                    </MenuItem>\r\n                  );\r\n                })}\r\n              </Select>\r\n            </FormControl>\r\n          )}\r\n          {indicator && (\r\n            <>\r\n              <FormControl\r\n                sx={{\r\n                  '@media only screen and (min-width: 3600px)': {\r\n                    minWidth: '1200px',\r\n                  },\r\n                  '@media only screen and (max-width: 3600px)': {\r\n                    minWidth: '200px',\r\n                  },\r\n                  ml: '20px',\r\n                  mr: '20px',\r\n                }}\r\n              >\r\n                <Select\r\n                  labelId=\"demo-simple-select-label\"\r\n                  id=\"demo-simple-select\"\r\n                  displayEmpty\r\n                  value={screen}\r\n                  placeholder={t('select_display_screen')}\r\n                  sx={{\r\n                    display: 'flex',\r\n                    alignItems: 'center',\r\n                    justifyContent: 'center',\r\n                    textAlign: 'center',\r\n                  }}\r\n                  renderValue={(selected) => {\r\n                    if (selected === '') {\r\n                      return <>{t('select_display_screen')}</>;\r\n                    }\r\n                    const name = SCREENS.find((o) => o.name === selected);\r\n                    if (name) {\r\n                      return <>{t(name.name)}</>;\r\n                    }\r\n                  }}\r\n                  onChange={(e) => {\r\n                    getLayoutDetails(e.target.value);\r\n                  }}\r\n                >\r\n                  <MenuItem disabled value=\"\">\r\n                    <em>{t('select_display_screen')}</em>\r\n                  </MenuItem>\r\n                  {SCREENS.map((o, index) => {\r\n                    return (\r\n                      <MenuItem key={index} value={o.name}>\r\n                        {t(o.name)}\r\n                      </MenuItem>\r\n                    );\r\n                  })}\r\n                </Select>\r\n              </FormControl>\r\n            </>\r\n          )}\r\n        </div>\r\n        <Layout\r\n          screen={screen}\r\n          step={step}\r\n          setStep={setStep}\r\n          displays={displays}\r\n          setDisplays={setDisplays}\r\n          layoutsAdded={layoutsAdded}\r\n          level={3}\r\n          levelRefID={indicator}\r\n          socket={props.socket}\r\n          count={props.count}\r\n        />\r\n      </div>\r\n    </PageContainer>\r\n  );\r\n};\r\n\r\nexport default StateLayoutManager;\r\n","import React, { useEffect, useState, useRef } from 'react';\r\nimport PageContainer from '../../../components/container/PageContainer';\r\nimport { Typography, Box, FormControl, Select, MenuItem } from '@mui/material';\r\nimport { useTranslation } from 'react-i18next';\r\nimport SectorsLayoutManager from '../../layoutManager/sectors';\r\nimport FocusAreaLayoutManager from '../../layoutManager/focusArea';\r\nimport IndicatorsLayoutManager from '../../layoutManager/indicators';\r\nimport StateLayoutManager from '../../layoutManager/states';\r\nimport { getLevels } from '../../../api';\r\nimport FeatherIcon from 'feather-icons-react';\r\nimport { io } from 'socket.io-client';\r\nimport { SOCKET_CONNECTION_URL, DISCONNECTION, CONNECTION } from '../../../constants';\r\n\r\nconst AddData = (props) => {\r\n  const { t } = useTranslation();\r\n  const socket = useRef(undefined);\r\n  const [type, setType] = useState('');\r\n  const [levels, setLevels] = useState([]);\r\n  const [step, setStep] = useState('LAYOUT_MANAGER');\r\n  const countRef = useRef(0);\r\n\r\n  useEffect(() => {\r\n    const getLevelsData = async () => {\r\n      const res = await getLevels();\r\n      if (res.data) {\r\n        setLevels(res.data);\r\n      }\r\n    };\r\n    getLevelsData();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    socket.current = io(SOCKET_CONNECTION_URL);\r\n    socket.current.on(CONNECTION, () => {\r\n      console.log('connected to server');\r\n    });\r\n    socket.current.on(DISCONNECTION, () => {\r\n      console.log('Disconnected');\r\n    });\r\n    return () => {\r\n      socket.current.emit('close', { destination: 'DISPLAY_1', type: 'all' });\r\n      socket.current.emit('close', { destination: 'DISPLAY_2', type: 'all' });\r\n      socket.current.emit('close', { destination: 'DISPLAY_3', type: 'all' });\r\n      socket.current.emit('close', { destination: 'WIDGET_BAR', type: 'all' });\r\n      if (socket.current && socket.current.connected) {\r\n        socket.current.disconnect();\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <PageContainer title=\"Add Data\" description=\"Add Data\">\r\n      <div\r\n        style={{\r\n          display: 'flex',\r\n          alignItems: 'center',\r\n          flexDirection: 'column',\r\n        }}\r\n      >\r\n        {type && (\r\n          <Box sx={{ mr: 'auto', position: 'absolute', left: 200, cursor: 'pointer' }}>\r\n            <FeatherIcon\r\n              icon=\"arrow-left\"\r\n              width=\"28\"\r\n              height=\"40\"\r\n              onClick={() => {\r\n                if (step === 'LAYOUT_MANAGER') {\r\n                  setType('');\r\n                }\r\n                if (step !== 'LAYOUT_MANAGER') {\r\n                  setStep('LAYOUT_MANAGER');\r\n                }\r\n                socket.current.emit('close', { destination: 'DISPLAY_1', type: 'all' });\r\n                socket.current.emit('close', { destination: 'DISPLAY_2', type: 'all' });\r\n                socket.current.emit('close', { destination: 'DISPLAY_3', type: 'all' });\r\n                socket.current.emit('close', { destination: 'WIDGET_BAR', type: 'all' });\r\n              }}\r\n            />\r\n          </Box>\r\n        )}\r\n        {!type && levels?.length > 0 && (\r\n          <>\r\n            <Typography\r\n              sx={{\r\n                '@media only screen and (min-width: 3600px)': {\r\n                  fontSize: '4rem',\r\n                },\r\n                '@media only screen and (max-width: 3600px)': {\r\n                  fontSize: '1.6rem',\r\n                },\r\n                fontWeight: 'bold',\r\n                whiteSpace: 'nowrap',\r\n              }}\r\n            >\r\n              {t('add_data')}\r\n            </Typography>\r\n            <Box>\r\n              <FormControl\r\n                fullWidth\r\n                sx={{\r\n                  m: 1,\r\n                  '@media only screen and (min-width: 3600px)': {\r\n                    minWidth: '1200px',\r\n                  },\r\n                  '@media only screen and (max-width: 3600px)': {\r\n                    minWidth: '600px',\r\n                  },\r\n                }}\r\n              >\r\n                <Select\r\n                  labelId=\"demo-simple-select-label\"\r\n                  id=\"demo-simple-select\"\r\n                  displayEmpty\r\n                  value={type}\r\n                  placeholder={t('select_type')}\r\n                  sx={{\r\n                    display: 'flex',\r\n                    alignItems: 'center',\r\n                    justifyContent: 'center',\r\n                    textAlign: 'center',\r\n                  }}\r\n                  renderValue={(selected) => {\r\n                    if (selected === '') {\r\n                      return <em>{t('select_type')}</em>;\r\n                    }\r\n                    if (selected === 'SECTOR') {\r\n                      return <em>{t('add_sector')}</em>;\r\n                    }\r\n                    if (selected === 'FOCUS_AREA') {\r\n                      return <em>{t('add_focus_area')}</em>;\r\n                    }\r\n                    if (selected === 'INDICATOR') {\r\n                      return <em>{t('add_indicator')}</em>;\r\n                    }\r\n                  }}\r\n                  onChange={(e) => {\r\n                    setType(e.target.value);\r\n                    socket.current.emit('close', { destination: 'DISPLAY_1', type: 'all' });\r\n                    socket.current.emit('close', { destination: 'DISPLAY_2', type: 'all' });\r\n                    socket.current.emit('close', { destination: 'DISPLAY_3', type: 'all' });\r\n                    socket.current.emit('close', { destination: 'WIDGET_BAR', type: 'all' });\r\n                    countRef.current = 0;\r\n                  }}\r\n                >\r\n                  <MenuItem disabled value=\"\">\r\n                    <em>{t('select_type')}</em>\r\n                  </MenuItem>\r\n                  {levels.map((o, index) => {\r\n                    return (\r\n                      <MenuItem key={index} value={o.id}>\r\n                        <em>{o.name}</em>\r\n                      </MenuItem>\r\n                    );\r\n                  })}\r\n                </Select>\r\n              </FormControl>\r\n            </Box>\r\n          </>\r\n        )}\r\n        {type && type === 1 && (\r\n          <SectorsLayoutManager\r\n            title={'overview_screen'}\r\n            step={step}\r\n            setStep={setStep}\r\n            socket={socket.current}\r\n            count={countRef}\r\n          />\r\n        )}\r\n        {type && type === 2 && (\r\n          <FocusAreaLayoutManager\r\n            title={'focus_area_selection_screen'}\r\n            step={step}\r\n            setStep={setStep}\r\n            socket={socket.current}\r\n            count={countRef}\r\n          />\r\n        )}\r\n        {type && type === 3 && (\r\n          <IndicatorsLayoutManager\r\n            title={'indicators_selection_screen'}\r\n            step={step}\r\n            setStep={setStep}\r\n            socket={socket.current}\r\n            count={countRef}\r\n          />\r\n        )}\r\n        {type && type === 4 && (\r\n          <StateLayoutManager\r\n            title={'state_selection_screen'}\r\n            step={step}\r\n            setStep={setStep}\r\n            socket={socket.current}\r\n            count={countRef}\r\n          />\r\n        )}\r\n      </div>\r\n    </PageContainer>\r\n  );\r\n};\r\nexport default AddData;\r\n"],"names":["BASE_URL","BACKEND_CONNECTION_URL","axios","defaults","baseURL","getTables","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","get","abrupt","sent","stop","apply","arguments","getTableData","_ref2","_callee2","data","_context2","concat","tableName","limit","skip","_x","getLevels","_ref3","_callee3","_context3","getComponents","_ref4","_callee4","_context4","getLevelsRefData","_ref5","_callee5","payload","_context5","post","_x2","getLayoutConfig","_ref6","_callee6","_context6","_x3","createLayoutConfig","_ref7","_callee7","_context7","_x4","addDataToTable","_ref8","_callee8","_context8","_x5","createTable","_ref9","_callee9","queryParams","_context9","FormData","append","file","table_description","selectionType","configID","_x6","loginUser","_ref10","_callee10","_context10","_x7","addDataToTableFile","_ref11","_callee11","_context11","_x8","createBuilder","_ref12","_callee12","_context12","_x9","getBuilder","_ref13","_callee13","_context13","_x10","title","description","children","_jsxs","_Fragment","Helmet","_jsx","name","content","CustomFormLabel","styled","props","Typography","_objectSpread","variant","component","htmlFor","marginBottom","marginTop","display","TextField","theme","customheight","color","opacity","borderColor","palette","mode","backgroundColor","input","border","height","fontSize","padding","t","useTranslation","keyboard","useRef","_useState","useState","undefined","_useState2","_slicedToArray","isFocus","setIsFocus","_useState3","_useState4","layout","setLayout","SHOW_VIRTUAL_KEYBOARD","type","style","position","inset","width","zIndex","onClick","label","id","CustomTextField","fullWidth","inputRef","inputFile","placeholder","onFocus","value","inputProps","accept","onChange","e","target","files","sx","textFieldStyles","top","left","Keyboard","keyboardRef","r","current","layoutName","onKeyPress","button","setTimeout","WIDTH","HEIGHT","DIVISION_MULTIPLE","SCREENS","x","y","VERTICAL_SCREENS","HORIZONTAL_SCREENS","LINE_CHART","SMOOTH_LINE_CHART","AREA_CHART","STACKED_LINE_CHART","STACKED_LINE_AREA_CHART","PIE_CHART","DONUT_CHART","HALF_DONUT_CHART","COLUMN_CHART","BAR_CHART","POLAR_CHART","ROSE_PIE_CHART","FUNNEL_CHART","INDIA_STATE_HEAT_MAP","INDIA_DISTRICT_HEAT_MAP","STATE_DISTRICT_HEAT_MAP","TREEMAP_CHART","STACKED_BAR_CHART","HORIZONTAL_STACKED_BAR_CHART","POLAR_STACKED_BAR_CHART","SCATTER_PLOT_CHART","BAR_WITH_LINE","TEXT_COMPONENT","IFRAME_COMPONENT","IMAGE_COMPONENT","VIDEO_COMPONENT","process","SOCKET_CONNECTION_URL","CONNECTION","DISCONNECTION","snakeToTitleCase","snakeStr","split","map","word","charAt","toUpperCase","slice","toLowerCase","join","formatCSVToDataArray","csv","parsedData","Papa","skipEmptyLines","errors","length","console","error","row","cell","timeEnd","isResizingRef","isDragggingRef","Rnd","alignItems","justifyContent","background","overflow","transform","onDragStop","d","index","maxWidth","maxHeight","handleDragStop","onResizeStart","onResizeStop","direction","ref","delta","parseInt","setSize","handleResizeStop","default","size","textAlign","className","state_name","state_lgd_code","state_abbreviation","state_area","state_total_population","is_state_or_ut","colors","_props$file","_props$file2","_props$custom_css","_props$custom_css2","_props$custom_css3","_props$custom_css5","headers","setHeaders","numberOfXLines","setNumberOfXLines","_useState5","_useState6","numberOfYLines","setNumberOfYLines","_useState7","_useState8","xAxisSelections","setXAxisSelections","_useState9","_useState10","yAxisSelections","setYAxisSelections","_useState11","_useState12","legends","setLegends","_useState13","_useState14","numberOfBars","setNumberOfBars","_useState15","_useState16","barSelection","setBarSelection","_useState17","_useState18","dataType","setDataType","_useState19","_useState20","tables","setTables","dataTypes","useEffect","reader","FileReader","onload","fileData","result","_data$","o","getUniqueKeys","onerror","readAsText","getTablesData","res","table_name","Object","keys","handleLegendInputChange","newLegends","_toConsumableArray","onTextChange","Box","flexDirection","flexWrap","gap","edit","FormControl","minWidth","mr","Select","labelId","displayEmpty","renderValue","selected","find","MenuItem","disabled","header","Input","val","Button","ml","event","Number","Array","fill","handleNumberOfYChange","handleNumberOfXChange","handleNumberOfBarChange","from","_","React","newSelections","handleXAxisSelectionChange","handleYAxisSelectionChange","handleBarSelectionChange","x_axis_links","state_lgd_link","district_lgd_link","States","y_axis_links","x_label","y_label_1","y_label_2","text","heading","sub_heading","source","note","crop_type","custom_css","map_type","map_format","heat_map_color","_props$custom_css4","_SCREENS$find","_SCREENS$find2","_SCREENS$find3","_SCREENS$find4","_displays$screen","_displays$screen$filt","_displays$screen2","_displays$screen7","_displays$screen9","_displays$screen10","_displays$screen11","screen","step","setStep","displays","setDisplays","components","setComponents","alertMessage","setAlertMessage","setEdit","showPreview","setShowPreview","handleClose","reason","getComponentsData","handleSubmit","screens","i","_props$levelRefID","obj","_i","_props$levelRefID2","_obj","_res","_i2","_res$data","includes","push","config_id","z_axis_links","legend_colors","rotate_x_label","rotate_y_label_1","rotate_y_label_2","level_id","level","level_ref_id","levelRefID","toString","component_id","screen_type","x_start","x_end","y_start","y_end","component_slug","slug","_screens$index","_defineProperty","Snackbar","open","autoHideDuration","onClose","anchorOrigin","vertical","horizontal","Alert","severity","Grid","container","spacing","item","xs","_SCREENS$find5","_SCREENS$find6","_SCREENS$find7","_SCREENS$find8","boxSizing","filter","_createElement","LayoutComponent","key","arr","Math","round","fontWeight","whiteSpace","mt","_displays$screen6","m","_displays$screen3","_displays$screen4","isUpdated","allDisplayComp","_displays$screen5","splice","some","element","_displays$screen8","_o$custom_css","ComponentDetails","newScreen","_displays$screen12","_SCREENS$find9","_SCREENS$find10","_SCREENS$find11","_SCREENS$find12","_SCREENS$find13","newX","count","socket","emit","destination","selectedLanguage","componentType","_displays$screen13","_SCREENS$find14","_SCREENS$find15","_SCREENS$find16","_SCREENS$find17","_SCREENS$find18","setScreen","setName","sector","setSector","allSectors","setAllSectors","isNewSector","setIsNewSector","layoutsAdded","setLayoutsAdded","sectorName","setSectorName","getSectors","filters","column_name","column_value","getLayoutDetails","finalData","_displays$id","forEach","component_name","addNewSector","tableData","sector_name","sector_image_url","is_available","PageContainer","marginLeft","Layout","focusArea","setFocusArea","allFocusAreas","setAllFocusAreas","isNewFocusArea","setIsNewFocusArea","getFocusAreas","addNewFocusArea","_allSectors$find","sector_id","stateDormant","setStateDormant","indicatorDormant","setIndicatorDormant","indicatorType","setIndicatorType","_useState21","_useState22","allIndicators","setAllIndicators","_useState23","_useState24","isNewIndicator","setIsNewIndicator","_useState25","_useState26","_useState27","_useState28","indicator","setIndicator","indicatorTypes","stateDormants","indicatorDormants","getIndicators","addIndicator","_allFocusAreas$find","focusAreaName","indicator_name","indicator_display_name","display_on_control_panel","focus_area","data_visibility","indicator_type","focus_area_id","indicator_from","state_dormant","indicator_dormant","indicator_id","setType","levels","setLevels","countRef","getLevelsData","io","on","log","connected","disconnect","cursor","FeatherIcon","icon","SectorsLayoutManager","FocusAreaLayoutManager","IndicatorsLayoutManager","StateLayoutManager"],"sourceRoot":""}